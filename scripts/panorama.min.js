function init(){scene=new THREE.Scene;var a=container.innerWidth(),b=container.innerHeight();camera=new THREE.PerspectiveCamera(65,a/b,1,2e4),scene.add(camera),renderer=new THREE.WebGLRenderer,renderer.setSize(a,b),container.append(renderer.domElement),controls=new THREE.PointerLockControls(camera),scene.add(controls.getObject());for(var c=__resources+dokucraft_pack_path+"/panorama/",d=["panorama1","panorama3","panorama4","panorama5","panorama0","panorama2"],e=".png",f=new THREE.CubeGeometry((-5e3),5e3,5e3),g=[],h=0;h<6;h++)g.push(new THREE.MeshBasicMaterial({map:THREE.ImageUtils.loadTexture(c+d[h]+e)}));var i=new THREE.MeshFaceMaterial(g),j=new THREE.Mesh(f,i);scene.add(j),$("body").css("overflow-y","hidden"),container.css("display","block"),controls.enabled=!0}function animate(){requestAnimationFrame(animate),renderer.render(scene,camera)}var THREE=THREE||{REVISION:"60"};self.console=self.console||{info:function(){},log:function(){},debug:function(){},warn:function(){},error:function(){}},String.prototype.trim=String.prototype.trim||function(){return this.replace(/^\s+|\s+$/g,"")},THREE.extend=function(a,b){if(Object.keys)for(var c=Object.keys(b),d=0,e=c.length;d<e;d++){var f=c[d];Object.defineProperty(a,f,Object.getOwnPropertyDescriptor(b,f))}else{var g={}.hasOwnProperty;for(var f in b)g.call(b,f)&&(a[f]=b[f])}return a},function(){for(var a=0,b=["ms","moz","webkit","o"],c=0;c<b.length&&!self.requestAnimationFrame;++c)self.requestAnimationFrame=self[b[c]+"RequestAnimationFrame"],self.cancelAnimationFrame=self[b[c]+"CancelAnimationFrame"]||self[b[c]+"CancelRequestAnimationFrame"];void 0===self.requestAnimationFrame&&void 0!==self.setTimeout&&(self.requestAnimationFrame=function(b){var c=Date.now(),d=Math.max(0,16-(c-a)),e=self.setTimeout(function(){b(c+d)},d);return a=c+d,e}),void 0===self.cancelAnimationFrame&&void 0!==self.clearTimeout&&(self.cancelAnimationFrame=function(a){self.clearTimeout(a)})}(),THREE.CullFaceNone=0,THREE.CullFaceBack=1,THREE.CullFaceFront=2,THREE.CullFaceFrontBack=3,THREE.FrontFaceDirectionCW=0,THREE.FrontFaceDirectionCCW=1,THREE.BasicShadowMap=0,THREE.PCFShadowMap=1,THREE.PCFSoftShadowMap=2,THREE.FrontSide=0,THREE.BackSide=1,THREE.DoubleSide=2,THREE.NoShading=0,THREE.FlatShading=1,THREE.SmoothShading=2,THREE.NoColors=0,THREE.FaceColors=1,THREE.VertexColors=2,THREE.NoBlending=0,THREE.NormalBlending=1,THREE.AdditiveBlending=2,THREE.SubtractiveBlending=3,THREE.MultiplyBlending=4,THREE.CustomBlending=5,THREE.AddEquation=100,THREE.SubtractEquation=101,THREE.ReverseSubtractEquation=102,THREE.ZeroFactor=200,THREE.OneFactor=201,THREE.SrcColorFactor=202,THREE.OneMinusSrcColorFactor=203,THREE.SrcAlphaFactor=204,THREE.OneMinusSrcAlphaFactor=205,THREE.DstAlphaFactor=206,THREE.OneMinusDstAlphaFactor=207,THREE.DstColorFactor=208,THREE.OneMinusDstColorFactor=209,THREE.SrcAlphaSaturateFactor=210,THREE.MultiplyOperation=0,THREE.MixOperation=1,THREE.AddOperation=2,THREE.UVMapping=function(){},THREE.CubeReflectionMapping=function(){},THREE.CubeRefractionMapping=function(){},THREE.SphericalReflectionMapping=function(){},THREE.SphericalRefractionMapping=function(){},THREE.RepeatWrapping=1e3,THREE.ClampToEdgeWrapping=1001,THREE.MirroredRepeatWrapping=1002,THREE.NearestFilter=1003,THREE.NearestMipMapNearestFilter=1004,THREE.NearestMipMapLinearFilter=1005,THREE.LinearFilter=1006,THREE.LinearMipMapNearestFilter=1007,THREE.LinearMipMapLinearFilter=1008,THREE.UnsignedByteType=1009,THREE.ByteType=1010,THREE.ShortType=1011,THREE.UnsignedShortType=1012,THREE.IntType=1013,THREE.UnsignedIntType=1014,THREE.FloatType=1015,THREE.UnsignedShort4444Type=1016,THREE.UnsignedShort5551Type=1017,THREE.UnsignedShort565Type=1018,THREE.AlphaFormat=1019,THREE.RGBFormat=1020,THREE.RGBAFormat=1021,THREE.LuminanceFormat=1022,THREE.LuminanceAlphaFormat=1023,THREE.RGB_S3TC_DXT1_Format=2001,THREE.RGBA_S3TC_DXT1_Format=2002,THREE.RGBA_S3TC_DXT3_Format=2003,THREE.RGBA_S3TC_DXT5_Format=2004,THREE.Color=function(a){return void 0!==a&&this.set(a),this},THREE.Color.prototype={constructor:THREE.Color,r:1,g:1,b:1,set:function(a){return a instanceof THREE.Color?this.copy(a):"number"==typeof a?this.setHex(a):"string"==typeof a&&this.setStyle(a),this},setHex:function(a){return a=Math.floor(a),this.r=(a>>16&255)/255,this.g=(a>>8&255)/255,this.b=(255&a)/255,this},setRGB:function(a,b,c){return this.r=a,this.g=b,this.b=c,this},setHSL:function(a,b,c){if(0===b)this.r=this.g=this.b=c;else{var d=function(a,b,c){return c<0&&(c+=1),c>1&&(c-=1),c<1/6?a+6*(b-a)*c:c<.5?b:c<2/3?a+6*(b-a)*(2/3-c):a},e=c<=.5?c*(1+b):c+b-c*b,f=2*c-e;this.r=d(f,e,a+1/3),this.g=d(f,e,a),this.b=d(f,e,a-1/3)}return this},setStyle:function(a){if(/^rgb\((\d+),(\d+),(\d+)\)$/i.test(a)){var b=/^rgb\((\d+),(\d+),(\d+)\)$/i.exec(a);return this.r=Math.min(255,parseInt(b[1],10))/255,this.g=Math.min(255,parseInt(b[2],10))/255,this.b=Math.min(255,parseInt(b[3],10))/255,this}if(/^rgb\((\d+)\%,(\d+)\%,(\d+)\%\)$/i.test(a)){var b=/^rgb\((\d+)\%,(\d+)\%,(\d+)\%\)$/i.exec(a);return this.r=Math.min(100,parseInt(b[1],10))/100,this.g=Math.min(100,parseInt(b[2],10))/100,this.b=Math.min(100,parseInt(b[3],10))/100,this}if(/^\#([0-9a-f]{6})$/i.test(a)){var b=/^\#([0-9a-f]{6})$/i.exec(a);return this.setHex(parseInt(b[1],16)),this}if(/^\#([0-9a-f])([0-9a-f])([0-9a-f])$/i.test(a)){var b=/^\#([0-9a-f])([0-9a-f])([0-9a-f])$/i.exec(a);return this.setHex(parseInt(b[1]+b[1]+b[2]+b[2]+b[3]+b[3],16)),this}if(/^(\w+)$/i.test(a))return this.setHex(THREE.ColorKeywords[a]),this},copy:function(a){return this.r=a.r,this.g=a.g,this.b=a.b,this},copyGammaToLinear:function(a){return this.r=a.r*a.r,this.g=a.g*a.g,this.b=a.b*a.b,this},copyLinearToGamma:function(a){return this.r=Math.sqrt(a.r),this.g=Math.sqrt(a.g),this.b=Math.sqrt(a.b),this},convertGammaToLinear:function(){var a=this.r,b=this.g,c=this.b;return this.r=a*a,this.g=b*b,this.b=c*c,this},convertLinearToGamma:function(){return this.r=Math.sqrt(this.r),this.g=Math.sqrt(this.g),this.b=Math.sqrt(this.b),this},getHex:function(){return 255*this.r<<16^255*this.g<<8^255*this.b<<0},getHexString:function(){return("000000"+this.getHex().toString(16)).slice(-6)},getHSL:function(){var a={h:0,s:0,l:0};return function(){var b,c,d=this.r,e=this.g,f=this.b,g=Math.max(d,e,f),h=Math.min(d,e,f),i=(h+g)/2;if(h===g)b=0,c=0;else{var j=g-h;switch(c=i<=.5?j/(g+h):j/(2-g-h),g){case d:b=(e-f)/j+(e<f?6:0);break;case e:b=(f-d)/j+2;break;case f:b=(d-e)/j+4}b/=6}return a.h=b,a.s=c,a.l=i,a}}(),getStyle:function(){return"rgb("+(255*this.r|0)+","+(255*this.g|0)+","+(255*this.b|0)+")"},offsetHSL:function(a,b,c){var d=this.getHSL();return d.h+=a,d.s+=b,d.l+=c,this.setHSL(d.h,d.s,d.l),this},add:function(a){return this.r+=a.r,this.g+=a.g,this.b+=a.b,this},addColors:function(a,b){return this.r=a.r+b.r,this.g=a.g+b.g,this.b=a.b+b.b,this},addScalar:function(a){return this.r+=a,this.g+=a,this.b+=a,this},multiply:function(a){return this.r*=a.r,this.g*=a.g,this.b*=a.b,this},multiplyScalar:function(a){return this.r*=a,this.g*=a,this.b*=a,this},lerp:function(a,b){return this.r+=(a.r-this.r)*b,this.g+=(a.g-this.g)*b,this.b+=(a.b-this.b)*b,this},equals:function(a){return a.r===this.r&&a.g===this.g&&a.b===this.b},fromArray:function(a){return this.r=a[0],this.g=a[1],this.b=a[2],this},toArray:function(){return[this.r,this.g,this.b]},clone:function(){return(new THREE.Color).setRGB(this.r,this.g,this.b)}},THREE.ColorKeywords={aliceblue:15792383,antiquewhite:16444375,aqua:65535,aquamarine:8388564,azure:15794175,beige:16119260,bisque:16770244,black:0,blanchedalmond:16772045,blue:255,blueviolet:9055202,brown:10824234,burlywood:14596231,cadetblue:6266528,chartreuse:8388352,chocolate:13789470,coral:16744272,cornflowerblue:6591981,cornsilk:16775388,crimson:14423100,cyan:65535,darkblue:139,darkcyan:35723,darkgoldenrod:12092939,darkgray:11119017,darkgreen:25600,darkgrey:11119017,darkkhaki:12433259,darkmagenta:9109643,darkolivegreen:5597999,darkorange:16747520,darkorchid:10040012,darkred:9109504,darksalmon:15308410,darkseagreen:9419919,darkslateblue:4734347,darkslategray:3100495,darkslategrey:3100495,darkturquoise:52945,darkviolet:9699539,deeppink:16716947,deepskyblue:49151,dimgray:6908265,dimgrey:6908265,dodgerblue:2003199,firebrick:11674146,floralwhite:16775920,forestgreen:2263842,fuchsia:16711935,gainsboro:14474460,ghostwhite:16316671,gold:16766720,goldenrod:14329120,gray:8421504,green:32768,greenyellow:11403055,grey:8421504,honeydew:15794160,hotpink:16738740,indianred:13458524,indigo:4915330,ivory:16777200,khaki:15787660,lavender:15132410,lavenderblush:16773365,lawngreen:8190976,lemonchiffon:16775885,lightblue:11393254,lightcoral:15761536,lightcyan:14745599,lightgoldenrodyellow:16448210,lightgray:13882323,lightgreen:9498256,lightgrey:13882323,lightpink:16758465,lightsalmon:16752762,lightseagreen:2142890,lightskyblue:8900346,lightslategray:7833753,lightslategrey:7833753,lightsteelblue:11584734,lightyellow:16777184,lime:65280,limegreen:3329330,linen:16445670,magenta:16711935,maroon:8388608,mediumaquamarine:6737322,mediumblue:205,mediumorchid:12211667,mediumpurple:9662683,mediumseagreen:3978097,mediumslateblue:8087790,mediumspringgreen:64154,mediumturquoise:4772300,mediumvioletred:13047173,midnightblue:1644912,mintcream:16121850,mistyrose:16770273,moccasin:16770229,navajowhite:16768685,navy:128,oldlace:16643558,olive:8421376,olivedrab:7048739,orange:16753920,orangered:16729344,orchid:14315734,palegoldenrod:15657130,palegreen:10025880,paleturquoise:11529966,palevioletred:14381203,papayawhip:16773077,peachpuff:16767673,peru:13468991,pink:16761035,plum:14524637,powderblue:11591910,purple:8388736,red:16711680,rosybrown:12357519,royalblue:4286945,saddlebrown:9127187,salmon:16416882,sandybrown:16032864,seagreen:3050327,seashell:16774638,sienna:10506797,silver:12632256,skyblue:8900331,slateblue:6970061,slategray:7372944,slategrey:7372944,snow:16775930,springgreen:65407,steelblue:4620980,tan:13808780,teal:32896,thistle:14204888,tomato:16737095,turquoise:4251856,violet:15631086,wheat:16113331,white:16777215,whitesmoke:16119285,yellow:16776960,yellowgreen:10145074},THREE.Quaternion=function(a,b,c,d){this._x=a||0,this._y=b||0,this._z=c||0,this._w=void 0!==d?d:1},THREE.Quaternion.prototype={constructor:THREE.Quaternion,_x:0,_y:0,_z:0,_w:0,_euler:void 0,_updateEuler:function(a){void 0!==this._euler&&this._euler.setFromQuaternion(this,void 0,!1)},get x(){return this._x},set x(a){this._x=a,this._updateEuler()},get y(){return this._y},set y(a){this._y=a,this._updateEuler()},get z(){return this._z},set z(a){this._z=a,this._updateEuler()},get w(){return this._w},set w(a){this._w=a,this._updateEuler()},set:function(a,b,c,d){return this._x=a,this._y=b,this._z=c,this._w=d,this._updateEuler(),this},copy:function(a){return this._x=a._x,this._y=a._y,this._z=a._z,this._w=a._w,this._updateEuler(),this},setFromEuler:function(a,b){if(a instanceof THREE.Euler==!1)throw new Error("ERROR: Quaternion's .setFromEuler() now expects a Euler rotation rather than a Vector3 and order.  Please update your code.");var c=Math.cos(a._x/2),d=Math.cos(a._y/2),e=Math.cos(a._z/2),f=Math.sin(a._x/2),g=Math.sin(a._y/2),h=Math.sin(a._z/2);return"XYZ"===a.order?(this._x=f*d*e+c*g*h,this._y=c*g*e-f*d*h,this._z=c*d*h+f*g*e,this._w=c*d*e-f*g*h):"YXZ"===a.order?(this._x=f*d*e+c*g*h,this._y=c*g*e-f*d*h,this._z=c*d*h-f*g*e,this._w=c*d*e+f*g*h):"ZXY"===a.order?(this._x=f*d*e-c*g*h,this._y=c*g*e+f*d*h,this._z=c*d*h+f*g*e,this._w=c*d*e-f*g*h):"ZYX"===a.order?(this._x=f*d*e-c*g*h,this._y=c*g*e+f*d*h,this._z=c*d*h-f*g*e,this._w=c*d*e+f*g*h):"YZX"===a.order?(this._x=f*d*e+c*g*h,this._y=c*g*e+f*d*h,this._z=c*d*h-f*g*e,this._w=c*d*e-f*g*h):"XZY"===a.order&&(this._x=f*d*e-c*g*h,this._y=c*g*e-f*d*h,this._z=c*d*h+f*g*e,this._w=c*d*e+f*g*h),b!==!1&&this._updateEuler(),this},setFromAxisAngle:function(a,b){var c=b/2,d=Math.sin(c);return this._x=a.x*d,this._y=a.y*d,this._z=a.z*d,this._w=Math.cos(c),this._updateEuler(),this},setFromRotationMatrix:function(a){var b,c=a.elements,d=c[0],e=c[4],f=c[8],g=c[1],h=c[5],i=c[9],j=c[2],k=c[6],l=c[10],m=d+h+l;return m>0?(b=.5/Math.sqrt(m+1),this._w=.25/b,this._x=(k-i)*b,this._y=(f-j)*b,this._z=(g-e)*b):d>h&&d>l?(b=2*Math.sqrt(1+d-h-l),this._w=(k-i)/b,this._x=.25*b,this._y=(e+g)/b,this._z=(f+j)/b):h>l?(b=2*Math.sqrt(1+h-d-l),this._w=(f-j)/b,this._x=(e+g)/b,this._y=.25*b,this._z=(i+k)/b):(b=2*Math.sqrt(1+l-d-h),this._w=(g-e)/b,this._x=(f+j)/b,this._y=(i+k)/b,this._z=.25*b),this._updateEuler(),this},inverse:function(){return this.conjugate().normalize(),this},conjugate:function(){return this._x*=-1,this._y*=-1,this._z*=-1,this._updateEuler(),this},lengthSq:function(){return this._x*this._x+this._y*this._y+this._z*this._z+this._w*this._w},length:function(){return Math.sqrt(this._x*this._x+this._y*this._y+this._z*this._z+this._w*this._w)},normalize:function(){var a=this.length();return 0===a?(this._x=0,this._y=0,this._z=0,this._w=1):(a=1/a,this._x=this._x*a,this._y=this._y*a,this._z=this._z*a,this._w=this._w*a),this},multiply:function(a,b){return void 0!==b?(console.warn("DEPRECATED: Quaternion's .multiply() now only accepts one argument. Use .multiplyQuaternions( a, b ) instead."),this.multiplyQuaternions(a,b)):this.multiplyQuaternions(this,a)},multiplyQuaternions:function(a,b){var c=a._x,d=a._y,e=a._z,f=a._w,g=b._x,h=b._y,i=b._z,j=b._w;return this._x=c*j+f*g+d*i-e*h,this._y=d*j+f*h+e*g-c*i,this._z=e*j+f*i+c*h-d*g,this._w=f*j-c*g-d*h-e*i,this._updateEuler(),this},multiplyVector3:function(a){return console.warn("DEPRECATED: Quaternion's .multiplyVector3() has been removed. Use is now vector.applyQuaternion( quaternion ) instead."),a.applyQuaternion(this)},slerp:function(a,b){var c=this._x,d=this._y,e=this._z,f=this._w,g=f*a._w+c*a._x+d*a._y+e*a._z;if(g<0?(this._w=-a._w,this._x=-a._x,this._y=-a._y,this._z=-a._z,g=-g):this.copy(a),g>=1)return this._w=f,this._x=c,this._y=d,this._z=e,this;var h=Math.acos(g),i=Math.sqrt(1-g*g);if(Math.abs(i)<.001)return this._w=.5*(f+this._w),this._x=.5*(c+this._x),this._y=.5*(d+this._y),this._z=.5*(e+this._z),this;var j=Math.sin((1-b)*h)/i,k=Math.sin(b*h)/i;return this._w=f*j+this._w*k,this._x=c*j+this._x*k,this._y=d*j+this._y*k,this._z=e*j+this._z*k,this._updateEuler(),this},equals:function(a){return a._x===this._x&&a._y===this._y&&a._z===this._z&&a._w===this._w},fromArray:function(a){return this._x=a[0],this._y=a[1],this._z=a[2],this._w=a[3],this._updateEuler(),this},toArray:function(){return[this._x,this._y,this._z,this._w]},clone:function(){return new THREE.Quaternion(this._x,this._y,this._z,this._w)}},THREE.Quaternion.slerp=function(a,b,c,d){return c.copy(a).slerp(b,d)},THREE.Vector2=function(a,b){this.x=a||0,this.y=b||0},THREE.Vector2.prototype={constructor:THREE.Vector2,set:function(a,b){return this.x=a,this.y=b,this},setX:function(a){return this.x=a,this},setY:function(a){return this.y=a,this},setComponent:function(a,b){switch(a){case 0:this.x=b;break;case 1:this.y=b;break;default:throw new Error("index is out of range: "+a)}},getComponent:function(a){switch(a){case 0:return this.x;case 1:return this.y;default:throw new Error("index is out of range: "+a)}},copy:function(a){return this.x=a.x,this.y=a.y,this},add:function(a,b){return void 0!==b?(console.warn("DEPRECATED: Vector2's .add() now only accepts one argument. Use .addVectors( a, b ) instead."),this.addVectors(a,b)):(this.x+=a.x,this.y+=a.y,this)},addVectors:function(a,b){return this.x=a.x+b.x,this.y=a.y+b.y,this},addScalar:function(a){return this.x+=a,this.y+=a,this},sub:function(a,b){return void 0!==b?(console.warn("DEPRECATED: Vector2's .sub() now only accepts one argument. Use .subVectors( a, b ) instead."),this.subVectors(a,b)):(this.x-=a.x,this.y-=a.y,this)},subVectors:function(a,b){return this.x=a.x-b.x,this.y=a.y-b.y,this},multiplyScalar:function(a){return this.x*=a,this.y*=a,this},divideScalar:function(a){if(0!==a){var b=1/a;this.x*=b,this.y*=b}else this.x=0,this.y=0;return this},min:function(a){return this.x>a.x&&(this.x=a.x),this.y>a.y&&(this.y=a.y),this},max:function(a){return this.x<a.x&&(this.x=a.x),this.y<a.y&&(this.y=a.y),this},clamp:function(a,b){return this.x<a.x?this.x=a.x:this.x>b.x&&(this.x=b.x),this.y<a.y?this.y=a.y:this.y>b.y&&(this.y=b.y),this},negate:function(){return this.multiplyScalar(-1)},dot:function(a){return this.x*a.x+this.y*a.y},lengthSq:function(){return this.x*this.x+this.y*this.y},length:function(){return Math.sqrt(this.x*this.x+this.y*this.y)},normalize:function(){return this.divideScalar(this.length())},distanceTo:function(a){return Math.sqrt(this.distanceToSquared(a))},distanceToSquared:function(a){var b=this.x-a.x,c=this.y-a.y;return b*b+c*c},setLength:function(a){var b=this.length();return 0!==b&&a!==b&&this.multiplyScalar(a/b),this},lerp:function(a,b){return this.x+=(a.x-this.x)*b,this.y+=(a.y-this.y)*b,this},equals:function(a){return a.x===this.x&&a.y===this.y},fromArray:function(a){return this.x=a[0],this.y=a[1],this},toArray:function(){return[this.x,this.y]},clone:function(){return new THREE.Vector2(this.x,this.y)}},THREE.Vector3=function(a,b,c){this.x=a||0,this.y=b||0,this.z=c||0},THREE.Vector3.prototype={constructor:THREE.Vector3,set:function(a,b,c){return this.x=a,this.y=b,this.z=c,this},setX:function(a){return this.x=a,this},setY:function(a){return this.y=a,this},setZ:function(a){return this.z=a,this},setComponent:function(a,b){switch(a){case 0:this.x=b;break;case 1:this.y=b;break;case 2:this.z=b;break;default:throw new Error("index is out of range: "+a)}},getComponent:function(a){switch(a){case 0:return this.x;case 1:return this.y;case 2:return this.z;default:throw new Error("index is out of range: "+a)}},copy:function(a){return this.x=a.x,this.y=a.y,this.z=a.z,this},add:function(a,b){return void 0!==b?(console.warn("DEPRECATED: Vector3's .add() now only accepts one argument. Use .addVectors( a, b ) instead."),this.addVectors(a,b)):(this.x+=a.x,this.y+=a.y,this.z+=a.z,this)},addScalar:function(a){return this.x+=a,this.y+=a,this.z+=a,this},addVectors:function(a,b){return this.x=a.x+b.x,this.y=a.y+b.y,this.z=a.z+b.z,this},sub:function(a,b){return void 0!==b?(console.warn("DEPRECATED: Vector3's .sub() now only accepts one argument. Use .subVectors( a, b ) instead."),this.subVectors(a,b)):(this.x-=a.x,this.y-=a.y,this.z-=a.z,this)},subVectors:function(a,b){return this.x=a.x-b.x,this.y=a.y-b.y,this.z=a.z-b.z,this},multiply:function(a,b){return void 0!==b?(console.warn("DEPRECATED: Vector3's .multiply() now only accepts one argument. Use .multiplyVectors( a, b ) instead."),this.multiplyVectors(a,b)):(this.x*=a.x,this.y*=a.y,this.z*=a.z,this)},multiplyScalar:function(a){return this.x*=a,this.y*=a,this.z*=a,this},multiplyVectors:function(a,b){return this.x=a.x*b.x,this.y=a.y*b.y,this.z=a.z*b.z,this},applyMatrix3:function(a){var b=this.x,c=this.y,d=this.z,e=a.elements;return this.x=e[0]*b+e[3]*c+e[6]*d,this.y=e[1]*b+e[4]*c+e[7]*d,this.z=e[2]*b+e[5]*c+e[8]*d,this},applyMatrix4:function(a){var b=this.x,c=this.y,d=this.z,e=a.elements;return this.x=e[0]*b+e[4]*c+e[8]*d+e[12],this.y=e[1]*b+e[5]*c+e[9]*d+e[13],this.z=e[2]*b+e[6]*c+e[10]*d+e[14],this},applyProjection:function(a){var b=this.x,c=this.y,d=this.z,e=a.elements,f=1/(e[3]*b+e[7]*c+e[11]*d+e[15]);return this.x=(e[0]*b+e[4]*c+e[8]*d+e[12])*f,this.y=(e[1]*b+e[5]*c+e[9]*d+e[13])*f,this.z=(e[2]*b+e[6]*c+e[10]*d+e[14])*f,this},applyQuaternion:function(a){var b=this.x,c=this.y,d=this.z,e=a.x,f=a.y,g=a.z,h=a.w,i=h*b+f*d-g*c,j=h*c+g*b-e*d,k=h*d+e*c-f*b,l=-e*b-f*c-g*d;return this.x=i*h+l*-e+j*-g-k*-f,this.y=j*h+l*-f+k*-e-i*-g,this.z=k*h+l*-g+i*-f-j*-e,this},transformDirection:function(a){var b=this.x,c=this.y,d=this.z,e=a.elements;return this.x=e[0]*b+e[4]*c+e[8]*d,this.y=e[1]*b+e[5]*c+e[9]*d,this.z=e[2]*b+e[6]*c+e[10]*d,this.normalize(),this},divide:function(a){return this.x/=a.x,this.y/=a.y,this.z/=a.z,this},divideScalar:function(a){if(0!==a){var b=1/a;this.x*=b,this.y*=b,this.z*=b}else this.x=0,this.y=0,this.z=0;return this},min:function(a){return this.x>a.x&&(this.x=a.x),this.y>a.y&&(this.y=a.y),this.z>a.z&&(this.z=a.z),this},max:function(a){return this.x<a.x&&(this.x=a.x),this.y<a.y&&(this.y=a.y),this.z<a.z&&(this.z=a.z),this},clamp:function(a,b){return this.x<a.x?this.x=a.x:this.x>b.x&&(this.x=b.x),this.y<a.y?this.y=a.y:this.y>b.y&&(this.y=b.y),this.z<a.z?this.z=a.z:this.z>b.z&&(this.z=b.z),this},negate:function(){return this.multiplyScalar(-1)},dot:function(a){return this.x*a.x+this.y*a.y+this.z*a.z},lengthSq:function(){return this.x*this.x+this.y*this.y+this.z*this.z},length:function(){return Math.sqrt(this.x*this.x+this.y*this.y+this.z*this.z)},lengthManhattan:function(){return Math.abs(this.x)+Math.abs(this.y)+Math.abs(this.z)},normalize:function(){return this.divideScalar(this.length())},setLength:function(a){var b=this.length();return 0!==b&&a!==b&&this.multiplyScalar(a/b),this},lerp:function(a,b){return this.x+=(a.x-this.x)*b,this.y+=(a.y-this.y)*b,this.z+=(a.z-this.z)*b,this},cross:function(a,b){if(void 0!==b)return console.warn("DEPRECATED: Vector3's .cross() now only accepts one argument. Use .crossVectors( a, b ) instead."),this.crossVectors(a,b);var c=this.x,d=this.y,e=this.z;return this.x=d*a.z-e*a.y,this.y=e*a.x-c*a.z,this.z=c*a.y-d*a.x,this},crossVectors:function(a,b){var c=a.x,d=a.y,e=a.z,f=b.x,g=b.y,h=b.z;return this.x=d*h-e*g,this.y=e*f-c*h,this.z=c*g-d*f,this},angleTo:function(a){var b=this.dot(a)/(this.length()*a.length());return Math.acos(THREE.Math.clamp(b,-1,1))},distanceTo:function(a){return Math.sqrt(this.distanceToSquared(a))},distanceToSquared:function(a){var b=this.x-a.x,c=this.y-a.y,d=this.z-a.z;return b*b+c*c+d*d},setEulerFromRotationMatrix:function(a,b){console.error("REMOVED: Vector3's setEulerFromRotationMatrix has been removed in favor of Euler.setFromRotationMatrix(), please update your code.")},setEulerFromQuaternion:function(a,b){console.error("REMOVED: Vector3's setEulerFromQuaternion: has been removed in favor of Euler.setFromQuaternion(), please update your code.")},getPositionFromMatrix:function(a){return this.x=a.elements[12],this.y=a.elements[13],this.z=a.elements[14],this},getScaleFromMatrix:function(a){var b=this.set(a.elements[0],a.elements[1],a.elements[2]).length(),c=this.set(a.elements[4],a.elements[5],a.elements[6]).length(),d=this.set(a.elements[8],a.elements[9],a.elements[10]).length();return this.x=b,this.y=c,this.z=d,this},getColumnFromMatrix:function(a,b){var c=4*a,d=b.elements;return this.x=d[c],this.y=d[c+1],this.z=d[c+2],this},equals:function(a){return a.x===this.x&&a.y===this.y&&a.z===this.z},fromArray:function(a){return this.x=a[0],this.y=a[1],this.z=a[2],this},toArray:function(){return[this.x,this.y,this.z]},clone:function(){return new THREE.Vector3(this.x,this.y,this.z)}},THREE.extend(THREE.Vector3.prototype,{applyEuler:function(){var a=new THREE.Quaternion;return function(b){return b instanceof THREE.Euler==!1&&console.error("ERROR: Vector3's .applyEuler() now expects a Euler rotation rather than a Vector3 and order.  Please update your code."),this.applyQuaternion(a.setFromEuler(b)),this}}(),applyAxisAngle:function(){var a=new THREE.Quaternion;return function(b,c){return this.applyQuaternion(a.setFromAxisAngle(b,c)),this}}(),projectOnVector:function(){var a=new THREE.Vector3;return function(b){a.copy(b).normalize();var c=this.dot(a);return this.copy(a).multiplyScalar(c)}}(),projectOnPlane:function(){var a=new THREE.Vector3;return function(b){return a.copy(this).projectOnVector(b),this.sub(a)}}(),reflect:function(){var a=new THREE.Vector3;return function(b){return a.copy(this).projectOnVector(b).multiplyScalar(2),this.subVectors(a,this)}}()}),THREE.Vector4=function(a,b,c,d){this.x=a||0,this.y=b||0,this.z=c||0,this.w=void 0!==d?d:1},THREE.Vector4.prototype={constructor:THREE.Vector4,set:function(a,b,c,d){return this.x=a,this.y=b,this.z=c,this.w=d,this},setX:function(a){return this.x=a,this},setY:function(a){return this.y=a,this},setZ:function(a){return this.z=a,this},setW:function(a){return this.w=a,this},setComponent:function(a,b){switch(a){case 0:this.x=b;break;case 1:this.y=b;break;case 2:this.z=b;break;case 3:this.w=b;break;default:throw new Error("index is out of range: "+a)}},getComponent:function(a){switch(a){case 0:return this.x;case 1:return this.y;case 2:return this.z;case 3:return this.w;default:throw new Error("index is out of range: "+a)}},copy:function(a){return this.x=a.x,this.y=a.y,this.z=a.z,this.w=void 0!==a.w?a.w:1,this},add:function(a,b){return void 0!==b?(console.warn("DEPRECATED: Vector4's .add() now only accepts one argument. Use .addVectors( a, b ) instead."),this.addVectors(a,b)):(this.x+=a.x,this.y+=a.y,this.z+=a.z,this.w+=a.w,this)},addScalar:function(a){return this.x+=a,this.y+=a,this.z+=a,this.w+=a,this},addVectors:function(a,b){return this.x=a.x+b.x,this.y=a.y+b.y,this.z=a.z+b.z,this.w=a.w+b.w,this},sub:function(a,b){return void 0!==b?(console.warn("DEPRECATED: Vector4's .sub() now only accepts one argument. Use .subVectors( a, b ) instead."),this.subVectors(a,b)):(this.x-=a.x,this.y-=a.y,this.z-=a.z,this.w-=a.w,this)},subVectors:function(a,b){return this.x=a.x-b.x,this.y=a.y-b.y,this.z=a.z-b.z,this.w=a.w-b.w,this},multiplyScalar:function(a){return this.x*=a,this.y*=a,this.z*=a,this.w*=a,this},applyMatrix4:function(a){var b=this.x,c=this.y,d=this.z,e=this.w,f=a.elements;return this.x=f[0]*b+f[4]*c+f[8]*d+f[12]*e,this.y=f[1]*b+f[5]*c+f[9]*d+f[13]*e,this.z=f[2]*b+f[6]*c+f[10]*d+f[14]*e,this.w=f[3]*b+f[7]*c+f[11]*d+f[15]*e,this},divideScalar:function(a){if(0!==a){var b=1/a;this.x*=b,this.y*=b,this.z*=b,this.w*=b}else this.x=0,this.y=0,this.z=0,this.w=1;return this},setAxisAngleFromQuaternion:function(a){this.w=2*Math.acos(a.w);var b=Math.sqrt(1-a.w*a.w);return b<1e-4?(this.x=1,this.y=0,this.z=0):(this.x=a.x/b,this.y=a.y/b,this.z=a.z/b),this},setAxisAngleFromRotationMatrix:function(a){var b,c,d,e,f=.01,g=.1,h=a.elements,i=h[0],j=h[4],k=h[8],l=h[1],m=h[5],n=h[9],o=h[2],p=h[6],q=h[10];if(Math.abs(j-l)<f&&Math.abs(k-o)<f&&Math.abs(n-p)<f){if(Math.abs(j+l)<g&&Math.abs(k+o)<g&&Math.abs(n+p)<g&&Math.abs(i+m+q-3)<g)return this.set(1,0,0,0),this;b=Math.PI;var r=(i+1)/2,s=(m+1)/2,t=(q+1)/2,u=(j+l)/4,v=(k+o)/4,w=(n+p)/4;return r>s&&r>t?r<f?(c=0,d=.707106781,e=.707106781):(c=Math.sqrt(r),d=u/c,e=v/c):s>t?s<f?(c=.707106781,d=0,e=.707106781):(d=Math.sqrt(s),c=u/d,e=w/d):t<f?(c=.707106781,d=.707106781,e=0):(e=Math.sqrt(t),c=v/e,d=w/e),this.set(c,d,e,b),this}var x=Math.sqrt((p-n)*(p-n)+(k-o)*(k-o)+(l-j)*(l-j));return Math.abs(x)<.001&&(x=1),this.x=(p-n)/x,this.y=(k-o)/x,this.z=(l-j)/x,this.w=Math.acos((i+m+q-1)/2),this},min:function(a){return this.x>a.x&&(this.x=a.x),this.y>a.y&&(this.y=a.y),this.z>a.z&&(this.z=a.z),this.w>a.w&&(this.w=a.w),this},max:function(a){return this.x<a.x&&(this.x=a.x),this.y<a.y&&(this.y=a.y),this.z<a.z&&(this.z=a.z),this.w<a.w&&(this.w=a.w),this},clamp:function(a,b){return this.x<a.x?this.x=a.x:this.x>b.x&&(this.x=b.x),this.y<a.y?this.y=a.y:this.y>b.y&&(this.y=b.y),this.z<a.z?this.z=a.z:this.z>b.z&&(this.z=b.z),this.w<a.w?this.w=a.w:this.w>b.w&&(this.w=b.w),this},negate:function(){return this.multiplyScalar(-1)},dot:function(a){return this.x*a.x+this.y*a.y+this.z*a.z+this.w*a.w},lengthSq:function(){return this.x*this.x+this.y*this.y+this.z*this.z+this.w*this.w},length:function(){return Math.sqrt(this.x*this.x+this.y*this.y+this.z*this.z+this.w*this.w)},lengthManhattan:function(){return Math.abs(this.x)+Math.abs(this.y)+Math.abs(this.z)+Math.abs(this.w)},normalize:function(){return this.divideScalar(this.length())},setLength:function(a){var b=this.length();return 0!==b&&a!==b&&this.multiplyScalar(a/b),this},lerp:function(a,b){return this.x+=(a.x-this.x)*b,this.y+=(a.y-this.y)*b,this.z+=(a.z-this.z)*b,this.w+=(a.w-this.w)*b,this},equals:function(a){return a.x===this.x&&a.y===this.y&&a.z===this.z&&a.w===this.w},fromArray:function(a){return this.x=a[0],this.y=a[1],this.z=a[2],this.w=a[3],this},toArray:function(){return[this.x,this.y,this.z,this.w]},clone:function(){return new THREE.Vector4(this.x,this.y,this.z,this.w)}},THREE.Euler=function(a,b,c,d){this._x=a||0,this._y=b||0,this._z=c||0,this._order=d||THREE.Euler.DefaultOrder},THREE.Euler.RotationOrders=["XYZ","YZX","ZXY","XZY","YXZ","ZYX"],THREE.Euler.DefaultOrder="XYZ",THREE.Euler.prototype={constructor:THREE.Euler,_x:0,_y:0,_z:0,_order:THREE.Euler.DefaultOrder,_quaternion:void 0,_updateQuaternion:function(){void 0!==this._quaternion&&this._quaternion.setFromEuler(this,!1)},get x(){return this._x},set x(a){this._x=a,this._updateQuaternion()},get y(){return this._y},set y(a){this._y=a,this._updateQuaternion()},get z(){return this._z},set z(a){this._z=a,this._updateQuaternion()},get order(){return this._order},set order(a){this._order=a,this._updateQuaternion()},set:function(a,b,c,d){return this._x=a,this._y=b,this._z=c,this._order=d||this._order,this._updateQuaternion(),this},copy:function(a){return this._x=a._x,this._y=a._y,this._z=a._z,this._order=a._order,this._updateQuaternion(),this},setFromRotationMatrix:function(a,b){function c(a){return Math.min(Math.max(a,-1),1)}var d=a.elements,e=d[0],f=d[4],g=d[8],h=d[1],i=d[5],j=d[9],k=d[2],l=d[6],m=d[10];return b=b||this._order,"XYZ"===b?(this._y=Math.asin(c(g)),Math.abs(g)<.99999?(this._x=Math.atan2(-j,m),this._z=Math.atan2(-f,e)):(this._x=Math.atan2(l,i),this._z=0)):"YXZ"===b?(this._x=Math.asin(-c(j)),Math.abs(j)<.99999?(this._y=Math.atan2(g,m),this._z=Math.atan2(h,i)):(this._y=Math.atan2(-k,e),this._z=0)):"ZXY"===b?(this._x=Math.asin(c(l)),Math.abs(l)<.99999?(this._y=Math.atan2(-k,m),this._z=Math.atan2(-f,i)):(this._y=0,this._z=Math.atan2(h,e))):"ZYX"===b?(this._y=Math.asin(-c(k)),Math.abs(k)<.99999?(this._x=Math.atan2(l,m),this._z=Math.atan2(h,e)):(this._x=0,this._z=Math.atan2(-f,i))):"YZX"===b?(this._z=Math.asin(c(h)),Math.abs(h)<.99999?(this._x=Math.atan2(-j,i),this._y=Math.atan2(-k,e)):(this._x=0,this._y=Math.atan2(g,m))):"XZY"===b?(this._z=Math.asin(-c(f)),Math.abs(f)<.99999?(this._x=Math.atan2(l,i),this._y=Math.atan2(g,e)):(this._x=Math.atan2(-j,m),this._y=0)):console.warn("WARNING: Euler.setFromRotationMatrix() given unsupported order: "+b),this._order=b,this._updateQuaternion(),this},setFromQuaternion:function(a,b,c){function d(a){return Math.min(Math.max(a,-1),1)}var e=a.x*a.x,f=a.y*a.y,g=a.z*a.z,h=a.w*a.w;return b=b||this._order,"XYZ"===b?(this._x=Math.atan2(2*(a.x*a.w-a.y*a.z),h-e-f+g),this._y=Math.asin(d(2*(a.x*a.z+a.y*a.w))),this._z=Math.atan2(2*(a.z*a.w-a.x*a.y),h+e-f-g)):"YXZ"===b?(this._x=Math.asin(d(2*(a.x*a.w-a.y*a.z))),this._y=Math.atan2(2*(a.x*a.z+a.y*a.w),h-e-f+g),this._z=Math.atan2(2*(a.x*a.y+a.z*a.w),h-e+f-g)):"ZXY"===b?(this._x=Math.asin(d(2*(a.x*a.w+a.y*a.z))),this._y=Math.atan2(2*(a.y*a.w-a.z*a.x),h-e-f+g),this._z=Math.atan2(2*(a.z*a.w-a.x*a.y),h-e+f-g)):"ZYX"===b?(this._x=Math.atan2(2*(a.x*a.w+a.z*a.y),h-e-f+g),this._y=Math.asin(d(2*(a.y*a.w-a.x*a.z))),this._z=Math.atan2(2*(a.x*a.y+a.z*a.w),h+e-f-g)):"YZX"===b?(this._x=Math.atan2(2*(a.x*a.w-a.z*a.y),h-e+f-g),this._y=Math.atan2(2*(a.y*a.w-a.x*a.z),h+e-f-g),this._z=Math.asin(d(2*(a.x*a.y+a.z*a.w)))):"XZY"===b?(this._x=Math.atan2(2*(a.x*a.w+a.y*a.z),h-e+f-g),this._y=Math.atan2(2*(a.x*a.z+a.y*a.w),h+e-f-g),this._z=Math.asin(d(2*(a.z*a.w-a.x*a.y)))):console.warn("WARNING: Euler.setFromQuaternion() given unsupported order: "+b),this._order=b,c!==!1&&this._updateQuaternion(),this},reorder:function(){var a=new THREE.Quaternion;return function(b){a.setFromEuler(this),this.setFromQuaternion(a,b)}}(),fromArray:function(a){return this._x=a[0],this._y=a[1],this._z=a[2],void 0!==a[3]&&(this._order=a[3]),this._updateQuaternion(),this},toArray:function(){return[this._x,this._y,this._z,this._order]},equals:function(a){return a._x===this._x&&a._y===this._y&&a._z===this._z&&a._order===this._order},clone:function(){return new THREE.Euler(this._x,this._y,this._z,this._order)}},THREE.Line3=function(a,b){this.start=void 0!==a?a:new THREE.Vector3,this.end=void 0!==b?b:new THREE.Vector3},THREE.Line3.prototype={constructor:THREE.Line3,set:function(a,b){return this.start.copy(a),this.end.copy(b),this},copy:function(a){return this.start.copy(a.start),this.end.copy(a.end),this},center:function(a){var b=a||new THREE.Vector3;
return b.addVectors(this.start,this.end).multiplyScalar(.5)},delta:function(a){var b=a||new THREE.Vector3;return b.subVectors(this.end,this.start)},distanceSq:function(){return this.start.distanceToSquared(this.end)},distance:function(){return this.start.distanceTo(this.end)},at:function(a,b){var c=b||new THREE.Vector3;return this.delta(c).multiplyScalar(a).add(this.start)},closestPointToPointParameter:function(){var a=new THREE.Vector3,b=new THREE.Vector3;return function(c,d){a.subVectors(c,this.start),b.subVectors(this.end,this.start);var e=b.dot(b),f=b.dot(a),g=f/e;return d&&(g=THREE.Math.clamp(g,0,1)),g}}(),closestPointToPoint:function(a,b,c){var d=this.closestPointToPointParameter(a,b),e=c||new THREE.Vector3;return this.delta(e).multiplyScalar(d).add(this.start)},applyMatrix4:function(a){return this.start.applyMatrix4(a),this.end.applyMatrix4(a),this},equals:function(a){return a.start.equals(this.start)&&a.end.equals(this.end)},clone:function(){return(new THREE.Line3).copy(this)}},THREE.Box2=function(a,b){this.min=void 0!==a?a:new THREE.Vector2(1/0,1/0),this.max=void 0!==b?b:new THREE.Vector2((-(1/0)),(-(1/0)))},THREE.Box2.prototype={constructor:THREE.Box2,set:function(a,b){return this.min.copy(a),this.max.copy(b),this},setFromPoints:function(a){if(a.length>0){var b=a[0];this.min.copy(b),this.max.copy(b);for(var c=1,d=a.length;c<d;c++)b=a[c],b.x<this.min.x?this.min.x=b.x:b.x>this.max.x&&(this.max.x=b.x),b.y<this.min.y?this.min.y=b.y:b.y>this.max.y&&(this.max.y=b.y)}else this.makeEmpty();return this},setFromCenterAndSize:function(){var a=new THREE.Vector2;return function(b,c){var d=a.copy(c).multiplyScalar(.5);return this.min.copy(b).sub(d),this.max.copy(b).add(d),this}}(),copy:function(a){return this.min.copy(a.min),this.max.copy(a.max),this},makeEmpty:function(){return this.min.x=this.min.y=1/0,this.max.x=this.max.y=-(1/0),this},empty:function(){return this.max.x<this.min.x||this.max.y<this.min.y},center:function(a){var b=a||new THREE.Vector2;return b.addVectors(this.min,this.max).multiplyScalar(.5)},size:function(a){var b=a||new THREE.Vector2;return b.subVectors(this.max,this.min)},expandByPoint:function(a){return this.min.min(a),this.max.max(a),this},expandByVector:function(a){return this.min.sub(a),this.max.add(a),this},expandByScalar:function(a){return this.min.addScalar(-a),this.max.addScalar(a),this},containsPoint:function(a){return!(a.x<this.min.x||a.x>this.max.x||a.y<this.min.y||a.y>this.max.y)},containsBox:function(a){return this.min.x<=a.min.x&&a.max.x<=this.max.x&&this.min.y<=a.min.y&&a.max.y<=this.max.y},getParameter:function(a){return new THREE.Vector2((a.x-this.min.x)/(this.max.x-this.min.x),(a.y-this.min.y)/(this.max.y-this.min.y))},isIntersectionBox:function(a){return!(a.max.x<this.min.x||a.min.x>this.max.x||a.max.y<this.min.y||a.min.y>this.max.y)},clampPoint:function(a,b){var c=b||new THREE.Vector2;return c.copy(a).clamp(this.min,this.max)},distanceToPoint:function(){var a=new THREE.Vector2;return function(b){var c=a.copy(b).clamp(this.min,this.max);return c.sub(b).length()}}(),intersect:function(a){return this.min.max(a.min),this.max.min(a.max),this},union:function(a){return this.min.min(a.min),this.max.max(a.max),this},translate:function(a){return this.min.add(a),this.max.add(a),this},equals:function(a){return a.min.equals(this.min)&&a.max.equals(this.max)},clone:function(){return(new THREE.Box2).copy(this)}},THREE.Box3=function(a,b){this.min=void 0!==a?a:new THREE.Vector3(1/0,1/0,1/0),this.max=void 0!==b?b:new THREE.Vector3((-(1/0)),(-(1/0)),(-(1/0)))},THREE.Box3.prototype={constructor:THREE.Box3,set:function(a,b){return this.min.copy(a),this.max.copy(b),this},addPoint:function(a){a.x<this.min.x?this.min.x=a.x:a.x>this.max.x&&(this.max.x=a.x),a.y<this.min.y?this.min.y=a.y:a.y>this.max.y&&(this.max.y=a.y),a.z<this.min.z?this.min.z=a.z:a.z>this.max.z&&(this.max.z=a.z)},setFromPoints:function(a){if(a.length>0){var b=a[0];this.min.copy(b),this.max.copy(b);for(var c=1,d=a.length;c<d;c++)this.addPoint(a[c])}else this.makeEmpty();return this},setFromCenterAndSize:function(){var a=new THREE.Vector3;return function(b,c){var d=a.copy(c).multiplyScalar(.5);return this.min.copy(b).sub(d),this.max.copy(b).add(d),this}}(),setFromObject:function(){var a=new THREE.Vector3;return function(b){var c=this;return b.updateMatrixWorld(!0),this.makeEmpty(),b.traverse(function(b){if(void 0!==b.geometry&&void 0!==b.geometry.vertices)for(var d=b.geometry.vertices,e=0,f=d.length;e<f;e++)a.copy(d[e]),a.applyMatrix4(b.matrixWorld),c.expandByPoint(a)}),this}}(),copy:function(a){return this.min.copy(a.min),this.max.copy(a.max),this},makeEmpty:function(){return this.min.x=this.min.y=this.min.z=1/0,this.max.x=this.max.y=this.max.z=-(1/0),this},empty:function(){return this.max.x<this.min.x||this.max.y<this.min.y||this.max.z<this.min.z},center:function(a){var b=a||new THREE.Vector3;return b.addVectors(this.min,this.max).multiplyScalar(.5)},size:function(a){var b=a||new THREE.Vector3;return b.subVectors(this.max,this.min)},expandByPoint:function(a){return this.min.min(a),this.max.max(a),this},expandByVector:function(a){return this.min.sub(a),this.max.add(a),this},expandByScalar:function(a){return this.min.addScalar(-a),this.max.addScalar(a),this},containsPoint:function(a){return!(a.x<this.min.x||a.x>this.max.x||a.y<this.min.y||a.y>this.max.y||a.z<this.min.z||a.z>this.max.z)},containsBox:function(a){return this.min.x<=a.min.x&&a.max.x<=this.max.x&&this.min.y<=a.min.y&&a.max.y<=this.max.y&&this.min.z<=a.min.z&&a.max.z<=this.max.z},getParameter:function(a){return new THREE.Vector3((a.x-this.min.x)/(this.max.x-this.min.x),(a.y-this.min.y)/(this.max.y-this.min.y),(a.z-this.min.z)/(this.max.z-this.min.z))},isIntersectionBox:function(a){return!(a.max.x<this.min.x||a.min.x>this.max.x||a.max.y<this.min.y||a.min.y>this.max.y||a.max.z<this.min.z||a.min.z>this.max.z)},clampPoint:function(a,b){var c=b||new THREE.Vector3;return c.copy(a).clamp(this.min,this.max)},distanceToPoint:function(){var a=new THREE.Vector3;return function(b){var c=a.copy(b).clamp(this.min,this.max);return c.sub(b).length()}}(),getBoundingSphere:function(){var a=new THREE.Vector3;return function(b){var c=b||new THREE.Sphere;return c.center=this.center(),c.radius=.5*this.size(a).length(),c}}(),intersect:function(a){return this.min.max(a.min),this.max.min(a.max),this},union:function(a){return this.min.min(a.min),this.max.max(a.max),this},applyMatrix4:function(){var a=[new THREE.Vector3,new THREE.Vector3,new THREE.Vector3,new THREE.Vector3,new THREE.Vector3,new THREE.Vector3,new THREE.Vector3,new THREE.Vector3];return function(b){return a[0].set(this.min.x,this.min.y,this.min.z).applyMatrix4(b),a[1].set(this.min.x,this.min.y,this.max.z).applyMatrix4(b),a[2].set(this.min.x,this.max.y,this.min.z).applyMatrix4(b),a[3].set(this.min.x,this.max.y,this.max.z).applyMatrix4(b),a[4].set(this.max.x,this.min.y,this.min.z).applyMatrix4(b),a[5].set(this.max.x,this.min.y,this.max.z).applyMatrix4(b),a[6].set(this.max.x,this.max.y,this.min.z).applyMatrix4(b),a[7].set(this.max.x,this.max.y,this.max.z).applyMatrix4(b),this.makeEmpty(),this.setFromPoints(a),this}}(),translate:function(a){return this.min.add(a),this.max.add(a),this},equals:function(a){return a.min.equals(this.min)&&a.max.equals(this.max)},clone:function(){return(new THREE.Box3).copy(this)}},THREE.Matrix3=function(a,b,c,d,e,f,g,h,i){this.elements=new Float32Array(9),this.set(void 0!==a?a:1,b||0,c||0,d||0,void 0!==e?e:1,f||0,g||0,h||0,void 0!==i?i:1)},THREE.Matrix3.prototype={constructor:THREE.Matrix3,set:function(a,b,c,d,e,f,g,h,i){var j=this.elements;return j[0]=a,j[3]=b,j[6]=c,j[1]=d,j[4]=e,j[7]=f,j[2]=g,j[5]=h,j[8]=i,this},identity:function(){return this.set(1,0,0,0,1,0,0,0,1),this},copy:function(a){var b=a.elements;return this.set(b[0],b[3],b[6],b[1],b[4],b[7],b[2],b[5],b[8]),this},multiplyVector3:function(a){return console.warn("DEPRECATED: Matrix3's .multiplyVector3() has been removed. Use vector.applyMatrix3( matrix ) instead."),a.applyMatrix3(this)},multiplyVector3Array:function(){var a=new THREE.Vector3;return function(b){for(var c=0,d=b.length;c<d;c+=3)a.x=b[c],a.y=b[c+1],a.z=b[c+2],a.applyMatrix3(this),b[c]=a.x,b[c+1]=a.y,b[c+2]=a.z;return b}}(),multiplyScalar:function(a){var b=this.elements;return b[0]*=a,b[3]*=a,b[6]*=a,b[1]*=a,b[4]*=a,b[7]*=a,b[2]*=a,b[5]*=a,b[8]*=a,this},determinant:function(){var a=this.elements,b=a[0],c=a[1],d=a[2],e=a[3],f=a[4],g=a[5],h=a[6],i=a[7],j=a[8];return b*f*j-b*g*i-c*e*j+c*g*h+d*e*i-d*f*h},getInverse:function(a,b){var c=a.elements,d=this.elements;d[0]=c[10]*c[5]-c[6]*c[9],d[1]=-c[10]*c[1]+c[2]*c[9],d[2]=c[6]*c[1]-c[2]*c[5],d[3]=-c[10]*c[4]+c[6]*c[8],d[4]=c[10]*c[0]-c[2]*c[8],d[5]=-c[6]*c[0]+c[2]*c[4],d[6]=c[9]*c[4]-c[5]*c[8],d[7]=-c[9]*c[0]+c[1]*c[8],d[8]=c[5]*c[0]-c[1]*c[4];var e=c[0]*d[0]+c[1]*d[3]+c[2]*d[6];if(0===e){var f="Matrix3.getInverse(): can't invert matrix, determinant is 0";if(b)throw new Error(f);return console.warn(f),this.identity(),this}return this.multiplyScalar(1/e),this},transpose:function(){var a,b=this.elements;return a=b[1],b[1]=b[3],b[3]=a,a=b[2],b[2]=b[6],b[6]=a,a=b[5],b[5]=b[7],b[7]=a,this},getNormalMatrix:function(a){return this.getInverse(a).transpose(),this},transposeIntoArray:function(a){var b=this.elements;return a[0]=b[0],a[1]=b[3],a[2]=b[6],a[3]=b[1],a[4]=b[4],a[5]=b[7],a[6]=b[2],a[7]=b[5],a[8]=b[8],this},clone:function(){var a=this.elements;return new THREE.Matrix3(a[0],a[3],a[6],a[1],a[4],a[7],a[2],a[5],a[8])}},THREE.Matrix4=function(a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p){this.elements=new Float32Array(16);var q=this.elements;q[0]=void 0!==a?a:1,q[4]=b||0,q[8]=c||0,q[12]=d||0,q[1]=e||0,q[5]=void 0!==f?f:1,q[9]=g||0,q[13]=h||0,q[2]=i||0,q[6]=j||0,q[10]=void 0!==k?k:1,q[14]=l||0,q[3]=m||0,q[7]=n||0,q[11]=o||0,q[15]=void 0!==p?p:1},THREE.Matrix4.prototype={constructor:THREE.Matrix4,set:function(a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p){var q=this.elements;return q[0]=a,q[4]=b,q[8]=c,q[12]=d,q[1]=e,q[5]=f,q[9]=g,q[13]=h,q[2]=i,q[6]=j,q[10]=k,q[14]=l,q[3]=m,q[7]=n,q[11]=o,q[15]=p,this},identity:function(){return this.set(1,0,0,0,0,1,0,0,0,0,1,0,0,0,0,1),this},copy:function(a){return this.elements.set(a.elements),this},extractPosition:function(a){return console.warn("DEPRECATED: Matrix4's .extractPosition() has been renamed to .copyPosition()."),this.copyPosition(a)},copyPosition:function(a){var b=this.elements,c=a.elements;return b[12]=c[12],b[13]=c[13],b[14]=c[14],this},extractRotation:function(){var a=new THREE.Vector3;return function(b){var c=this.elements,d=b.elements,e=1/a.set(d[0],d[1],d[2]).length(),f=1/a.set(d[4],d[5],d[6]).length(),g=1/a.set(d[8],d[9],d[10]).length();return c[0]=d[0]*e,c[1]=d[1]*e,c[2]=d[2]*e,c[4]=d[4]*f,c[5]=d[5]*f,c[6]=d[6]*f,c[8]=d[8]*g,c[9]=d[9]*g,c[10]=d[10]*g,this}}(),makeRotationFromEuler:function(a){a instanceof THREE.Euler==!1&&console.error("ERROR: Matrix's .makeRotationFromEuler() now expects a Euler rotation rather than a Vector3 and order.  Please update your code.");var b=this.elements,c=a.x,d=a.y,e=a.z,f=Math.cos(c),g=Math.sin(c),h=Math.cos(d),i=Math.sin(d),j=Math.cos(e),k=Math.sin(e);if("XYZ"===a.order){var l=f*j,m=f*k,n=g*j,o=g*k;b[0]=h*j,b[4]=-h*k,b[8]=i,b[1]=m+n*i,b[5]=l-o*i,b[9]=-g*h,b[2]=o-l*i,b[6]=n+m*i,b[10]=f*h}else if("YXZ"===a.order){var p=h*j,q=h*k,r=i*j,s=i*k;b[0]=p+s*g,b[4]=r*g-q,b[8]=f*i,b[1]=f*k,b[5]=f*j,b[9]=-g,b[2]=q*g-r,b[6]=s+p*g,b[10]=f*h}else if("ZXY"===a.order){var p=h*j,q=h*k,r=i*j,s=i*k;b[0]=p-s*g,b[4]=-f*k,b[8]=r+q*g,b[1]=q+r*g,b[5]=f*j,b[9]=s-p*g,b[2]=-f*i,b[6]=g,b[10]=f*h}else if("ZYX"===a.order){var l=f*j,m=f*k,n=g*j,o=g*k;b[0]=h*j,b[4]=n*i-m,b[8]=l*i+o,b[1]=h*k,b[5]=o*i+l,b[9]=m*i-n,b[2]=-i,b[6]=g*h,b[10]=f*h}else if("YZX"===a.order){var t=f*h,u=f*i,v=g*h,w=g*i;b[0]=h*j,b[4]=w-t*k,b[8]=v*k+u,b[1]=k,b[5]=f*j,b[9]=-g*j,b[2]=-i*j,b[6]=u*k+v,b[10]=t-w*k}else if("XZY"===a.order){var t=f*h,u=f*i,v=g*h,w=g*i;b[0]=h*j,b[4]=-k,b[8]=i*j,b[1]=t*k+w,b[5]=f*j,b[9]=u*k-v,b[2]=v*k-u,b[6]=g*j,b[10]=w*k+t}return b[3]=0,b[7]=0,b[11]=0,b[12]=0,b[13]=0,b[14]=0,b[15]=1,this},setRotationFromQuaternion:function(a){return console.warn("DEPRECATED: Matrix4's .setRotationFromQuaternion() has been deprecated in favor of makeRotationFromQuaternion.  Please update your code."),this.makeRotationFromQuaternion(a)},makeRotationFromQuaternion:function(a){var b=this.elements,c=a.x,d=a.y,e=a.z,f=a.w,g=c+c,h=d+d,i=e+e,j=c*g,k=c*h,l=c*i,m=d*h,n=d*i,o=e*i,p=f*g,q=f*h,r=f*i;return b[0]=1-(m+o),b[4]=k-r,b[8]=l+q,b[1]=k+r,b[5]=1-(j+o),b[9]=n-p,b[2]=l-q,b[6]=n+p,b[10]=1-(j+m),b[3]=0,b[7]=0,b[11]=0,b[12]=0,b[13]=0,b[14]=0,b[15]=1,this},lookAt:function(){var a=new THREE.Vector3,b=new THREE.Vector3,c=new THREE.Vector3;return function(d,e,f){var g=this.elements;return c.subVectors(d,e).normalize(),0===c.length()&&(c.z=1),a.crossVectors(f,c).normalize(),0===a.length()&&(c.x+=1e-4,a.crossVectors(f,c).normalize()),b.crossVectors(c,a),g[0]=a.x,g[4]=b.x,g[8]=c.x,g[1]=a.y,g[5]=b.y,g[9]=c.y,g[2]=a.z,g[6]=b.z,g[10]=c.z,this}}(),multiply:function(a,b){return void 0!==b?(console.warn("DEPRECATED: Matrix4's .multiply() now only accepts one argument. Use .multiplyMatrices( a, b ) instead."),this.multiplyMatrices(a,b)):this.multiplyMatrices(this,a)},multiplyMatrices:function(a,b){var c=a.elements,d=b.elements,e=this.elements,f=c[0],g=c[4],h=c[8],i=c[12],j=c[1],k=c[5],l=c[9],m=c[13],n=c[2],o=c[6],p=c[10],q=c[14],r=c[3],s=c[7],t=c[11],u=c[15],v=d[0],w=d[4],x=d[8],y=d[12],z=d[1],A=d[5],B=d[9],C=d[13],D=d[2],E=d[6],F=d[10],G=d[14],H=d[3],I=d[7],J=d[11],K=d[15];return e[0]=f*v+g*z+h*D+i*H,e[4]=f*w+g*A+h*E+i*I,e[8]=f*x+g*B+h*F+i*J,e[12]=f*y+g*C+h*G+i*K,e[1]=j*v+k*z+l*D+m*H,e[5]=j*w+k*A+l*E+m*I,e[9]=j*x+k*B+l*F+m*J,e[13]=j*y+k*C+l*G+m*K,e[2]=n*v+o*z+p*D+q*H,e[6]=n*w+o*A+p*E+q*I,e[10]=n*x+o*B+p*F+q*J,e[14]=n*y+o*C+p*G+q*K,e[3]=r*v+s*z+t*D+u*H,e[7]=r*w+s*A+t*E+u*I,e[11]=r*x+s*B+t*F+u*J,e[15]=r*y+s*C+t*G+u*K,this},multiplyToArray:function(a,b,c){var d=this.elements;return this.multiplyMatrices(a,b),c[0]=d[0],c[1]=d[1],c[2]=d[2],c[3]=d[3],c[4]=d[4],c[5]=d[5],c[6]=d[6],c[7]=d[7],c[8]=d[8],c[9]=d[9],c[10]=d[10],c[11]=d[11],c[12]=d[12],c[13]=d[13],c[14]=d[14],c[15]=d[15],this},multiplyScalar:function(a){var b=this.elements;return b[0]*=a,b[4]*=a,b[8]*=a,b[12]*=a,b[1]*=a,b[5]*=a,b[9]*=a,b[13]*=a,b[2]*=a,b[6]*=a,b[10]*=a,b[14]*=a,b[3]*=a,b[7]*=a,b[11]*=a,b[15]*=a,this},multiplyVector3:function(a){return console.warn("DEPRECATED: Matrix4's .multiplyVector3() has been removed. Use vector.applyMatrix4( matrix ) or vector.applyProjection( matrix ) instead."),a.applyProjection(this)},multiplyVector4:function(a){return console.warn("DEPRECATED: Matrix4's .multiplyVector4() has been removed. Use vector.applyMatrix4( matrix ) instead."),a.applyMatrix4(this)},multiplyVector3Array:function(){var a=new THREE.Vector3;return function(b){for(var c=0,d=b.length;c<d;c+=3)a.x=b[c],a.y=b[c+1],a.z=b[c+2],a.applyProjection(this),b[c]=a.x,b[c+1]=a.y,b[c+2]=a.z;return b}}(),rotateAxis:function(a){console.warn("DEPRECATED: Matrix4's .rotateAxis() has been removed. Use Vector3.transformDirection( matrix ) instead."),a.transformDirection(this)},crossVector:function(a){return console.warn("DEPRECATED: Matrix4's .crossVector() has been removed. Use vector.applyMatrix4( matrix ) instead."),a.applyMatrix4(this)},determinant:function(){var a=this.elements,b=a[0],c=a[4],d=a[8],e=a[12],f=a[1],g=a[5],h=a[9],i=a[13],j=a[2],k=a[6],l=a[10],m=a[14],n=a[3],o=a[7],p=a[11],q=a[15];return n*(+e*h*k-d*i*k-e*g*l+c*i*l+d*g*m-c*h*m)+o*(+b*h*m-b*i*l+e*f*l-d*f*m+d*i*j-e*h*j)+p*(+b*i*k-b*g*m-e*f*k+c*f*m+e*g*j-c*i*j)+q*(-d*g*j-b*h*k+b*g*l+d*f*k-c*f*l+c*h*j)},transpose:function(){var a,b=this.elements;return a=b[1],b[1]=b[4],b[4]=a,a=b[2],b[2]=b[8],b[8]=a,a=b[6],b[6]=b[9],b[9]=a,a=b[3],b[3]=b[12],b[12]=a,a=b[7],b[7]=b[13],b[13]=a,a=b[11],b[11]=b[14],b[14]=a,this},flattenToArray:function(a){var b=this.elements;return a[0]=b[0],a[1]=b[1],a[2]=b[2],a[3]=b[3],a[4]=b[4],a[5]=b[5],a[6]=b[6],a[7]=b[7],a[8]=b[8],a[9]=b[9],a[10]=b[10],a[11]=b[11],a[12]=b[12],a[13]=b[13],a[14]=b[14],a[15]=b[15],a},flattenToArrayOffset:function(a,b){var c=this.elements;return a[b]=c[0],a[b+1]=c[1],a[b+2]=c[2],a[b+3]=c[3],a[b+4]=c[4],a[b+5]=c[5],a[b+6]=c[6],a[b+7]=c[7],a[b+8]=c[8],a[b+9]=c[9],a[b+10]=c[10],a[b+11]=c[11],a[b+12]=c[12],a[b+13]=c[13],a[b+14]=c[14],a[b+15]=c[15],a},getPosition:function(){var a=new THREE.Vector3;return function(){console.warn("DEPRECATED: Matrix4's .getPosition() has been removed. Use Vector3.getPositionFromMatrix( matrix ) instead.");var b=this.elements;return a.set(b[12],b[13],b[14])}}(),setPosition:function(a){var b=this.elements;return b[12]=a.x,b[13]=a.y,b[14]=a.z,this},getInverse:function(a,b){var c=this.elements,d=a.elements,e=d[0],f=d[4],g=d[8],h=d[12],i=d[1],j=d[5],k=d[9],l=d[13],m=d[2],n=d[6],o=d[10],p=d[14],q=d[3],r=d[7],s=d[11],t=d[15];c[0]=k*p*r-l*o*r+l*n*s-j*p*s-k*n*t+j*o*t,c[4]=h*o*r-g*p*r-h*n*s+f*p*s+g*n*t-f*o*t,c[8]=g*l*r-h*k*r+h*j*s-f*l*s-g*j*t+f*k*t,c[12]=h*k*n-g*l*n-h*j*o+f*l*o+g*j*p-f*k*p,c[1]=l*o*q-k*p*q-l*m*s+i*p*s+k*m*t-i*o*t,c[5]=g*p*q-h*o*q+h*m*s-e*p*s-g*m*t+e*o*t,c[9]=h*k*q-g*l*q-h*i*s+e*l*s+g*i*t-e*k*t,c[13]=g*l*m-h*k*m+h*i*o-e*l*o-g*i*p+e*k*p,c[2]=j*p*q-l*n*q+l*m*r-i*p*r-j*m*t+i*n*t,c[6]=h*n*q-f*p*q-h*m*r+e*p*r+f*m*t-e*n*t,c[10]=f*l*q-h*j*q+h*i*r-e*l*r-f*i*t+e*j*t,c[14]=h*j*m-f*l*m-h*i*n+e*l*n+f*i*p-e*j*p,c[3]=k*n*q-j*o*q-k*m*r+i*o*r+j*m*s-i*n*s,c[7]=f*o*q-g*n*q+g*m*r-e*o*r-f*m*s+e*n*s,c[11]=g*j*q-f*k*q-g*i*r+e*k*r+f*i*s-e*j*s,c[15]=f*k*m-g*j*m+g*i*n-e*k*n-f*i*o+e*j*o;var u=e*c[0]+i*c[4]+m*c[8]+q*c[12];if(0==u){var v="Matrix4.getInverse(): can't invert matrix, determinant is 0";if(b)throw new Error(v);return console.warn(v),this.identity(),this}return this.multiplyScalar(1/u),this},translate:function(a){console.warn("DEPRECATED: Matrix4's .translate() has been removed.")},rotateX:function(a){console.warn("DEPRECATED: Matrix4's .rotateX() has been removed.")},rotateY:function(a){console.warn("DEPRECATED: Matrix4's .rotateY() has been removed.")},rotateZ:function(a){console.warn("DEPRECATED: Matrix4's .rotateZ() has been removed.")},rotateByAxis:function(a,b){console.warn("DEPRECATED: Matrix4's .rotateByAxis() has been removed.")},scale:function(a){var b=this.elements,c=a.x,d=a.y,e=a.z;return b[0]*=c,b[4]*=d,b[8]*=e,b[1]*=c,b[5]*=d,b[9]*=e,b[2]*=c,b[6]*=d,b[10]*=e,b[3]*=c,b[7]*=d,b[11]*=e,this},getMaxScaleOnAxis:function(){var a=this.elements,b=a[0]*a[0]+a[1]*a[1]+a[2]*a[2],c=a[4]*a[4]+a[5]*a[5]+a[6]*a[6],d=a[8]*a[8]+a[9]*a[9]+a[10]*a[10];return Math.sqrt(Math.max(b,Math.max(c,d)))},makeTranslation:function(a,b,c){return this.set(1,0,0,a,0,1,0,b,0,0,1,c,0,0,0,1),this},makeRotationX:function(a){var b=Math.cos(a),c=Math.sin(a);return this.set(1,0,0,0,0,b,-c,0,0,c,b,0,0,0,0,1),this},makeRotationY:function(a){var b=Math.cos(a),c=Math.sin(a);return this.set(b,0,c,0,0,1,0,0,-c,0,b,0,0,0,0,1),this},makeRotationZ:function(a){var b=Math.cos(a),c=Math.sin(a);return this.set(b,-c,0,0,c,b,0,0,0,0,1,0,0,0,0,1),this},makeRotationAxis:function(a,b){var c=Math.cos(b),d=Math.sin(b),e=1-c,f=a.x,g=a.y,h=a.z,i=e*f,j=e*g;return this.set(i*f+c,i*g-d*h,i*h+d*g,0,i*g+d*h,j*g+c,j*h-d*f,0,i*h-d*g,j*h+d*f,e*h*h+c,0,0,0,0,1),this},makeScale:function(a,b,c){return this.set(a,0,0,0,0,b,0,0,0,0,c,0,0,0,0,1),this},compose:function(a,b,c){return this.makeRotationFromQuaternion(b),this.scale(c),this.setPosition(a),this},decompose:function(){var a=new THREE.Vector3,b=new THREE.Matrix4;return function(c,d,e){var f=this.elements,g=a.set(f[0],f[1],f[2]).length(),h=a.set(f[4],f[5],f[6]).length(),i=a.set(f[8],f[9],f[10]).length();c.x=f[12],c.y=f[13],c.z=f[14],b.elements.set(this.elements);var j=1/g,k=1/h,l=1/i;return b.elements[0]*=j,b.elements[1]*=j,b.elements[2]*=j,b.elements[4]*=k,b.elements[5]*=k,b.elements[6]*=k,b.elements[8]*=l,b.elements[9]*=l,b.elements[10]*=l,d.setFromRotationMatrix(b),e.x=g,e.y=h,e.z=i,this}}(),makeFrustum:function(a,b,c,d,e,f){var g=this.elements,h=2*e/(b-a),i=2*e/(d-c),j=(b+a)/(b-a),k=(d+c)/(d-c),l=-(f+e)/(f-e),m=-2*f*e/(f-e);return g[0]=h,g[4]=0,g[8]=j,g[12]=0,g[1]=0,g[5]=i,g[9]=k,g[13]=0,g[2]=0,g[6]=0,g[10]=l,g[14]=m,g[3]=0,g[7]=0,g[11]=-1,g[15]=0,this},makePerspective:function(a,b,c,d){var e=c*Math.tan(THREE.Math.degToRad(.5*a)),f=-e,g=f*b,h=e*b;return this.makeFrustum(g,h,f,e,c,d)},makeOrthographic:function(a,b,c,d,e,f){var g=this.elements,h=b-a,i=c-d,j=f-e,k=(b+a)/h,l=(c+d)/i,m=(f+e)/j;return g[0]=2/h,g[4]=0,g[8]=0,g[12]=-k,g[1]=0,g[5]=2/i,g[9]=0,g[13]=-l,g[2]=0,g[6]=0,g[10]=-2/j,g[14]=-m,g[3]=0,g[7]=0,g[11]=0,g[15]=1,this},fromArray:function(a){return this.elements.set(a),this},toArray:function(){var a=this.elements;return[a[0],a[1],a[2],a[3],a[4],a[5],a[6],a[7],a[8],a[9],a[10],a[11],a[12],a[13],a[14],a[15]]},clone:function(){var a=this.elements;return new THREE.Matrix4(a[0],a[4],a[8],a[12],a[1],a[5],a[9],a[13],a[2],a[6],a[10],a[14],a[3],a[7],a[11],a[15])}},THREE.Ray=function(a,b){this.origin=void 0!==a?a:new THREE.Vector3,this.direction=void 0!==b?b:new THREE.Vector3},THREE.Ray.prototype={constructor:THREE.Ray,set:function(a,b){return this.origin.copy(a),this.direction.copy(b),this},copy:function(a){return this.origin.copy(a.origin),this.direction.copy(a.direction),this},at:function(a,b){var c=b||new THREE.Vector3;return c.copy(this.direction).multiplyScalar(a).add(this.origin)},recast:function(){var a=new THREE.Vector3;return function(b){return this.origin.copy(this.at(b,a)),this}}(),closestPointToPoint:function(a,b){var c=b||new THREE.Vector3;c.subVectors(a,this.origin);var d=c.dot(this.direction);return d<0?c.copy(this.origin):c.copy(this.direction).multiplyScalar(d).add(this.origin)},distanceToPoint:function(){var a=new THREE.Vector3;return function(b){var c=a.subVectors(b,this.origin).dot(this.direction);return c<0?this.origin.distanceTo(b):(a.copy(this.direction).multiplyScalar(c).add(this.origin),a.distanceTo(b))}}(),distanceSqToSegment:function(a,b,c,d){var e,f,g,h,i=a.clone().add(b).multiplyScalar(.5),j=b.clone().sub(a).normalize(),k=.5*a.distanceTo(b),l=this.origin.clone().sub(i),m=-this.direction.dot(j),n=l.dot(this.direction),o=-l.dot(j),p=l.lengthSq(),q=Math.abs(1-m*m);if(q>=0)if(e=m*o-n,f=m*n-o,h=k*q,e>=0)if(f>=-h)if(f<=h){var r=1/q;e*=r,f*=r,g=e*(e+m*f+2*n)+f*(m*e+f+2*o)+p}else f=k,e=Math.max(0,-(m*f+n)),g=-e*e+f*(f+2*o)+p;else f=-k,e=Math.max(0,-(m*f+n)),g=-e*e+f*(f+2*o)+p;else f<=-h?(e=Math.max(0,-(-m*k+n)),f=e>0?-k:Math.min(Math.max(-k,-o),k),g=-e*e+f*(f+2*o)+p):f<=h?(e=0,f=Math.min(Math.max(-k,-o),k),g=f*(f+2*o)+p):(e=Math.max(0,-(m*k+n)),f=e>0?k:Math.min(Math.max(-k,-o),k),g=-e*e+f*(f+2*o)+p);else f=m>0?-k:k,e=Math.max(0,-(m*f+n)),g=-e*e+f*(f+2*o)+p;return c&&c.copy(this.direction.clone().multiplyScalar(e).add(this.origin)),d&&d.copy(j.clone().multiplyScalar(f).add(i)),g},isIntersectionSphere:function(a){return this.distanceToPoint(a.center)<=a.radius},isIntersectionPlane:function(a){var b=a.distanceToPoint(this.origin);if(0===b)return!0;var c=a.normal.dot(this.direction);return c*b<0},distanceToPlane:function(a){var b=a.normal.dot(this.direction);if(0==b)return 0==a.distanceToPoint(this.origin)?0:null;var c=-(this.origin.dot(a.normal)+a.constant)/b;return c>=0?c:null},intersectPlane:function(a,b){var c=this.distanceToPlane(a);return null===c?null:this.at(c,b)},isIntersectionBox:function(){var a=new THREE.Vector3;return function(b){return null!==this.intersectBox(b,a)}}(),intersectBox:function(a,b){var c,d,e,f,g,h,i=1/this.direction.x,j=1/this.direction.y,k=1/this.direction.z,l=this.origin;return i>=0?(c=(a.min.x-l.x)*i,d=(a.max.x-l.x)*i):(c=(a.max.x-l.x)*i,d=(a.min.x-l.x)*i),j>=0?(e=(a.min.y-l.y)*j,f=(a.max.y-l.y)*j):(e=(a.max.y-l.y)*j,f=(a.min.y-l.y)*j),c>f||e>d?null:((e>c||c!==c)&&(c=e),(f<d||d!==d)&&(d=f),k>=0?(g=(a.min.z-l.z)*k,h=(a.max.z-l.z)*k):(g=(a.max.z-l.z)*k,h=(a.min.z-l.z)*k),c>h||g>d?null:((g>c||c!==c)&&(c=g),(h<d||d!==d)&&(d=h),d<0?null:this.at(c>=0?c:d,b)))},intersectTriangle:function(){var a=new THREE.Vector3,b=new THREE.Vector3,c=new THREE.Vector3,d=new THREE.Vector3;return function(e,f,g,h,i){b.subVectors(f,e),c.subVectors(g,e),d.crossVectors(b,c);var j,k=this.direction.dot(d);if(k>0){if(h)return null;j=1}else{if(!(k<0))return null;j=-1,k=-k}a.subVectors(this.origin,e);var l=j*this.direction.dot(c.crossVectors(a,c));if(l<0)return null;var m=j*this.direction.dot(b.cross(a));if(m<0)return null;if(l+m>k)return null;var n=-j*a.dot(d);return n<0?null:this.at(n/k,i)}}(),applyMatrix4:function(a){return this.direction.add(this.origin).applyMatrix4(a),this.origin.applyMatrix4(a),this.direction.sub(this.origin),this.direction.normalize(),this},equals:function(a){return a.origin.equals(this.origin)&&a.direction.equals(this.direction)},clone:function(){return(new THREE.Ray).copy(this)}},THREE.Sphere=function(a,b){this.center=void 0!==a?a:new THREE.Vector3,this.radius=void 0!==b?b:0},THREE.Sphere.prototype={constructor:THREE.Sphere,set:function(a,b){return this.center.copy(a),this.radius=b,this},setFromPoints:function(){var a=new THREE.Box3;return function(b,c){var d=this.center;void 0!==c?d.copy(c):a.setFromPoints(b).center(d);for(var e=0,f=0,g=b.length;f<g;f++)e=Math.max(e,d.distanceToSquared(b[f]));return this.radius=Math.sqrt(e),this}}(),copy:function(a){return this.center.copy(a.center),this.radius=a.radius,this},empty:function(){return this.radius<=0},containsPoint:function(a){return a.distanceToSquared(this.center)<=this.radius*this.radius},distanceToPoint:function(a){return a.distanceTo(this.center)-this.radius},intersectsSphere:function(a){var b=this.radius+a.radius;return a.center.distanceToSquared(this.center)<=b*b},clampPoint:function(a,b){var c=this.center.distanceToSquared(a),d=b||new THREE.Vector3;return d.copy(a),c>this.radius*this.radius&&(d.sub(this.center).normalize(),d.multiplyScalar(this.radius).add(this.center)),d},getBoundingBox:function(a){var b=a||new THREE.Box3;return b.set(this.center,this.center),b.expandByScalar(this.radius),b},applyMatrix4:function(a){return this.center.applyMatrix4(a),this.radius=this.radius*a.getMaxScaleOnAxis(),this},translate:function(a){return this.center.add(a),this},equals:function(a){return a.center.equals(this.center)&&a.radius===this.radius},clone:function(){return(new THREE.Sphere).copy(this)}},THREE.Frustum=function(a,b,c,d,e,f){this.planes=[void 0!==a?a:new THREE.Plane,void 0!==b?b:new THREE.Plane,void 0!==c?c:new THREE.Plane,void 0!==d?d:new THREE.Plane,void 0!==e?e:new THREE.Plane,void 0!==f?f:new THREE.Plane]},THREE.Frustum.prototype={constructor:THREE.Frustum,set:function(a,b,c,d,e,f){var g=this.planes;return g[0].copy(a),g[1].copy(b),g[2].copy(c),g[3].copy(d),g[4].copy(e),g[5].copy(f),this},copy:function(a){for(var b=this.planes,c=0;c<6;c++)b[c].copy(a.planes[c]);return this},setFromMatrix:function(a){var b=this.planes,c=a.elements,d=c[0],e=c[1],f=c[2],g=c[3],h=c[4],i=c[5],j=c[6],k=c[7],l=c[8],m=c[9],n=c[10],o=c[11],p=c[12],q=c[13],r=c[14],s=c[15];return b[0].setComponents(g-d,k-h,o-l,s-p).normalize(),b[1].setComponents(g+d,k+h,o+l,s+p).normalize(),b[2].setComponents(g+e,k+i,o+m,s+q).normalize(),b[3].setComponents(g-e,k-i,o-m,s-q).normalize(),b[4].setComponents(g-f,k-j,o-n,s-r).normalize(),b[5].setComponents(g+f,k+j,o+n,s+r).normalize(),this},intersectsObject:function(){var a=new THREE.Sphere;return function(b){var c=b.geometry;return null===c.boundingSphere&&c.computeBoundingSphere(),a.copy(c.boundingSphere),a.applyMatrix4(b.matrixWorld),this.intersectsSphere(a)}}(),intersectsSphere:function(a){for(var b=this.planes,c=a.center,d=-a.radius,e=0;e<6;e++){var f=b[e].distanceToPoint(c);if(f<d)return!1}return!0},intersectsBox:function(){var a=new THREE.Vector3,b=new THREE.Vector3;return function(c){for(var d=this.planes,e=0;e<6;e++){var f=d[e];a.x=f.normal.x>0?c.min.x:c.max.x,b.x=f.normal.x>0?c.max.x:c.min.x,a.y=f.normal.y>0?c.min.y:c.max.y,b.y=f.normal.y>0?c.max.y:c.min.y,a.z=f.normal.z>0?c.min.z:c.max.z,b.z=f.normal.z>0?c.max.z:c.min.z;var g=f.distanceToPoint(a),h=f.distanceToPoint(b);if(g<0&&h<0)return!1}return!0}}(),containsPoint:function(a){for(var b=this.planes,c=0;c<6;c++)if(b[c].distanceToPoint(a)<0)return!1;return!0},clone:function(){return(new THREE.Frustum).copy(this)}},THREE.Plane=function(a,b){this.normal=void 0!==a?a:new THREE.Vector3(1,0,0),this.constant=void 0!==b?b:0},THREE.Plane.prototype={constructor:THREE.Plane,set:function(a,b){return this.normal.copy(a),this.constant=b,this},setComponents:function(a,b,c,d){return this.normal.set(a,b,c),this.constant=d,this},setFromNormalAndCoplanarPoint:function(a,b){return this.normal.copy(a),this.constant=-b.dot(this.normal),this},setFromCoplanarPoints:function(){var a=new THREE.Vector3,b=new THREE.Vector3;return function(c,d,e){var f=a.subVectors(e,d).cross(b.subVectors(c,d)).normalize();return this.setFromNormalAndCoplanarPoint(f,c),this}}(),copy:function(a){return this.normal.copy(a.normal),this.constant=a.constant,this},normalize:function(){var a=1/this.normal.length();return this.normal.multiplyScalar(a),this.constant*=a,this},negate:function(){return this.constant*=-1,this.normal.negate(),this},distanceToPoint:function(a){return this.normal.dot(a)+this.constant},distanceToSphere:function(a){return this.distanceToPoint(a.center)-a.radius},projectPoint:function(a,b){return this.orthoPoint(a,b).sub(a).negate()},orthoPoint:function(a,b){var c=this.distanceToPoint(a),d=b||new THREE.Vector3;return d.copy(this.normal).multiplyScalar(c)},isIntersectionLine:function(a){var b=this.distanceToPoint(a.start),c=this.distanceToPoint(a.end);return b<0&&c>0||c<0&&b>0},intersectLine:function(){var a=new THREE.Vector3;return function(b,c){var d=c||new THREE.Vector3,e=b.delta(a),f=this.normal.dot(e);if(0!=f){var g=-(b.start.dot(this.normal)+this.constant)/f;if(!(g<0||g>1))return d.copy(e).multiplyScalar(g).add(b.start)}else if(0==this.distanceToPoint(b.start))return d.copy(b.start)}}(),coplanarPoint:function(a){var b=a||new THREE.Vector3;return b.copy(this.normal).multiplyScalar(-this.constant)},applyMatrix4:function(){var a=new THREE.Vector3,b=new THREE.Vector3;return function(c,d){d=d||(new THREE.Matrix3).getNormalMatrix(c);var e=a.copy(this.normal).applyMatrix3(d),f=this.coplanarPoint(b);return f.applyMatrix4(c),this.setFromNormalAndCoplanarPoint(e,f),this}}(),translate:function(a){return this.constant=this.constant-a.dot(this.normal),this},equals:function(a){return a.normal.equals(this.normal)&&a.constant==this.constant},clone:function(){return(new THREE.Plane).copy(this)}},THREE.Math={PI2:2*Math.PI,generateUUID:function(){var a,b="0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz".split(""),c=new Array(36),d=0;return function(){for(var e=0;e<36;e++)8==e||13==e||18==e||23==e?c[e]="-":14==e?c[e]="4":(d<=2&&(d=33554432+16777216*Math.random()|0),a=15&d,d>>=4,c[e]=b[19==e?3&a|8:a]);return c.join("")}}(),clamp:function(a,b,c){return a<b?b:a>c?c:a},clampBottom:function(a,b){return a<b?b:a},mapLinear:function(a,b,c,d,e){return d+(a-b)*(e-d)/(c-b)},smoothstep:function(a,b,c){return a<=b?0:a>=c?1:(a=(a-b)/(c-b),a*a*(3-2*a))},smootherstep:function(a,b,c){return a<=b?0:a>=c?1:(a=(a-b)/(c-b),a*a*a*(a*(6*a-15)+10))},random16:function(){return(65280*Math.random()+255*Math.random())/65535},randInt:function(a,b){return a+Math.floor(Math.random()*(b-a+1))},randFloat:function(a,b){return a+Math.random()*(b-a)},randFloatSpread:function(a){return a*(.5-Math.random())},sign:function(a){return a<0?-1:a>0?1:0},degToRad:function(){var a=Math.PI/180;return function(b){return b*a}}(),radToDeg:function(){var a=180/Math.PI;return function(b){return b*a}}()},THREE.Spline=function(a){function b(a,b,c,d,e,f,g){var h=.5*(c-a),i=.5*(d-b);return(2*(b-c)+h+i)*g+(-3*(b-c)-2*h-i)*f+h*e+b}this.points=a;var c,d,e,f,g,h,i,j,k,l=[],m={x:0,y:0,z:0};this.initFromArray=function(a){this.points=[];for(var b=0;b<a.length;b++)this.points[b]={x:a[b][0],y:a[b][1],z:a[b][2]}},this.getPoint=function(a){return c=(this.points.length-1)*a,d=Math.floor(c),e=c-d,l[0]=0===d?d:d-1,l[1]=d,l[2]=d>this.points.length-2?this.points.length-1:d+1,l[3]=d>this.points.length-3?this.points.length-1:d+2,h=this.points[l[0]],i=this.points[l[1]],j=this.points[l[2]],k=this.points[l[3]],f=e*e,
g=e*f,m.x=b(h.x,i.x,j.x,k.x,e,f,g),m.y=b(h.y,i.y,j.y,k.y,e,f,g),m.z=b(h.z,i.z,j.z,k.z,e,f,g),m},this.getControlPointsArray=function(){var a,b,c=this.points.length,d=[];for(a=0;a<c;a++)b=this.points[a],d[a]=[b.x,b.y,b.z];return d},this.getLength=function(a){var b,c,d,e,f=0,g=0,h=0,i=new THREE.Vector3,j=new THREE.Vector3,k=[],l=0;for(k[0]=0,a||(a=100),d=this.points.length*a,i.copy(this.points[0]),b=1;b<d;b++)c=b/d,e=this.getPoint(c),j.copy(e),l+=j.distanceTo(i),i.copy(e),f=(this.points.length-1)*c,g=Math.floor(f),g!=h&&(k[g]=l,h=g);return k[k.length]=l,{chunks:k,total:l}},this.reparametrizeByArcLength=function(a){var b,c,d,e,f,g,h,i,j=[],k=new THREE.Vector3,l=this.getLength();for(j.push(k.copy(this.points[0]).clone()),b=1;b<this.points.length;b++){for(g=l.chunks[b]-l.chunks[b-1],h=Math.ceil(a*g/l.total),e=(b-1)/(this.points.length-1),f=b/(this.points.length-1),c=1;c<h-1;c++)d=e+c*(1/h)*(f-e),i=this.getPoint(d),j.push(k.copy(i).clone());j.push(k.copy(this.points[b]).clone())}this.points=j}},THREE.Triangle=function(a,b,c){this.a=void 0!==a?a:new THREE.Vector3,this.b=void 0!==b?b:new THREE.Vector3,this.c=void 0!==c?c:new THREE.Vector3},THREE.Triangle.normal=function(){var a=new THREE.Vector3;return function(b,c,d,e){var f=e||new THREE.Vector3;f.subVectors(d,c),a.subVectors(b,c),f.cross(a);var g=f.lengthSq();return g>0?f.multiplyScalar(1/Math.sqrt(g)):f.set(0,0,0)}}(),THREE.Triangle.barycoordFromPoint=function(){var a=new THREE.Vector3,b=new THREE.Vector3,c=new THREE.Vector3;return function(d,e,f,g,h){a.subVectors(g,e),b.subVectors(f,e),c.subVectors(d,e);var i=a.dot(a),j=a.dot(b),k=a.dot(c),l=b.dot(b),m=b.dot(c),n=i*l-j*j,o=h||new THREE.Vector3;if(0==n)return o.set(-2,-1,-1);var p=1/n,q=(l*k-j*m)*p,r=(i*m-j*k)*p;return o.set(1-q-r,r,q)}}(),THREE.Triangle.containsPoint=function(){var a=new THREE.Vector3;return function(b,c,d,e){var f=THREE.Triangle.barycoordFromPoint(b,c,d,e,a);return f.x>=0&&f.y>=0&&f.x+f.y<=1}}(),THREE.Triangle.prototype={constructor:THREE.Triangle,set:function(a,b,c){return this.a.copy(a),this.b.copy(b),this.c.copy(c),this},setFromPointsAndIndices:function(a,b,c,d){return this.a.copy(a[b]),this.b.copy(a[c]),this.c.copy(a[d]),this},copy:function(a){return this.a.copy(a.a),this.b.copy(a.b),this.c.copy(a.c),this},area:function(){var a=new THREE.Vector3,b=new THREE.Vector3;return function(){return a.subVectors(this.c,this.b),b.subVectors(this.a,this.b),.5*a.cross(b).length()}}(),midpoint:function(a){var b=a||new THREE.Vector3;return b.addVectors(this.a,this.b).add(this.c).multiplyScalar(1/3)},normal:function(a){return THREE.Triangle.normal(this.a,this.b,this.c,a)},plane:function(a){var b=a||new THREE.Plane;return b.setFromCoplanarPoints(this.a,this.b,this.c)},barycoordFromPoint:function(a,b){return THREE.Triangle.barycoordFromPoint(a,this.a,this.b,this.c,b)},containsPoint:function(a){return THREE.Triangle.containsPoint(a,this.a,this.b,this.c)},equals:function(a){return a.a.equals(this.a)&&a.b.equals(this.b)&&a.c.equals(this.c)},clone:function(){return(new THREE.Triangle).copy(this)}},THREE.Vertex=function(a){return console.warn("THREE.Vertex has been DEPRECATED. Use THREE.Vector3 instead."),a},THREE.UV=function(a,b){return console.warn("THREE.UV has been DEPRECATED. Use THREE.Vector2 instead."),new THREE.Vector2(a,b)},THREE.Clock=function(a){this.autoStart=void 0===a||a,this.startTime=0,this.oldTime=0,this.elapsedTime=0,this.running=!1},THREE.Clock.prototype={constructor:THREE.Clock,start:function(){this.startTime=void 0!==self.performance&&void 0!==self.performance.now?self.performance.now():Date.now(),this.oldTime=this.startTime,this.running=!0},stop:function(){this.getElapsedTime(),this.running=!1},getElapsedTime:function(){return this.getDelta(),this.elapsedTime},getDelta:function(){var a=0;if(this.autoStart&&!this.running&&this.start(),this.running){var b=void 0!==self.performance&&void 0!==self.performance.now?self.performance.now():Date.now();a=.001*(b-this.oldTime),this.oldTime=b,this.elapsedTime+=a}return a}},THREE.EventDispatcher=function(){},THREE.EventDispatcher.prototype={constructor:THREE.EventDispatcher,apply:function(a){a.addEventListener=THREE.EventDispatcher.prototype.addEventListener,a.hasEventListener=THREE.EventDispatcher.prototype.hasEventListener,a.removeEventListener=THREE.EventDispatcher.prototype.removeEventListener,a.dispatchEvent=THREE.EventDispatcher.prototype.dispatchEvent},addEventListener:function(a,b){void 0===this._listeners&&(this._listeners={});var c=this._listeners;void 0===c[a]&&(c[a]=[]),c[a].indexOf(b)===-1&&c[a].push(b)},hasEventListener:function(a,b){if(void 0===this._listeners)return!1;var c=this._listeners;return void 0!==c[a]&&c[a].indexOf(b)!==-1},removeEventListener:function(a,b){if(void 0!==this._listeners){var c=this._listeners,d=c[a].indexOf(b);d!==-1&&c[a].splice(d,1)}},dispatchEvent:function(a){if(void 0!==this._listeners){var b=this._listeners,c=b[a.type];if(void 0!==c){a.target=this;for(var d=0,e=c.length;d<e;d++)c[d].call(this,a)}}}},function(a){a.Raycaster=function(b,c,d,e){this.ray=new a.Ray(b,c),this.near=d||0,this.far=e||1/0};var b=new a.Sphere,c=new a.Ray,d=(new a.Plane,new a.Vector3,new a.Vector3),e=new a.Matrix4,f=function(a,b){return a.distance-b.distance},g=new a.Vector3,h=new a.Vector3,i=new a.Vector3,j=function(f,k,l){if(f instanceof a.Particle){d.getPositionFromMatrix(f.matrixWorld);var m=k.ray.distanceToPoint(d);if(m>f.scale.x)return l;l.push({distance:m,point:f.position,face:null,object:f})}else if(f instanceof a.LOD){d.getPositionFromMatrix(f.matrixWorld);var m=k.ray.origin.distanceTo(d);j(f.getObjectForDistance(m),k,l)}else if(f instanceof a.Mesh){var n=f.geometry;if(null===n.boundingSphere&&n.computeBoundingSphere(),b.copy(n.boundingSphere),b.applyMatrix4(f.matrixWorld),k.ray.isIntersectionSphere(b)===!1)return l;if(e.getInverse(f.matrixWorld),c.copy(k.ray).applyMatrix4(e),null!==n.boundingBox&&c.isIntersectionBox(n.boundingBox)===!1)return l;var o=n.vertices;if(n instanceof a.BufferGeometry){var p=f.material;if(void 0===p)return l;if(n.dynamic===!1)return l;var q,r,s,t=k.precision;if(void 0!==n.attributes.index)for(var u=n.offsets,v=n.attributes.index.array,w=n.attributes.position.array,x=n.offsets.length,y=n.attributes.index.array.length/3,z=0;z<x;++z)for(var A=u[z].start,B=u[z].count,C=u[z].index,D=A,E=A+B;D<E;D+=3){q=C+v[D],r=C+v[D+1],s=C+v[D+2],g.set(w[3*q],w[3*q+1],w[3*q+2]),h.set(w[3*r],w[3*r+1],w[3*r+2]),i.set(w[3*s],w[3*s+1],w[3*s+2]);var F=c.intersectTriangle(g,h,i,p.side!==a.DoubleSide);if(null!==F){F.applyMatrix4(f.matrixWorld);var m=k.ray.origin.distanceTo(F);m<t||m<k.near||m>k.far||l.push({distance:m,point:F,face:null,faceIndex:null,object:f})}}else for(var u=n.offsets,w=n.attributes.position.array,x=n.offsets.length,y=n.attributes.position.array.length,D=0;D<y;D+=3){q=D,r=D+1,s=D+2,g.set(w[3*q],w[3*q+1],w[3*q+2]),h.set(w[3*r],w[3*r+1],w[3*r+2]),i.set(w[3*s],w[3*s+1],w[3*s+2]);var F=c.intersectTriangle(g,h,i,p.side!==a.DoubleSide);if(null!==F){F.applyMatrix4(f.matrixWorld);var m=k.ray.origin.distanceTo(F);m<t||m<k.near||m>k.far||l.push({distance:m,point:F,face:null,faceIndex:null,object:f})}}}else if(n instanceof a.Geometry)for(var q,r,s,G=f.material instanceof a.MeshFaceMaterial,H=G===!0?f.material.materials:null,t=k.precision,I=0,y=n.faces.length;I<y;I++){var J=n.faces[I],p=G===!0?H[J.materialIndex]:f.material;if(void 0!==p){q=o[J.a],r=o[J.b],s=o[J.c];var F=c.intersectTriangle(q,r,s,p.side!==a.DoubleSide);if(null!==F){F.applyMatrix4(f.matrixWorld);var m=k.ray.origin.distanceTo(F);m<t||m<k.near||m>k.far||l.push({distance:m,point:F,face:J,faceIndex:I,object:f})}}}}else if(f instanceof a.Line){var t=k.linePrecision,K=t*t,n=f.geometry;if(null===n.boundingSphere&&n.computeBoundingSphere(),b.copy(n.boundingSphere),b.applyMatrix4(f.matrixWorld),k.ray.isIntersectionSphere(b)===!1)return l;e.getInverse(f.matrixWorld),c.copy(k.ray).applyMatrix4(e);for(var o=n.vertices,L=o.length,M=new a.Vector3,N=new a.Vector3,O=f.type===a.LineStrip?1:2,D=0;D<L-1;D+=O){var P=c.distanceSqToSegment(o[D],o[D+1],N,M);if(!(P>K)){var m=c.origin.distanceTo(N);m<k.near||m>k.far||l.push({distance:m,point:M.clone().applyMatrix4(f.matrixWorld),face:null,faceIndex:null,object:f})}}}},k=function(a,b,c){for(var d=a.getDescendants(),e=0,f=d.length;e<f;e++)j(d[e],b,c)};a.Raycaster.prototype.precision=1e-4,a.Raycaster.prototype.linePrecision=1,a.Raycaster.prototype.set=function(a,b){this.ray.set(a,b)},a.Raycaster.prototype.intersectObject=function(a,b){var c=[];return b===!0&&k(a,this,c),j(a,this,c),c.sort(f),c},a.Raycaster.prototype.intersectObjects=function(a,b){for(var c=[],d=0,e=a.length;d<e;d++)j(a[d],this,c),b===!0&&k(a[d],this,c);return c.sort(f),c}}(THREE),THREE.Object3D=function(){this.id=THREE.Object3DIdCount++,this.uuid=THREE.Math.generateUUID(),this.name="",this.parent=void 0,this.children=[],this.up=new THREE.Vector3(0,1,0),this.position=new THREE.Vector3,this.rotation=new THREE.Euler,this.quaternion=new THREE.Quaternion,this.scale=new THREE.Vector3(1,1,1),this.rotation._quaternion=this.quaternion,this.quaternion._euler=this.rotation,this.renderDepth=null,this.rotationAutoUpdate=!0,this.matrix=new THREE.Matrix4,this.matrixWorld=new THREE.Matrix4,this.matrixAutoUpdate=!0,this.matrixWorldNeedsUpdate=!0,this.visible=!0,this.castShadow=!1,this.receiveShadow=!1,this.frustumCulled=!0,this.userData={}},THREE.Object3D.prototype={constructor:THREE.Object3D,get eulerOrder(){return console.warn("DEPRECATED: Object3D's .eulerOrder has been moved to Object3D's .rotation.order."),this.rotation.order},set eulerOrder(a){console.warn("DEPRECATED: Object3D's .eulerOrder has been moved to Object3D's .rotation.order."),this.rotation.order=a},get useQuaternion(){console.warn("DEPRECATED: Object3D's .useQuaternion has been removed. The library now uses quaternions by default.")},set useQuaternion(a){console.warn("DEPRECATED: Object3D's .useQuaternion has been removed. The library now uses quaternions by default.")},applyMatrix:function(){var a=new THREE.Matrix4;return function(b){this.matrix.multiplyMatrices(b,this.matrix),this.position.getPositionFromMatrix(this.matrix),this.scale.getScaleFromMatrix(this.matrix),a.extractRotation(this.matrix),this.quaternion.setFromRotationMatrix(a)}}(),setRotationFromAxisAngle:function(a,b){this.quaternion.setFromAxisAngle(a,b)},setRotationFromEuler:function(a){this.quaternion.setFromEuler(a,!0)},setRotationFromMatrix:function(a){this.quaternion.setFromRotationMatrix(a)},setRotationFromQuaternion:function(a){this.quaternion.copy(a)},rotateOnAxis:function(){var a=new THREE.Quaternion;return function(b,c){return a.setFromAxisAngle(b,c),this.quaternion.multiply(a),this}}(),rotateX:function(){var a=new THREE.Vector3(1,0,0);return function(b){return this.rotateOnAxis(a,b)}}(),rotateY:function(){var a=new THREE.Vector3(0,1,0);return function(b){return this.rotateOnAxis(a,b)}}(),rotateZ:function(){var a=new THREE.Vector3(0,0,1);return function(b){return this.rotateOnAxis(a,b)}}(),translateOnAxis:function(){var a=new THREE.Vector3;return function(b,c){return a.copy(b),a.applyQuaternion(this.quaternion),this.position.add(a.multiplyScalar(c)),this}}(),translate:function(a,b){return console.warn("DEPRECATED: Object3D's .translate() has been removed. Use .translateOnAxis( axis, distance ) instead. Note args have been changed."),this.translateOnAxis(b,a)},translateX:function(){var a=new THREE.Vector3(1,0,0);return function(b){return this.translateOnAxis(a,b)}}(),translateY:function(){var a=new THREE.Vector3(0,1,0);return function(b){return this.translateOnAxis(a,b)}}(),translateZ:function(){var a=new THREE.Vector3(0,0,1);return function(b){return this.translateOnAxis(a,b)}}(),localToWorld:function(a){return a.applyMatrix4(this.matrixWorld)},worldToLocal:function(){var a=new THREE.Matrix4;return function(b){return b.applyMatrix4(a.getInverse(this.matrixWorld))}}(),lookAt:function(){var a=new THREE.Matrix4;return function(b){a.lookAt(b,this.position,this.up),this.quaternion.setFromRotationMatrix(a)}}(),add:function(a){if(a===this)return void console.warn("THREE.Object3D.add: An object can't be added as a child of itself.");if(a instanceof THREE.Object3D){void 0!==a.parent&&a.parent.remove(a),a.parent=this,a.dispatchEvent({type:"added"}),this.children.push(a);for(var b=this;void 0!==b.parent;)b=b.parent;void 0!==b&&b instanceof THREE.Scene&&b.__addObject(a)}},remove:function(a){var b=this.children.indexOf(a);if(b!==-1){a.parent=void 0,a.dispatchEvent({type:"removed"}),this.children.splice(b,1);for(var c=this;void 0!==c.parent;)c=c.parent;void 0!==c&&c instanceof THREE.Scene&&c.__removeObject(a)}},traverse:function(a){a(this);for(var b=0,c=this.children.length;b<c;b++)this.children[b].traverse(a)},getObjectById:function(a,b){for(var c=0,d=this.children.length;c<d;c++){var e=this.children[c];if(e.id===a)return e;if(b===!0&&(e=e.getObjectById(a,b),void 0!==e))return e}},getObjectByName:function(a,b){for(var c=0,d=this.children.length;c<d;c++){var e=this.children[c];if(e.name===a)return e;if(b===!0&&(e=e.getObjectByName(a,b),void 0!==e))return e}},getChildByName:function(a,b){return console.warn("DEPRECATED: Object3D's .getChildByName() has been renamed to .getObjectByName()."),this.getObjectByName(a,b)},getDescendants:function(a){void 0===a&&(a=[]),Array.prototype.push.apply(a,this.children);for(var b=0,c=this.children.length;b<c;b++)this.children[b].getDescendants(a);return a},updateMatrix:function(){this.matrix.compose(this.position,this.quaternion,this.scale),this.matrixWorldNeedsUpdate=!0},updateMatrixWorld:function(a){this.matrixAutoUpdate===!0&&this.updateMatrix(),this.matrixWorldNeedsUpdate!==!0&&a!==!0||(void 0===this.parent?this.matrixWorld.copy(this.matrix):this.matrixWorld.multiplyMatrices(this.parent.matrixWorld,this.matrix),this.matrixWorldNeedsUpdate=!1,a=!0);for(var b=0,c=this.children.length;b<c;b++)this.children[b].updateMatrixWorld(a)},clone:function(a,b){if(void 0===a&&(a=new THREE.Object3D),void 0===b&&(b=!0),a.name=this.name,a.up.copy(this.up),a.position.copy(this.position),a.quaternion.copy(this.quaternion),a.scale.copy(this.scale),a.renderDepth=this.renderDepth,a.rotationAutoUpdate=this.rotationAutoUpdate,a.matrix.copy(this.matrix),a.matrixWorld.copy(this.matrixWorld),a.matrixAutoUpdate=this.matrixAutoUpdate,a.matrixWorldNeedsUpdate=this.matrixWorldNeedsUpdate,a.visible=this.visible,a.castShadow=this.castShadow,a.receiveShadow=this.receiveShadow,a.frustumCulled=this.frustumCulled,a.userData=JSON.parse(JSON.stringify(this.userData)),b===!0)for(var c=0;c<this.children.length;c++){var d=this.children[c];a.add(d.clone())}return a}},THREE.EventDispatcher.prototype.apply(THREE.Object3D.prototype),THREE.Object3DIdCount=0,THREE.Projector=function(){function a(){if(i===t){var a=new THREE.RenderableObject;return s.push(a),t++,i++,a}return s[i++]}function b(){if(k===v){var a=new THREE.RenderableVertex;return u.push(a),v++,k++,a}return u[k++]}function c(){if(m===x){var a=new THREE.RenderableFace3;return w.push(a),x++,m++,a}return w[m++]}function d(){if(o===z){var a=new THREE.RenderableLine;return y.push(a),z++,o++,a}return y[o++]}function e(){if(q===B){var a=new THREE.RenderableParticle;return A.push(a),B++,q++,a}return A[q++]}function f(a,b){return a.z!==b.z?b.z-a.z:a.id!==b.id?a.id-b.id:0}function g(a,b){var c=0,d=1,e=a.z+a.w,f=b.z+b.w,g=-a.z+a.w,h=-b.z+b.w;return e>=0&&f>=0&&g>=0&&h>=0||!(e<0&&f<0||g<0&&h<0)&&(e<0?c=Math.max(c,e/(e-f)):f<0&&(d=Math.min(d,e/(e-f))),g<0?c=Math.max(c,g/(g-h)):h<0&&(d=Math.min(d,g/(g-h))),!(d<c)&&(a.lerp(b,c),b.lerp(a,1-d),!0))}var h,i,j,k,l,m,n,o,p,q,r,s=[],t=0,u=[],v=0,w=[],x=0,y=[],z=0,A=[],B=0,C={objects:[],sprites:[],lights:[],elements:[]},D=new THREE.Vector3,E=new THREE.Vector4,F=new THREE.Box3(new THREE.Vector3((-1),(-1),(-1)),new THREE.Vector3(1,1,1)),G=new THREE.Box3,H=new Array(3),I=(new Array(4),new THREE.Matrix4),J=new THREE.Matrix4,K=new THREE.Matrix4,L=new THREE.Matrix3,M=new THREE.Matrix3,N=new THREE.Vector3,O=new THREE.Frustum,P=new THREE.Vector4,Q=new THREE.Vector4;this.projectVector=function(a,b){return b.matrixWorldInverse.getInverse(b.matrixWorld),J.multiplyMatrices(b.projectionMatrix,b.matrixWorldInverse),a.applyProjection(J)},this.unprojectVector=function(a,b){return b.projectionMatrixInverse.getInverse(b.projectionMatrix),J.multiplyMatrices(b.matrixWorld,b.projectionMatrixInverse),a.applyProjection(J)},this.pickingRay=function(a,b){a.z=-1;var c=new THREE.Vector3(a.x,a.y,1);return this.unprojectVector(a,b),this.unprojectVector(c,b),c.sub(a).normalize(),new THREE.Raycaster(a,c)};var R=function(b){return h=a(),h.id=b.id,h.object=b,null!==b.renderDepth?h.z=b.renderDepth:(D.getPositionFromMatrix(b.matrixWorld),D.applyProjection(J),h.z=D.z),h},S=function(a){if(a.visible!==!1){a instanceof THREE.Light?C.lights.push(a):a instanceof THREE.Mesh||a instanceof THREE.Line?a.frustumCulled!==!1&&O.intersectsObject(a)!==!0||C.objects.push(R(a)):(a instanceof THREE.Sprite||a instanceof THREE.Particle)&&C.sprites.push(R(a));for(var b=0,c=a.children.length;b<c;b++)S(a.children[b])}},T=function(a,b){i=0,C.objects.length=0,C.sprites.length=0,C.lights.length=0,S(a),b===!0&&C.objects.sort(f)};this.projectScene=function(a,h,i,s){var t,v,w,x,y,z,A,B,D,R,S,U,V,W,X,Y,Z,$,_,aa,ba,ca,da,ea,fa,ga=!1;for(m=0,o=0,q=0,C.elements.length=0,a.autoUpdate===!0&&a.updateMatrixWorld(),void 0===h.parent&&h.updateMatrixWorld(),I.copy(h.matrixWorldInverse.getInverse(h.matrixWorld)),J.multiplyMatrices(h.projectionMatrix,I),M.getNormalMatrix(I),O.setFromMatrix(J),T(a,i),t=0,v=C.objects.length;t<v;t++)if(V=C.objects[t].object,r=V.matrixWorld,k=0,V instanceof THREE.Mesh){for(W=V.geometry,X=W.vertices,Y=W.faces,_=W.faceVertexUvs,L.getNormalMatrix(r),ea=V.material instanceof THREE.MeshFaceMaterial,fa=ea===!0?V.material:null,w=0,x=X.length;w<x;w++){j=b(),j.positionWorld.copy(X[w]).applyMatrix4(r),j.positionScreen.copy(j.positionWorld).applyMatrix4(J);var ha=1/j.positionScreen.w;j.positionScreen.x*=ha,j.positionScreen.y*=ha,j.positionScreen.z*=ha,j.visible=!(j.positionScreen.x<-1||j.positionScreen.x>1||j.positionScreen.y<-1||j.positionScreen.y>1||j.positionScreen.z<-1||j.positionScreen.z>1)}for(y=0,z=Y.length;y<z;y++){Z=Y[y];var ia=ea===!0?fa.materials[Z.materialIndex]:V.material;if(void 0!==ia){var ja=ia.side;if(ba=u[Z.a],ca=u[Z.b],da=u[Z.c],H[0]=ba.positionScreen,H[1]=ca.positionScreen,H[2]=da.positionScreen,(ba.visible===!0||ca.visible===!0||da.visible===!0||F.isIntersectionBox(G.setFromPoints(H)))&&(ga=(da.positionScreen.x-ba.positionScreen.x)*(ca.positionScreen.y-ba.positionScreen.y)-(da.positionScreen.y-ba.positionScreen.y)*(ca.positionScreen.x-ba.positionScreen.x)<0,ja===THREE.DoubleSide||ga===(ja===THREE.FrontSide))){for(l=c(),l.id=V.id,l.v1.copy(ba),l.v2.copy(ca),l.v3.copy(da),l.normalModel.copy(Z.normal),ga!==!1||ja!==THREE.BackSide&&ja!==THREE.DoubleSide||l.normalModel.negate(),l.normalModel.applyMatrix3(L).normalize(),l.normalModelView.copy(l.normalModel).applyMatrix3(M),l.centroidModel.copy(Z.centroid).applyMatrix4(r),$=Z.vertexNormals,A=0,B=Math.min($.length,3);A<B;A++){var ka=l.vertexNormalsModel[A];ka.copy($[A]),ga!==!1||ja!==THREE.BackSide&&ja!==THREE.DoubleSide||ka.negate(),ka.applyMatrix3(L).normalize();var la=l.vertexNormalsModelView[A];la.copy(ka).applyMatrix3(M)}for(l.vertexNormalsLength=$.length,D=0,R=Math.min(_.length,3);D<R;D++)if(aa=_[D][y],void 0!==aa)for(S=0,U=aa.length;S<U;S++)l.uvs[D][S]=aa[S];l.color=Z.color,l.material=ia,N.copy(l.centroidModel).applyProjection(J),l.z=N.z,C.elements.push(l)}}}}else if(V instanceof THREE.Line){K.multiplyMatrices(J,r),X=V.geometry.vertices,ba=b(),ba.positionScreen.copy(X[0]).applyMatrix4(K);var ma=V.type===THREE.LinePieces?2:1;for(w=1,x=X.length;w<x;w++)ba=b(),ba.positionScreen.copy(X[w]).applyMatrix4(K),(w+1)%ma>0||(ca=u[k-2],P.copy(ba.positionScreen),Q.copy(ca.positionScreen),g(P,Q)===!0&&(P.multiplyScalar(1/P.w),Q.multiplyScalar(1/Q.w),n=d(),n.id=V.id,n.v1.positionScreen.copy(P),n.v2.positionScreen.copy(Q),n.z=Math.max(P.z,Q.z),n.material=V.material,V.material.vertexColors===THREE.VertexColors&&(n.vertexColors[0].copy(V.geometry.colors[w]),n.vertexColors[1].copy(V.geometry.colors[w-1])),C.elements.push(n)))}for(t=0,v=C.sprites.length;t<v;t++)if(V=C.sprites[t].object,r=V.matrixWorld,V instanceof THREE.Particle){E.set(r.elements[12],r.elements[13],r.elements[14],1),E.applyMatrix4(J);var ha=1/E.w;E.z*=ha,E.z>0&&E.z<1&&(p=e(),p.id=V.id,p.x=E.x*ha,p.y=E.y*ha,p.z=E.z,p.object=V,p.rotation=V.rotation.z,p.scale.x=V.scale.x*Math.abs(p.x-(E.x+h.projectionMatrix.elements[0])/(E.w+h.projectionMatrix.elements[12])),p.scale.y=V.scale.y*Math.abs(p.y-(E.y+h.projectionMatrix.elements[5])/(E.w+h.projectionMatrix.elements[13])),p.material=V.material,C.elements.push(p))}return s===!0&&C.elements.sort(f),C}},THREE.Face3=function(a,b,c,d,e,f){this.a=a,this.b=b,this.c=c,this.normal=d instanceof THREE.Vector3?d:new THREE.Vector3,this.vertexNormals=d instanceof Array?d:[],this.color=e instanceof THREE.Color?e:new THREE.Color,this.vertexColors=e instanceof Array?e:[],this.vertexTangents=[],this.materialIndex=void 0!==f?f:0,this.centroid=new THREE.Vector3},THREE.Face3.prototype={constructor:THREE.Face3,clone:function(){var a=new THREE.Face3(this.a,this.b,this.c);a.normal.copy(this.normal),a.color.copy(this.color),a.centroid.copy(this.centroid),a.materialIndex=this.materialIndex;var b,c;for(b=0,c=this.vertexNormals.length;b<c;b++)a.vertexNormals[b]=this.vertexNormals[b].clone();for(b=0,c=this.vertexColors.length;b<c;b++)a.vertexColors[b]=this.vertexColors[b].clone();for(b=0,c=this.vertexTangents.length;b<c;b++)a.vertexTangents[b]=this.vertexTangents[b].clone();return a}},THREE.Face4=function(a,b,c,d,e,f,g){return new THREE.Face3(a,b,c,e,f,g)},THREE.Geometry=function(){this.id=THREE.GeometryIdCount++,this.uuid=THREE.Math.generateUUID(),this.name="",this.vertices=[],this.colors=[],this.normals=[],this.faces=[],this.faceVertexUvs=[[]],this.morphTargets=[],this.morphColors=[],this.morphNormals=[],this.skinWeights=[],this.skinIndices=[],this.lineDistances=[],this.boundingBox=null,this.boundingSphere=null,this.hasTangents=!1,this.dynamic=!0,this.verticesNeedUpdate=!1,this.elementsNeedUpdate=!1,this.uvsNeedUpdate=!1,this.normalsNeedUpdate=!1,this.tangentsNeedUpdate=!1,this.colorsNeedUpdate=!1,this.lineDistancesNeedUpdate=!1,this.buffersNeedUpdate=!1},THREE.Geometry.prototype={constructor:THREE.Geometry,applyMatrix:function(a){for(var b=(new THREE.Matrix3).getNormalMatrix(a),c=0,d=this.vertices.length;c<d;c++){var e=this.vertices[c];e.applyMatrix4(a)}for(var c=0,d=this.faces.length;c<d;c++){var f=this.faces[c];f.normal.applyMatrix3(b).normalize();for(var g=0,h=f.vertexNormals.length;g<h;g++)f.vertexNormals[g].applyMatrix3(b).normalize();f.centroid.applyMatrix4(a)}this.boundingBox instanceof THREE.Box3&&this.computeBoundingBox(),this.boundingSphere instanceof THREE.Sphere&&this.computeBoundingSphere()},computeCentroids:function(){var a,b,c;for(a=0,b=this.faces.length;a<b;a++)c=this.faces[a],c.centroid.set(0,0,0),c.centroid.add(this.vertices[c.a]),c.centroid.add(this.vertices[c.b]),c.centroid.add(this.vertices[c.c]),c.centroid.divideScalar(3)},computeFaceNormals:function(){for(var a=new THREE.Vector3,b=new THREE.Vector3,c=0,d=this.faces.length;c<d;c++){var e=this.faces[c],f=this.vertices[e.a],g=this.vertices[e.b],h=this.vertices[e.c];a.subVectors(h,g),b.subVectors(f,g),a.cross(b),a.normalize(),e.normal.copy(a)}},computeVertexNormals:function(a){var b,c,d,e,f,g;if(void 0===this.__tmpVertices){for(this.__tmpVertices=new Array(this.vertices.length),g=this.__tmpVertices,b=0,c=this.vertices.length;b<c;b++)g[b]=new THREE.Vector3;for(d=0,e=this.faces.length;d<e;d++)f=this.faces[d],f.vertexNormals=[new THREE.Vector3,new THREE.Vector3,new THREE.Vector3]}else for(g=this.__tmpVertices,b=0,c=this.vertices.length;b<c;b++)g[b].set(0,0,0);if(a){var h,i,j,k=new THREE.Vector3,l=new THREE.Vector3;new THREE.Vector3,new THREE.Vector3,new THREE.Vector3;for(d=0,e=this.faces.length;d<e;d++)f=this.faces[d],h=this.vertices[f.a],i=this.vertices[f.b],j=this.vertices[f.c],k.subVectors(j,i),l.subVectors(h,i),k.cross(l),g[f.a].add(k),g[f.b].add(k),g[f.c].add(k)}else for(d=0,e=this.faces.length;d<e;d++)f=this.faces[d],g[f.a].add(f.normal),g[f.b].add(f.normal),g[f.c].add(f.normal);for(b=0,c=this.vertices.length;b<c;b++)g[b].normalize();for(d=0,e=this.faces.length;d<e;d++)f=this.faces[d],f.vertexNormals[0].copy(g[f.a]),f.vertexNormals[1].copy(g[f.b]),f.vertexNormals[2].copy(g[f.c])},computeMorphNormals:function(){var a,b,c,d,e;for(c=0,d=this.faces.length;c<d;c++)for(e=this.faces[c],e.__originalFaceNormal?e.__originalFaceNormal.copy(e.normal):e.__originalFaceNormal=e.normal.clone(),e.__originalVertexNormals||(e.__originalVertexNormals=[]),a=0,b=e.vertexNormals.length;a<b;a++)e.__originalVertexNormals[a]?e.__originalVertexNormals[a].copy(e.vertexNormals[a]):e.__originalVertexNormals[a]=e.vertexNormals[a].clone();var f=new THREE.Geometry;for(f.faces=this.faces,a=0,b=this.morphTargets.length;a<b;a++){if(!this.morphNormals[a]){this.morphNormals[a]={},this.morphNormals[a].faceNormals=[],this.morphNormals[a].vertexNormals=[];var g,h,i=this.morphNormals[a].faceNormals,j=this.morphNormals[a].vertexNormals;for(c=0,d=this.faces.length;c<d;c++)e=this.faces[c],g=new THREE.Vector3,h={a:new THREE.Vector3,b:new THREE.Vector3,c:new THREE.Vector3},i.push(g),j.push(h)}var k=this.morphNormals[a];f.vertices=this.morphTargets[a].vertices,f.computeFaceNormals(),f.computeVertexNormals();var g,h;for(c=0,d=this.faces.length;c<d;c++)e=this.faces[c],g=k.faceNormals[c],h=k.vertexNormals[c],g.copy(e.normal),h.a.copy(e.vertexNormals[0]),h.b.copy(e.vertexNormals[1]),h.c.copy(e.vertexNormals[2])}for(c=0,d=this.faces.length;c<d;c++)e=this.faces[c],e.normal=e.__originalFaceNormal,e.vertexNormals=e.__originalVertexNormals},computeTangents:function(){function a(a,b,c,d,e,f,g){j=a.vertices[b],k=a.vertices[c],l=a.vertices[d],m=i[e],n=i[f],o=i[g],p=k.x-j.x,q=l.x-j.x,r=k.y-j.y,s=l.y-j.y,t=k.z-j.z,u=l.z-j.z,v=n.x-m.x,w=o.x-m.x,x=n.y-m.y,y=o.y-m.y,z=1/(v*y-w*x),F.set((y*p-x*q)*z,(y*r-x*s)*z,(y*t-x*u)*z),G.set((v*q-w*p)*z,(v*s-w*r)*z,(v*u-w*t)*z),D[b].add(F),D[c].add(F),D[d].add(F),E[b].add(G),E[c].add(G),E[d].add(G)}var b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,u,v,w,x,y,z,A,B,C,D=[],E=[],F=new THREE.Vector3,G=new THREE.Vector3,H=new THREE.Vector3,I=new THREE.Vector3,J=new THREE.Vector3;for(d=0,e=this.vertices.length;d<e;d++)D[d]=new THREE.Vector3,E[d]=new THREE.Vector3;for(b=0,c=this.faces.length;b<c;b++)h=this.faces[b],i=this.faceVertexUvs[0][b],a(this,h.a,h.b,h.c,0,1,2);var K=["a","b","c","d"];for(b=0,c=this.faces.length;b<c;b++)for(h=this.faces[b],f=0;f<Math.min(h.vertexNormals.length,3);f++)J.copy(h.vertexNormals[f]),g=h[K[f]],A=D[g],H.copy(A),H.sub(J.multiplyScalar(J.dot(A))).normalize(),I.crossVectors(h.vertexNormals[f],A),B=I.dot(E[g]),C=B<0?-1:1,h.vertexTangents[f]=new THREE.Vector4(H.x,H.y,H.z,C);this.hasTangents=!0},computeLineDistances:function(){for(var a=0,b=this.vertices,c=0,d=b.length;c<d;c++)c>0&&(a+=b[c].distanceTo(b[c-1])),this.lineDistances[c]=a},computeBoundingBox:function(){null===this.boundingBox&&(this.boundingBox=new THREE.Box3),this.boundingBox.setFromPoints(this.vertices)},computeBoundingSphere:function(){null===this.boundingSphere&&(this.boundingSphere=new THREE.Sphere),this.boundingSphere.setFromPoints(this.vertices)},mergeVertices:function(){var a,b,c,d,e,f,g,h,i={},j=[],k=[],l=4,m=Math.pow(10,l);for(this.__tmpVertices=void 0,c=0,d=this.vertices.length;c<d;c++)a=this.vertices[c],b=Math.round(a.x*m)+"_"+Math.round(a.y*m)+"_"+Math.round(a.z*m),void 0===i[b]?(i[b]=c,j.push(this.vertices[c]),k[c]=j.length-1):k[c]=k[i[b]];var n=[];for(c=0,d=this.faces.length;c<d;c++){e=this.faces[c],e.a=k[e.a],e.b=k[e.b],e.c=k[e.c],f=[e.a,e.b,e.c];for(var o=-1,p=0;p<3;p++)if(f[p]==f[(p+1)%3]){o=p,n.push(c);break}}for(c=n.length-1;c>=0;c--)for(this.faces.splice(c,1),g=0,h=this.faceVertexUvs.length;g<h;g++)this.faceVertexUvs[g].splice(c,1);var q=this.vertices.length-j.length;return this.vertices=j,q},clone:function(){for(var a=new THREE.Geometry,b=this.vertices,c=0,d=b.length;c<d;c++)a.vertices.push(b[c].clone());for(var e=this.faces,c=0,d=e.length;c<d;c++)a.faces.push(e[c].clone());for(var f=this.faceVertexUvs[0],c=0,d=f.length;c<d;c++){for(var g=f[c],h=[],i=0,j=g.length;i<j;i++)h.push(new THREE.Vector2(g[i].x,g[i].y));a.faceVertexUvs[0].push(h)}return a},dispose:function(){this.dispatchEvent({type:"dispose"})}},THREE.EventDispatcher.prototype.apply(THREE.Geometry.prototype),THREE.GeometryIdCount=0,THREE.BufferGeometry=function(){this.id=THREE.GeometryIdCount++,this.uuid=THREE.Math.generateUUID(),this.name="",this.attributes={},this.dynamic=!0,this.offsets=[],this.boundingBox=null,this.boundingSphere=null,this.hasTangents=!1,this.morphTargets=[]},THREE.BufferGeometry.prototype={constructor:THREE.BufferGeometry,applyMatrix:function(a){var b,c;if(this.attributes.position&&(b=this.attributes.position.array),this.attributes.normal&&(c=this.attributes.normal.array),void 0!==b&&(a.multiplyVector3Array(b),this.verticesNeedUpdate=!0),void 0!==c){var d=(new THREE.Matrix3).getNormalMatrix(a);d.multiplyVector3Array(c),this.normalizeNormals(),this.normalsNeedUpdate=!0}},computeBoundingBox:function(){null===this.boundingBox&&(this.boundingBox=new THREE.Box3);var a=this.attributes.position.array;if(a){var b,c,d,e=this.boundingBox;a.length>=3&&(e.min.x=e.max.x=a[0],e.min.y=e.max.y=a[1],e.min.z=e.max.z=a[2]);for(var f=3,g=a.length;f<g;f+=3)b=a[f],c=a[f+1],d=a[f+2],b<e.min.x?e.min.x=b:b>e.max.x&&(e.max.x=b),c<e.min.y?e.min.y=c:c>e.max.y&&(e.max.y=c),d<e.min.z?e.min.z=d:d>e.max.z&&(e.max.z=d)}void 0!==a&&0!==a.length||(this.boundingBox.min.set(0,0,0),this.boundingBox.max.set(0,0,0))},computeBoundingSphere:function(){var a=new THREE.Box3,b=new THREE.Vector3;return function(){null===this.boundingSphere&&(this.boundingSphere=new THREE.Sphere);var c=this.attributes.position.array;if(c){for(var d=this.boundingSphere.center,e=0,f=c.length;e<f;e+=3)b.set(c[e],c[e+1],c[e+2]),a.addPoint(b);a.center(d);for(var g=0,e=0,f=c.length;e<f;e+=3)b.set(c[e],c[e+1],c[e+2]),g=Math.max(g,d.distanceToSquared(b));this.boundingSphere.radius=Math.sqrt(g)}}}(),computeVertexNormals:function(){if(this.attributes.position){var a,b,c,d,e=this.attributes.position.array.length;if(void 0===this.attributes.normal)this.attributes.normal={itemSize:3,array:new Float32Array(e)};else for(a=0,b=this.attributes.normal.array.length;a<b;a++)this.attributes.normal.array[a]=0;var f,g,h,i,j,k,l=this.attributes.position.array,m=this.attributes.normal.array,n=new THREE.Vector3,o=new THREE.Vector3,p=new THREE.Vector3,q=new THREE.Vector3,r=new THREE.Vector3;if(this.attributes.index){var s=this.attributes.index.array,t=this.offsets;for(c=0,d=t.length;c<d;++c){var u=t[c].start,v=t[c].count,w=t[c].index;for(a=u,b=u+v;a<b;a+=3)f=w+s[a],g=w+s[a+1],h=w+s[a+2],i=l[3*f],j=l[3*f+1],k=l[3*f+2],n.set(i,j,k),i=l[3*g],j=l[3*g+1],k=l[3*g+2],o.set(i,j,k),i=l[3*h],j=l[3*h+1],k=l[3*h+2],p.set(i,j,k),q.subVectors(p,o),r.subVectors(n,o),q.cross(r),m[3*f]+=q.x,m[3*f+1]+=q.y,m[3*f+2]+=q.z,m[3*g]+=q.x,m[3*g+1]+=q.y,m[3*g+2]+=q.z,m[3*h]+=q.x,m[3*h+1]+=q.y,m[3*h+2]+=q.z}}else for(a=0,b=l.length;a<b;a+=9)i=l[a],j=l[a+1],k=l[a+2],n.set(i,j,k),i=l[a+3],j=l[a+4],k=l[a+5],o.set(i,j,k),i=l[a+6],j=l[a+7],k=l[a+8],p.set(i,j,k),q.subVectors(p,o),r.subVectors(n,o),q.cross(r),m[a]=q.x,m[a+1]=q.y,m[a+2]=q.z,m[a+3]=q.x,m[a+4]=q.y,m[a+5]=q.z,m[a+6]=q.x,m[a+7]=q.y,m[a+8]=q.z;this.normalizeNormals(),this.normalsNeedUpdate=!0}},normalizeNormals:function(){for(var a,b,c,d,e=this.attributes.normal.array,f=0,g=e.length;f<g;f+=3)a=e[f],b=e[f+1],c=e[f+2],d=1/Math.sqrt(a*a+b*b+c*c),e[f]*=d,e[f+1]*=d,e[f+2]*=d},computeTangents:function(){function a(a,b,c){m=d[3*a],n=d[3*a+1],o=d[3*a+2],p=d[3*b],q=d[3*b+1],r=d[3*b+2],s=d[3*c],t=d[3*c+1],u=d[3*c+2],v=f[2*a],w=f[2*a+1],x=f[2*b],y=f[2*b+1],z=f[2*c],A=f[2*c+1],B=p-m,C=s-m,D=q-n,E=t-n,F=r-o,G=u-o,H=x-v,I=z-v,J=y-w,K=A-w,L=1/(H*K-I*J),T.set((K*B-J*C)*L,(K*D-J*E)*L,(K*F-J*G)*L),U.set((H*C-I*B)*L,(H*E-I*D)*L,(H*G-I*F)*L),
j[a].add(T),j[b].add(T),j[c].add(T),k[a].add(U),k[b].add(U),k[c].add(U)}function b(a){ca.x=e[3*a],ca.y=e[3*a+1],ca.z=e[3*a+2],da.copy(ca),$=j[a],aa.copy($),aa.sub(ca.multiplyScalar(ca.dot($))).normalize(),ba.crossVectors(da,$),_=ba.dot(k[a]),Z=_<0?-1:1,i[4*a]=aa.x,i[4*a+1]=aa.y,i[4*a+2]=aa.z,i[4*a+3]=Z}if(void 0===this.attributes.index||void 0===this.attributes.position||void 0===this.attributes.normal||void 0===this.attributes.uv)return void console.warn("Missing required attributes (index, position, normal or uv) in BufferGeometry.computeTangents()");var c=this.attributes.index.array,d=this.attributes.position.array,e=this.attributes.normal.array,f=this.attributes.uv.array,g=d.length/3;if(void 0===this.attributes.tangent){var h=4*g;this.attributes.tangent={itemSize:4,array:new Float32Array(h)}}for(var i=this.attributes.tangent.array,j=[],k=[],l=0;l<g;l++)j[l]=new THREE.Vector3,k[l]=new THREE.Vector3;var m,n,o,p,q,r,s,t,u,v,w,x,y,z,A,B,C,D,E,F,G,H,I,J,K,L,M,N,O,P,Q,R,S,T=new THREE.Vector3,U=new THREE.Vector3,V=this.offsets;for(O=0,P=V.length;O<P;++O){var W=V[O].start,X=V[O].count,Y=V[O].index;for(M=W,N=W+X;M<N;M+=3)Q=Y+c[M],R=Y+c[M+1],S=Y+c[M+2],a(Q,R,S)}var Z,$,_,aa=new THREE.Vector3,ba=new THREE.Vector3,ca=new THREE.Vector3,da=new THREE.Vector3;for(O=0,P=V.length;O<P;++O){var W=V[O].start,X=V[O].count,Y=V[O].index;for(M=W,N=W+X;M<N;M+=3)Q=Y+c[M],R=Y+c[M+1],S=Y+c[M+2],b(Q),b(R),b(S)}this.hasTangents=!0,this.tangentsNeedUpdate=!0},dispose:function(){this.dispatchEvent({type:"dispose"})}},THREE.EventDispatcher.prototype.apply(THREE.BufferGeometry.prototype),THREE.Camera=function(){THREE.Object3D.call(this),this.matrixWorldInverse=new THREE.Matrix4,this.projectionMatrix=new THREE.Matrix4,this.projectionMatrixInverse=new THREE.Matrix4},THREE.Camera.prototype=Object.create(THREE.Object3D.prototype),THREE.Camera.prototype.lookAt=function(){var a=new THREE.Matrix4;return function(b){a.lookAt(this.position,b,this.up),this.quaternion.setFromRotationMatrix(a)}}(),THREE.Camera.prototype.clone=function(a){return void 0===a&&(a=new THREE.Camera),THREE.Object3D.prototype.clone.call(this,a),a.matrixWorldInverse.copy(this.matrixWorldInverse),a.projectionMatrix.copy(this.projectionMatrix),a.projectionMatrixInverse.copy(this.projectionMatrixInverse),a},THREE.OrthographicCamera=function(a,b,c,d,e,f){THREE.Camera.call(this),this.left=a,this.right=b,this.top=c,this.bottom=d,this.near=void 0!==e?e:.1,this.far=void 0!==f?f:2e3,this.updateProjectionMatrix()},THREE.OrthographicCamera.prototype=Object.create(THREE.Camera.prototype),THREE.OrthographicCamera.prototype.updateProjectionMatrix=function(){this.projectionMatrix.makeOrthographic(this.left,this.right,this.top,this.bottom,this.near,this.far)},THREE.OrthographicCamera.prototype.clone=function(){var a=new THREE.OrthographicCamera;return THREE.Camera.prototype.clone.call(this,a),a.left=this.left,a.right=this.right,a.top=this.top,a.bottom=this.bottom,a.near=this.near,a.far=this.far,a},THREE.PerspectiveCamera=function(a,b,c,d){THREE.Camera.call(this),this.fov=void 0!==a?a:50,this.aspect=void 0!==b?b:1,this.near=void 0!==c?c:.1,this.far=void 0!==d?d:2e3,this.updateProjectionMatrix()},THREE.PerspectiveCamera.prototype=Object.create(THREE.Camera.prototype),THREE.PerspectiveCamera.prototype.setLens=function(a,b){void 0===b&&(b=24),this.fov=2*THREE.Math.radToDeg(Math.atan(b/(2*a))),this.updateProjectionMatrix()},THREE.PerspectiveCamera.prototype.setViewOffset=function(a,b,c,d,e,f){this.fullWidth=a,this.fullHeight=b,this.x=c,this.y=d,this.width=e,this.height=f,this.updateProjectionMatrix()},THREE.PerspectiveCamera.prototype.updateProjectionMatrix=function(){if(this.fullWidth){var a=this.fullWidth/this.fullHeight,b=Math.tan(THREE.Math.degToRad(.5*this.fov))*this.near,c=-b,d=a*c,e=a*b,f=Math.abs(e-d),g=Math.abs(b-c);this.projectionMatrix.makeFrustum(d+this.x*f/this.fullWidth,d+(this.x+this.width)*f/this.fullWidth,b-(this.y+this.height)*g/this.fullHeight,b-this.y*g/this.fullHeight,this.near,this.far)}else this.projectionMatrix.makePerspective(this.fov,this.aspect,this.near,this.far)},THREE.PerspectiveCamera.prototype.clone=function(){var a=new THREE.PerspectiveCamera;return THREE.Camera.prototype.clone.call(this,a),a.fov=this.fov,a.aspect=this.aspect,a.near=this.near,a.far=this.far,a},THREE.Light=function(a){THREE.Object3D.call(this),this.color=new THREE.Color(a)},THREE.Light.prototype=Object.create(THREE.Object3D.prototype),THREE.Light.prototype.clone=function(a){return void 0===a&&(a=new THREE.Light),THREE.Object3D.prototype.clone.call(this,a),a.color.copy(this.color),a},THREE.AmbientLight=function(a){THREE.Light.call(this,a)},THREE.AmbientLight.prototype=Object.create(THREE.Light.prototype),THREE.AmbientLight.prototype.clone=function(){var a=new THREE.AmbientLight;return THREE.Light.prototype.clone.call(this,a),a},THREE.AreaLight=function(a,b){THREE.Light.call(this,a),this.normal=new THREE.Vector3(0,(-1),0),this.right=new THREE.Vector3(1,0,0),this.intensity=void 0!==b?b:1,this.width=1,this.height=1,this.constantAttenuation=1.5,this.linearAttenuation=.5,this.quadraticAttenuation=.1},THREE.AreaLight.prototype=Object.create(THREE.Light.prototype),THREE.DirectionalLight=function(a,b){THREE.Light.call(this,a),this.position.set(0,1,0),this.target=new THREE.Object3D,this.intensity=void 0!==b?b:1,this.castShadow=!1,this.onlyShadow=!1,this.shadowCameraNear=50,this.shadowCameraFar=5e3,this.shadowCameraLeft=-500,this.shadowCameraRight=500,this.shadowCameraTop=500,this.shadowCameraBottom=-500,this.shadowCameraVisible=!1,this.shadowBias=0,this.shadowDarkness=.5,this.shadowMapWidth=512,this.shadowMapHeight=512,this.shadowCascade=!1,this.shadowCascadeOffset=new THREE.Vector3(0,0,(-1e3)),this.shadowCascadeCount=2,this.shadowCascadeBias=[0,0,0],this.shadowCascadeWidth=[512,512,512],this.shadowCascadeHeight=[512,512,512],this.shadowCascadeNearZ=[-1,.99,.998],this.shadowCascadeFarZ=[.99,.998,1],this.shadowCascadeArray=[],this.shadowMap=null,this.shadowMapSize=null,this.shadowCamera=null,this.shadowMatrix=null},THREE.DirectionalLight.prototype=Object.create(THREE.Light.prototype),THREE.DirectionalLight.prototype.clone=function(){var a=new THREE.DirectionalLight;return THREE.Light.prototype.clone.call(this,a),a.target=this.target.clone(),a.intensity=this.intensity,a.castShadow=this.castShadow,a.onlyShadow=this.onlyShadow,a},THREE.HemisphereLight=function(a,b,c){THREE.Light.call(this,a),this.position.set(0,100,0),this.groundColor=new THREE.Color(b),this.intensity=void 0!==c?c:1},THREE.HemisphereLight.prototype=Object.create(THREE.Light.prototype),THREE.HemisphereLight.prototype.clone=function(){var a=new THREE.HemisphereLight;return THREE.Light.prototype.clone.call(this,a),a.groundColor.copy(this.groundColor),a.intensity=this.intensity,a},THREE.PointLight=function(a,b,c){THREE.Light.call(this,a),this.intensity=void 0!==b?b:1,this.distance=void 0!==c?c:0},THREE.PointLight.prototype=Object.create(THREE.Light.prototype),THREE.PointLight.prototype.clone=function(){var a=new THREE.PointLight;return THREE.Light.prototype.clone.call(this,a),a.intensity=this.intensity,a.distance=this.distance,a},THREE.SpotLight=function(a,b,c,d,e){THREE.Light.call(this,a),this.position.set(0,1,0),this.target=new THREE.Object3D,this.intensity=void 0!==b?b:1,this.distance=void 0!==c?c:0,this.angle=void 0!==d?d:Math.PI/3,this.exponent=void 0!==e?e:10,this.castShadow=!1,this.onlyShadow=!1,this.shadowCameraNear=50,this.shadowCameraFar=5e3,this.shadowCameraFov=50,this.shadowCameraVisible=!1,this.shadowBias=0,this.shadowDarkness=.5,this.shadowMapWidth=512,this.shadowMapHeight=512,this.shadowMap=null,this.shadowMapSize=null,this.shadowCamera=null,this.shadowMatrix=null},THREE.SpotLight.prototype=Object.create(THREE.Light.prototype),THREE.SpotLight.prototype.clone=function(){var a=new THREE.SpotLight;return THREE.Light.prototype.clone.call(this,a),a.target=this.target.clone(),a.intensity=this.intensity,a.distance=this.distance,a.angle=this.angle,a.exponent=this.exponent,a.castShadow=this.castShadow,a.onlyShadow=this.onlyShadow,a},THREE.Loader=function(a){this.showStatus=a,this.statusDomElement=a?THREE.Loader.prototype.addStatusElement():null,this.onLoadStart=function(){},this.onLoadProgress=function(){},this.onLoadComplete=function(){}},THREE.Loader.prototype={constructor:THREE.Loader,crossOrigin:"anonymous",addStatusElement:function(){var a=document.createElement("div");return a.style.position="absolute",a.style.right="0px",a.style.top="0px",a.style.fontSize="0.8em",a.style.textAlign="left",a.style.background="rgba(0,0,0,0.25)",a.style.color="#fff",a.style.width="120px",a.style.padding="0.5em 0.5em 0.5em 0.5em",a.style.zIndex=1e3,a.innerHTML="Loading ...",a},updateProgress:function(a){var b="Loaded ";b+=a.total?(100*a.loaded/a.total).toFixed(0)+"%":(a.loaded/1e3).toFixed(2)+" KB",this.statusDomElement.innerHTML=b},extractUrlBase:function(a){var b=a.split("/");return b.pop(),(b.length<1?".":b.join("/"))+"/"},initMaterials:function(a,b){for(var c=[],d=0;d<a.length;++d)c[d]=THREE.Loader.prototype.createMaterial(a[d],b);return c},needsTangents:function(a){for(var b=0,c=a.length;b<c;b++){var d=a[b];if(d instanceof THREE.ShaderMaterial)return!0}return!1},createMaterial:function(a,b){function c(a){var b=Math.log(a)/Math.LN2;return Math.floor(b)==b}function d(a){var b=Math.log(a)/Math.LN2;return Math.pow(2,Math.round(b))}function e(a,b){var e=new Image;e.onload=function(){if(c(this.width)&&c(this.height))a.image=this;else{var b=d(this.width),e=d(this.height);a.image.width=b,a.image.height=e,a.image.getContext("2d").drawImage(this,0,0,b,e)}a.needsUpdate=!0},e.crossOrigin=h.crossOrigin,e.src=b}function f(a,c,d,f,g,h,i){var j=/\.dds$/i.test(d),k=b+"/"+d;if(j){var l=THREE.ImageUtils.loadCompressedTexture(k);a[c]=l}else{var l=document.createElement("canvas");a[c]=new THREE.Texture(l)}if(a[c].sourceFile=d,f&&(a[c].repeat.set(f[0],f[1]),1!==f[0]&&(a[c].wrapS=THREE.RepeatWrapping),1!==f[1]&&(a[c].wrapT=THREE.RepeatWrapping)),g&&a[c].offset.set(g[0],g[1]),h){var m={repeat:THREE.RepeatWrapping,mirror:THREE.MirroredRepeatWrapping};void 0!==m[h[0]]&&(a[c].wrapS=m[h[0]]),void 0!==m[h[1]]&&(a[c].wrapT=m[h[1]])}i&&(a[c].anisotropy=i),j||e(a[c],k)}function g(a){return(255*a[0]<<16)+(255*a[1]<<8)+255*a[2]}var h=this,i="MeshLambertMaterial",j={color:15658734,opacity:1,map:null,lightMap:null,normalMap:null,bumpMap:null,wireframe:!1};if(a.shading){var k=a.shading.toLowerCase();"phong"===k?i="MeshPhongMaterial":"basic"===k&&(i="MeshBasicMaterial")}if(void 0!==a.blending&&void 0!==THREE[a.blending]&&(j.blending=THREE[a.blending]),(void 0!==a.transparent||a.opacity<1)&&(j.transparent=a.transparent),void 0!==a.depthTest&&(j.depthTest=a.depthTest),void 0!==a.depthWrite&&(j.depthWrite=a.depthWrite),void 0!==a.visible&&(j.visible=a.visible),void 0!==a.flipSided&&(j.side=THREE.BackSide),void 0!==a.doubleSided&&(j.side=THREE.DoubleSide),void 0!==a.wireframe&&(j.wireframe=a.wireframe),void 0!==a.vertexColors&&("face"===a.vertexColors?j.vertexColors=THREE.FaceColors:a.vertexColors&&(j.vertexColors=THREE.VertexColors)),a.colorDiffuse?j.color=g(a.colorDiffuse):a.DbgColor&&(j.color=a.DbgColor),a.colorSpecular&&(j.specular=g(a.colorSpecular)),a.colorAmbient&&(j.ambient=g(a.colorAmbient)),a.transparency&&(j.opacity=a.transparency),a.specularCoef&&(j.shininess=a.specularCoef),a.mapDiffuse&&b&&f(j,"map",a.mapDiffuse,a.mapDiffuseRepeat,a.mapDiffuseOffset,a.mapDiffuseWrap,a.mapDiffuseAnisotropy),a.mapLight&&b&&f(j,"lightMap",a.mapLight,a.mapLightRepeat,a.mapLightOffset,a.mapLightWrap,a.mapLightAnisotropy),a.mapBump&&b&&f(j,"bumpMap",a.mapBump,a.mapBumpRepeat,a.mapBumpOffset,a.mapBumpWrap,a.mapBumpAnisotropy),a.mapNormal&&b&&f(j,"normalMap",a.mapNormal,a.mapNormalRepeat,a.mapNormalOffset,a.mapNormalWrap,a.mapNormalAnisotropy),a.mapSpecular&&b&&f(j,"specularMap",a.mapSpecular,a.mapSpecularRepeat,a.mapSpecularOffset,a.mapSpecularWrap,a.mapSpecularAnisotropy),a.mapBumpScale&&(j.bumpScale=a.mapBumpScale),a.mapNormal){var l=THREE.ShaderLib.normalmap,m=THREE.UniformsUtils.clone(l.uniforms);m.tNormal.value=j.normalMap,a.mapNormalFactor&&m.uNormalScale.value.set(a.mapNormalFactor,a.mapNormalFactor),j.map&&(m.tDiffuse.value=j.map,m.enableDiffuse.value=!0),j.specularMap&&(m.tSpecular.value=j.specularMap,m.enableSpecular.value=!0),j.lightMap&&(m.tAO.value=j.lightMap,m.enableAO.value=!0),m.uDiffuseColor.value.setHex(j.color),m.uSpecularColor.value.setHex(j.specular),m.uAmbientColor.value.setHex(j.ambient),m.uShininess.value=j.shininess,void 0!==j.opacity&&(m.uOpacity.value=j.opacity);var n={fragmentShader:l.fragmentShader,vertexShader:l.vertexShader,uniforms:m,lights:!0,fog:!0},o=new THREE.ShaderMaterial(n);j.transparent&&(o.transparent=!0)}else var o=new THREE[i](j);return void 0!==a.DbgName&&(o.name=a.DbgName),o}},THREE.XHRLoader=function(a){this.manager=void 0!==a?a:THREE.DefaultLoadingManager},THREE.XHRLoader.prototype={constructor:THREE.XHRLoader,load:function(a,b,c,d){var e=this,f=new XMLHttpRequest;void 0!==b&&f.addEventListener("load",function(c){b(c.target.responseText),e.manager.itemEnd(a)},!1),void 0!==c&&f.addEventListener("progress",function(a){c(a)},!1),void 0!==d&&f.addEventListener("error",function(a){d(a)},!1),void 0!==this.crossOrigin&&(f.crossOrigin=this.crossOrigin),f.open("GET",a,!0),f.send(null),e.manager.itemStart(a)},setCrossOrigin:function(a){this.crossOrigin=a}},THREE.ImageLoader=function(a){this.manager=void 0!==a?a:THREE.DefaultLoadingManager},THREE.ImageLoader.prototype={constructor:THREE.ImageLoader,load:function(a,b,c,d){var e=this,f=document.createElement("img");void 0!==b&&f.addEventListener("load",function(c){e.manager.itemEnd(a),b(this)},!1),void 0!==c&&f.addEventListener("progress",function(a){c(a)},!1),void 0!==d&&f.addEventListener("error",function(a){d(a)},!1),void 0!==this.crossOrigin&&(f.crossOrigin=this.crossOrigin),f.src=a,e.manager.itemStart(a)},setCrossOrigin:function(a){this.crossOrigin=a}},THREE.JSONLoader=function(a){THREE.Loader.call(this,a),this.withCredentials=!1},THREE.JSONLoader.prototype=Object.create(THREE.Loader.prototype),THREE.JSONLoader.prototype.load=function(a,b,c){c=c&&"string"==typeof c?c:this.extractUrlBase(a),this.onLoadStart(),this.loadAjaxJSON(this,a,b,c)},THREE.JSONLoader.prototype.loadAjaxJSON=function(a,b,c,d,e){var f=new XMLHttpRequest,g=0;f.onreadystatechange=function(){if(f.readyState===f.DONE)if(200===f.status||0===f.status){if(f.responseText){var h=JSON.parse(f.responseText),i=a.parse(h,d);c(i.geometry,i.materials)}else console.warn("THREE.JSONLoader: ["+b+"] seems to be unreachable or file there is empty");a.onLoadComplete()}else console.error("THREE.JSONLoader: Couldn't load ["+b+"] ["+f.status+"]");else f.readyState===f.LOADING?e&&(0===g&&(g=f.getResponseHeader("Content-Length")),e({total:g,loaded:f.responseText.length})):f.readyState===f.HEADERS_RECEIVED&&void 0!==e&&(g=f.getResponseHeader("Content-Length"))},f.open("GET",b,!0),f.withCredentials=this.withCredentials,f.send(null)},THREE.JSONLoader.prototype.parse=function(a,b){function c(b){function c(a,b){return a&1<<b}var d,e,g,h,i,j,k,l,m,n,o,p,q,r,s,t,u,v,w,x,y,z,A,B,C,D,E,F=a.faces,G=a.vertices,H=a.normals,I=a.colors,J=0;if(void 0!==a.uvs){for(d=0;d<a.uvs.length;d++)a.uvs[d].length&&J++;for(d=0;d<J;d++)f.faceVertexUvs[d]=[]}for(h=0,i=G.length;h<i;)v=new THREE.Vector3,v.x=G[h++]*b,v.y=G[h++]*b,v.z=G[h++]*b,f.vertices.push(v);for(h=0,i=F.length;h<i;)if(n=F[h++],o=c(n,0),p=c(n,1),q=c(n,3),r=c(n,4),s=c(n,5),t=c(n,6),u=c(n,7),o){if(x=new THREE.Face3,x.a=F[h],x.b=F[h+1],x.c=F[h+3],y=new THREE.Face3,y.a=F[h+1],y.b=F[h+2],y.c=F[h+3],h+=4,p&&(m=F[h++],x.materialIndex=m,y.materialIndex=m),g=f.faces.length,q)for(d=0;d<J;d++)for(B=a.uvs[d],f.faceVertexUvs[d][g]=[],f.faceVertexUvs[d][g+1]=[],e=0;e<4;e++)l=F[h++],D=B[2*l],E=B[2*l+1],C=new THREE.Vector2(D,E),2!==e&&f.faceVertexUvs[d][g].push(C),0!==e&&f.faceVertexUvs[d][g+1].push(C);if(r&&(k=3*F[h++],x.normal.set(H[k++],H[k++],H[k]),y.normal.copy(x.normal)),s)for(d=0;d<4;d++)k=3*F[h++],A=new THREE.Vector3(H[k++],H[k++],H[k]),2!==d&&x.vertexNormals.push(A),0!==d&&y.vertexNormals.push(A);if(t&&(j=F[h++],z=I[j],x.color.setHex(z),y.color.setHex(z)),u)for(d=0;d<4;d++)j=F[h++],z=I[j],2!==d&&x.vertexColors.push(new THREE.Color(z)),0!==d&&y.vertexColors.push(new THREE.Color(z));f.faces.push(x),f.faces.push(y)}else{if(w=new THREE.Face3,w.a=F[h++],w.b=F[h++],w.c=F[h++],p&&(m=F[h++],w.materialIndex=m),g=f.faces.length,q)for(d=0;d<J;d++)for(B=a.uvs[d],f.faceVertexUvs[d][g]=[],e=0;e<3;e++)l=F[h++],D=B[2*l],E=B[2*l+1],C=new THREE.Vector2(D,E),f.faceVertexUvs[d][g].push(C);if(r&&(k=3*F[h++],w.normal.set(H[k++],H[k++],H[k])),s)for(d=0;d<3;d++)k=3*F[h++],A=new THREE.Vector3(H[k++],H[k++],H[k]),w.vertexNormals.push(A);if(t&&(j=F[h++],w.color.setHex(I[j])),u)for(d=0;d<3;d++)j=F[h++],w.vertexColors.push(new THREE.Color(I[j]));f.faces.push(w)}}function d(){var b,c,d,e,g,h,i,j,k,l;if(a.skinWeights)for(b=0,c=a.skinWeights.length;b<c;b+=2)d=a.skinWeights[b],e=a.skinWeights[b+1],g=0,h=0,f.skinWeights.push(new THREE.Vector4(d,e,g,h));if(a.skinIndices)for(b=0,c=a.skinIndices.length;b<c;b+=2)i=a.skinIndices[b],j=a.skinIndices[b+1],k=0,l=0,f.skinIndices.push(new THREE.Vector4(i,j,k,l));f.bones=a.bones,f.animation=a.animation}function e(b){if(void 0!==a.morphTargets){var c,d,e,g,h,i;for(c=0,d=a.morphTargets.length;c<d;c++)for(f.morphTargets[c]={},f.morphTargets[c].name=a.morphTargets[c].name,f.morphTargets[c].vertices=[],h=f.morphTargets[c].vertices,i=a.morphTargets[c].vertices,e=0,g=i.length;e<g;e+=3){var j=new THREE.Vector3;j.x=i[e]*b,j.y=i[e+1]*b,j.z=i[e+2]*b,h.push(j)}}if(void 0!==a.morphColors){var c,d,k,l,m,n,o;for(c=0,d=a.morphColors.length;c<d;c++)for(f.morphColors[c]={},f.morphColors[c].name=a.morphColors[c].name,f.morphColors[c].colors=[],m=f.morphColors[c].colors,n=a.morphColors[c].colors,k=0,l=n.length;k<l;k+=3)o=new THREE.Color(16755200),o.setRGB(n[k],n[k+1],n[k+2]),m.push(o)}}var f=new THREE.Geometry,g=void 0!==a.scale?1/a.scale:1;if(c(g),d(),e(g),f.computeCentroids(),f.computeFaceNormals(),f.computeBoundingSphere(),void 0===a.materials)return{geometry:f};var h=this.initMaterials(a.materials,b);return this.needsTangents(h)&&f.computeTangents(),{geometry:f,materials:h}},THREE.LoadingManager=function(a,b,c){var d=this,e=0,f=0;this.onLoad=a,this.onProgress=b,this.onError=c,this.itemStart=function(a){f++},this.itemEnd=function(a){e++,void 0!==d.onProgress&&d.onProgress(a,e,f),e===f&&void 0!==d.onLoad&&d.onLoad()}},THREE.DefaultLoadingManager=new THREE.LoadingManager,THREE.BufferGeometryLoader=function(a){this.manager=void 0!==a?a:THREE.DefaultLoadingManager},THREE.BufferGeometryLoader.prototype={constructor:THREE.BufferGeometryLoader,load:function(a,b,c,d){var e=this,f=new THREE.XHRLoader;f.setCrossOrigin(this.crossOrigin),f.load(a,function(a){b(e.parse(JSON.parse(a)))})},setCrossOrigin:function(a){this.crossOrigin=a},parse:function(a){var b=new THREE.BufferGeometry,c=a.attributes,d=a.offsets,e=a.boundingSphere;for(var f in c){var g=c[f];b.attributes[f]={itemSize:g.itemSize,array:new self[g.type](g.array)}}return void 0!==d&&(b.offsets=JSON.parse(JSON.stringify(d))),void 0!==e&&(b.boundingSphere=new THREE.Sphere((new THREE.Vector3).fromArray(void 0!==e.center?e.center:[0,0,0]),e.radius)),b}},THREE.GeometryLoader=function(a){this.manager=void 0!==a?a:THREE.DefaultLoadingManager},THREE.GeometryLoader.prototype={constructor:THREE.GeometryLoader,load:function(a,b,c,d){var e=this,f=new THREE.XHRLoader;f.setCrossOrigin(this.crossOrigin),f.load(a,function(a){b(e.parse(JSON.parse(a)))})},setCrossOrigin:function(a){this.crossOrigin=a},parse:function(a){}},THREE.MaterialLoader=function(a){this.manager=void 0!==a?a:THREE.DefaultLoadingManager},THREE.MaterialLoader.prototype={constructor:THREE.MaterialLoader,load:function(a,b,c,d){var e=this,f=new THREE.XHRLoader;f.setCrossOrigin(this.crossOrigin),f.load(a,function(a){b(e.parse(JSON.parse(a)))})},setCrossOrigin:function(a){this.crossOrigin=a},parse:function(a){var b=new THREE[a.type];if(void 0!==a.color&&b.color.setHex(a.color),void 0!==a.ambient&&b.ambient.setHex(a.ambient),void 0!==a.emissive&&b.emissive.setHex(a.emissive),void 0!==a.specular&&b.specular.setHex(a.specular),void 0!==a.shininess&&(b.shininess=a.shininess),void 0!==a.vertexColors&&(b.vertexColors=a.vertexColors),void 0!==a.blending&&(b.blending=a.blending),void 0!==a.opacity&&(b.opacity=a.opacity),void 0!==a.transparent&&(b.transparent=a.transparent),void 0!==a.wireframe&&(b.wireframe=a.wireframe),void 0!==a.materials)for(var c=0,d=a.materials.length;c<d;c++)b.materials.push(this.parse(a.materials[c]));return b}},THREE.ObjectLoader=function(a){this.manager=void 0!==a?a:THREE.DefaultLoadingManager},THREE.ObjectLoader.prototype={constructor:THREE.ObjectLoader,load:function(a,b,c,d){var e=this,f=new THREE.XHRLoader(e.manager);f.setCrossOrigin(this.crossOrigin),f.load(a,function(a){b(e.parse(JSON.parse(a)))})},setCrossOrigin:function(a){this.crossOrigin=a},parse:function(a){var b=this.parseGeometries(a.geometries),c=this.parseMaterials(a.materials),d=this.parseObject(a.object,b,c);return d},parseGeometries:function(a){var b={};if(void 0!==a)for(var c=new THREE.JSONLoader,d=new THREE.BufferGeometryLoader,e=0,f=a.length;e<f;e++){var g,h=a[e];switch(h.type){case"PlaneGeometry":g=new THREE.PlaneGeometry(h.width,h.height,h.widthSegments,h.heightSegments);break;case"CubeGeometry":g=new THREE.CubeGeometry(h.width,h.height,h.depth,h.widthSegments,h.heightSegments,h.depthSegments);break;case"CylinderGeometry":g=new THREE.CylinderGeometry(h.radiusTop,h.radiusBottom,h.height,h.radiusSegments,h.heightSegments,h.openEnded);break;case"SphereGeometry":g=new THREE.SphereGeometry(h.radius,h.widthSegments,h.heightSegments,h.phiStart,h.phiLength,h.thetaStart,h.thetaLength);break;case"IcosahedronGeometry":g=new THREE.IcosahedronGeometry(h.radius,h.detail);break;case"TorusGeometry":g=new THREE.TorusGeometry(h.radius,h.tube,h.radialSegments,h.tubularSegments,h.arc);break;case"TorusKnotGeometry":g=new THREE.TorusKnotGeometry(h.radius,h.tube,h.radialSegments,h.tubularSegments,h.p,h.q,h.heightScale);break;case"BufferGeometry":g=d.parse(h.data);break;case"Geometry":g=c.parse(h.data).geometry}g.uuid=h.uuid,void 0!==h.name&&(g.name=h.name),b[h.uuid]=g}return b},parseMaterials:function(a){var b={};if(void 0!==a)for(var c=new THREE.MaterialLoader,d=0,e=a.length;d<e;d++){var f=a[d],g=c.parse(f);g.uuid=f.uuid,void 0!==f.name&&(g.name=f.name),b[f.uuid]=g}return b},parseObject:function(){var a=new THREE.Matrix4;return function(b,c,d){var e;switch(b.type){case"Scene":e=new THREE.Scene;break;case"PerspectiveCamera":e=new THREE.PerspectiveCamera(b.fov,b.aspect,b.near,b.far);break;case"OrthographicCamera":e=new THREE.OrthographicCamera(b.left,b.right,b.top,b.bottom,b.near,b.far);break;case"AmbientLight":e=new THREE.AmbientLight(b.color);break;case"DirectionalLight":e=new THREE.DirectionalLight(b.color,b.intensity);break;case"PointLight":e=new THREE.PointLight(b.color,b.intensity,b.distance);break;case"SpotLight":e=new THREE.SpotLight(b.color,b.intensity,b.distance,b.angle,b.exponent);break;case"HemisphereLight":e=new THREE.HemisphereLight(b.color,b.groundColor,b.intensity);break;case"Mesh":var f=c[b.geometry],g=d[b.material];void 0===f&&console.error("THREE.ObjectLoader: Undefined geometry "+b.geometry),void 0===g&&console.error("THREE.ObjectLoader: Undefined material "+b.material),e=new THREE.Mesh(f,g);break;default:e=new THREE.Object3D}if(e.uuid=b.uuid,void 0!==b.name&&(e.name=b.name),void 0!==b.matrix?(a.fromArray(b.matrix),a.decompose(e.position,e.quaternion,e.scale)):(void 0!==b.position&&e.position.fromArray(b.position),void 0!==b.rotation&&e.rotation.fromArray(b.rotation),void 0!==b.scale&&e.scale.fromArray(b.scale)),void 0!==b.visible&&(e.visible=b.visible),void 0!==b.userData&&(e.userData=b.userData),void 0!==b.children)for(var h in b.children)e.add(this.parseObject(b.children[h],c,d));return e}}()},THREE.SceneLoader=function(){this.onLoadStart=function(){},this.onLoadProgress=function(){},this.onLoadComplete=function(){},this.callbackSync=function(){},this.callbackProgress=function(){},this.geometryHandlers={},this.hierarchyHandlers={},this.addGeometryHandler("ascii",THREE.JSONLoader)},THREE.SceneLoader.prototype={constructor:THREE.SceneLoader,load:function(a,b,c,d){var e=this,f=new THREE.XHRLoader(e.manager);f.setCrossOrigin(this.crossOrigin),f.load(a,function(c){e.parse(JSON.parse(c),b,a)})},setCrossOrigin:function(a){this.crossOrigin=a},addGeometryHandler:function(a,b){this.geometryHandlers[a]={loaderClass:b}},addHierarchyHandler:function(a,b){this.hierarchyHandlers[a]={loaderClass:b}},parse:function(a,b,c){function d(a,b){return"relativeToHTML"==b?a:D+"/"+a}function e(){f(B.scene,F.objects)}function f(a,b){var c,e,g,h,i,k;for(var l in b){var m=B.objects[l],n=b[l];if(void 0===m){if(n.type&&n.type in C.hierarchyHandlers){if(void 0===n.loading){var r={type:1,url:1,material:1,position:1,rotation:1,scale:1,visible:1,children:1,userData:1,skin:1,morph:1,mirroredLoop:1,duration:1},s={};for(var t in n)t in r||(s[t]=n[t]);p=B.materials[n.material],n.loading=!0;var x=C.hierarchyHandlers[n.type].loaderObject;x.options?x.load(d(n.url,F.urlBaseType),j(l,a,p,n)):x.load(d(n.url,F.urlBaseType),j(l,a,p,n),s)}}else if(void 0!==n.geometry){if(o=B.geometries[n.geometry]){var y=!1;if(p=B.materials[n.material],y=p instanceof THREE.ShaderMaterial,g=n.position,h=n.rotation,i=n.scale,c=n.matrix,k=n.quaternion,n.material||(p=new THREE.MeshFaceMaterial(B.face_materials[n.geometry])),p instanceof THREE.MeshFaceMaterial&&0===p.materials.length&&(p=new THREE.MeshFaceMaterial(B.face_materials[n.geometry])),p instanceof THREE.MeshFaceMaterial)for(var z=0;z<p.materials.length;z++)y=y||p.materials[z]instanceof THREE.ShaderMaterial;y&&o.computeTangents(),n.skin?m=new THREE.SkinnedMesh(o,p):n.morph?(m=new THREE.MorphAnimMesh(o,p),void 0!==n.duration&&(m.duration=n.duration),void 0!==n.time&&(m.time=n.time),void 0!==n.mirroredLoop&&(m.mirroredLoop=n.mirroredLoop),p.morphNormals&&o.computeMorphNormals()):m=new THREE.Mesh(o,p),m.name=l,c?(m.matrixAutoUpdate=!1,m.matrix.set(c[0],c[1],c[2],c[3],c[4],c[5],c[6],c[7],c[8],c[9],c[10],c[11],c[12],c[13],c[14],c[15])):(m.position.fromArray(g),k?m.quaternion.fromArray(k):m.rotation.fromArray(h),m.scale.fromArray(i)),m.visible=n.visible,m.castShadow=n.castShadow,m.receiveShadow=n.receiveShadow,a.add(m),B.objects[l]=m}}else"DirectionalLight"===n.type||"PointLight"===n.type||"AmbientLight"===n.type?(v=void 0!==n.color?n.color:16777215,w=void 0!==n.intensity?n.intensity:1,"DirectionalLight"===n.type?(g=n.direction,u=new THREE.DirectionalLight(v,w),u.position.fromArray(g),n.target&&(E.push({object:u,targetName:n.target}),u.target=null)):"PointLight"===n.type?(g=n.position,e=n.distance,u=new THREE.PointLight(v,w,e),u.position.fromArray(g)):"AmbientLight"===n.type&&(u=new THREE.AmbientLight(v)),a.add(u),u.name=l,B.lights[l]=u,B.objects[l]=u):"PerspectiveCamera"===n.type||"OrthographicCamera"===n.type?(g=n.position,h=n.rotation,k=n.quaternion,"PerspectiveCamera"===n.type?q=new THREE.PerspectiveCamera(n.fov,n.aspect,n.near,n.far):"OrthographicCamera"===n.type&&(q=new THREE.OrthographicCamera(n.left,n.right,n.top,n.bottom,n.near,n.far)),q.name=l,q.position.fromArray(g),void 0!==k?q.quaternion.fromArray(k):void 0!==h&&q.rotation.fromArray(h),a.add(q),B.cameras[l]=q,B.objects[l]=q):(g=n.position,h=n.rotation,i=n.scale,k=n.quaternion,m=new THREE.Object3D,m.name=l,m.position.fromArray(g),k?m.quaternion.fromArray(k):m.rotation.fromArray(h),m.scale.fromArray(i),m.visible=void 0!==n.visible&&n.visible,a.add(m),B.objects[l]=m,B.empties[l]=m);if(m){if(void 0!==n.userData)for(var A in n.userData){var D=n.userData[A];m.userData[A]=D}if(void 0!==n.groups)for(var z=0;z<n.groups.length;z++){var G=n.groups[z];void 0===B.groups[G]&&(B.groups[G]=[]),B.groups[G].push(l)}}}void 0!==m&&void 0!==n.children&&f(m,n.children)}}function g(a,b,c){B.geometries[c]=a,B.face_materials[c]=b,e()}function h(a,b,c,d,f){var g=f.position,h=f.rotation,i=f.quaternion,j=f.scale;a.position.fromArray(g),i?a.quaternion.fromArray(i):a.rotation.fromArray(h),a.scale.fromArray(j),d&&a.traverse(function(a){a.material=d});var k=void 0===f.visible||f.visible;a.traverse(function(a){a.visible=k}),c.add(a),a.name=b,B.objects[b]=a,e()}function i(a){return function(b,c){b.name=a,g(b,c,a),x-=1,C.onLoadComplete(),l()}}function j(a,b,c,d){return function(e){var f;f=e.content?e.content:e.dae?e.scene:e,h(f,a,b,c,d),x-=1,C.onLoadComplete(),l()}}function k(a){return function(b,c){b.name=a,B.geometries[a]=b,B.face_materials[a]=c}}function l(){var a={totalModels:z,totalTextures:A,loadedModels:z-x,loadedTextures:A-y};C.callbackProgress(a,B),C.onLoadProgress(),0===x&&0===y&&(m(),b(B))}function m(){for(var a=0;a<E.length;a++){var b=E[a],c=B.objects[b.targetName];c?b.object.target=c:(b.object.target=new THREE.Object3D,B.scene.add(b.object.target)),b.object.target.userData.targetInverse=b.object}}function n(a,b){if(b(a),void 0!==a.children)for(var c in a.children)n(a.children[c],b)}var o,p,q,r,s,t,u,v,w,x,y,z,A,B,C=this,D=THREE.Loader.prototype.extractUrlBase(c),E=[],F=a;for(var G in this.geometryHandlers){var H=this.geometryHandlers[G].loaderClass;this.geometryHandlers[G].loaderObject=new H}for(var G in this.hierarchyHandlers){var H=this.hierarchyHandlers[G].loaderClass;this.hierarchyHandlers[G].loaderObject=new H}if(x=0,y=0,B={scene:new THREE.Scene,geometries:{},face_materials:{},materials:{},textures:{},objects:{},cameras:{},lights:{},fogs:{},empties:{},groups:{}},F.transform){var I=F.transform.position,J=F.transform.rotation,K=F.transform.scale;I&&B.scene.position.fromArray(I),J&&B.scene.rotation.fromArray(J),K&&B.scene.scale.fromArray(K),(I||J||K)&&(B.scene.updateMatrix(),B.scene.updateMatrixWorld())}var L,M,N=function(a){y-=a,l(),C.onLoadComplete()},O=function(a){return function(){N(a)}};for(L in F.fogs)M=F.fogs[L],"linear"===M.type?r=new THREE.Fog(0,M.near,M.far):"exp2"===M.type&&(r=new THREE.FogExp2(0,M.density)),t=M.color,r.color.setRGB(t[0],t[1],t[2]),B.fogs[L]=r;var P,Q;for(P in F.geometries)Q=F.geometries[P],Q.type in this.geometryHandlers&&(x+=1,C.onLoadStart());for(var R in F.objects)n(F.objects[R],function(a){a.type&&a.type in C.hierarchyHandlers&&(x+=1,C.onLoadStart())});z=x;for(P in F.geometries)if(Q=F.geometries[P],"cube"===Q.type)o=new THREE.CubeGeometry(Q.width,Q.height,Q.depth,Q.widthSegments,Q.heightSegments,Q.depthSegments),o.name=P,B.geometries[P]=o;else if("plane"===Q.type)o=new THREE.PlaneGeometry(Q.width,Q.height,Q.widthSegments,Q.heightSegments),o.name=P,B.geometries[P]=o;else if("sphere"===Q.type)o=new THREE.SphereGeometry(Q.radius,Q.widthSegments,Q.heightSegments),o.name=P,B.geometries[P]=o;else if("cylinder"===Q.type)o=new THREE.CylinderGeometry(Q.topRad,Q.botRad,Q.height,Q.radSegs,Q.heightSegs),o.name=P,B.geometries[P]=o;else if("torus"===Q.type)o=new THREE.TorusGeometry(Q.radius,Q.tube,Q.segmentsR,Q.segmentsT),o.name=P,B.geometries[P]=o;else if("icosahedron"===Q.type)o=new THREE.IcosahedronGeometry(Q.radius,Q.subdivisions),o.name=P,B.geometries[P]=o;else if(Q.type in this.geometryHandlers){var S={};for(var T in Q)"type"!==T&&"url"!==T&&(S[T]=Q[T]);var U=this.geometryHandlers[Q.type].loaderObject;U.load(d(Q.url,F.urlBaseType),i(P),S)}else if("embedded"===Q.type){var V=F.embeds[Q.id],W="";if(V.metadata=F.metadata,V){var X=this.geometryHandlers.ascii.loaderObject,Y=X.parse(V,W);k(P)(Y.geometry,Y.materials)}}var Z,$;for(Z in F.textures)if($=F.textures[Z],$.url instanceof Array){y+=$.url.length;for(var _=0;_<$.url.length;_++)C.onLoadStart()}else y+=1,C.onLoadStart();A=y;for(Z in F.textures){if($=F.textures[Z],void 0!==$.mapping&&void 0!==THREE[$.mapping]&&($.mapping=new THREE[$.mapping]),$.url instanceof Array){for(var aa=$.url.length,ba=[],ca=0;ca<aa;ca++)ba[ca]=d($.url[ca],F.urlBaseType);var da=/\.dds$/i.test(ba[0]);s=da?THREE.ImageUtils.loadCompressedTextureCube(ba,$.mapping,O(aa)):THREE.ImageUtils.loadTextureCube(ba,$.mapping,O(aa))}else{var da=/\.dds$/i.test($.url),ea=d($.url,F.urlBaseType),fa=O(1);
if(s=da?THREE.ImageUtils.loadCompressedTexture(ea,$.mapping,fa):THREE.ImageUtils.loadTexture(ea,$.mapping,fa),void 0!==THREE[$.minFilter]&&(s.minFilter=THREE[$.minFilter]),void 0!==THREE[$.magFilter]&&(s.magFilter=THREE[$.magFilter]),$.anisotropy&&(s.anisotropy=$.anisotropy),$.repeat&&(s.repeat.set($.repeat[0],$.repeat[1]),1!==$.repeat[0]&&(s.wrapS=THREE.RepeatWrapping),1!==$.repeat[1]&&(s.wrapT=THREE.RepeatWrapping)),$.offset&&s.offset.set($.offset[0],$.offset[1]),$.wrap){var ga={repeat:THREE.RepeatWrapping,mirror:THREE.MirroredRepeatWrapping};void 0!==ga[$.wrap[0]]&&(s.wrapS=ga[$.wrap[0]]),void 0!==ga[$.wrap[1]]&&(s.wrapT=ga[$.wrap[1]])}}B.textures[Z]=s}var ha,ia,ja;for(ha in F.materials){ia=F.materials[ha];for(ja in ia.parameters)if("envMap"===ja||"map"===ja||"lightMap"===ja||"bumpMap"===ja)ia.parameters[ja]=B.textures[ia.parameters[ja]];else if("shading"===ja)ia.parameters[ja]="flat"===ia.parameters[ja]?THREE.FlatShading:THREE.SmoothShading;else if("side"===ja)"double"==ia.parameters[ja]?ia.parameters[ja]=THREE.DoubleSide:"back"==ia.parameters[ja]?ia.parameters[ja]=THREE.BackSide:ia.parameters[ja]=THREE.FrontSide;else if("blending"===ja)ia.parameters[ja]=ia.parameters[ja]in THREE?THREE[ia.parameters[ja]]:THREE.NormalBlending;else if("combine"===ja)ia.parameters[ja]=ia.parameters[ja]in THREE?THREE[ia.parameters[ja]]:THREE.MultiplyOperation;else if("vertexColors"===ja)"face"==ia.parameters[ja]?ia.parameters[ja]=THREE.FaceColors:ia.parameters[ja]&&(ia.parameters[ja]=THREE.VertexColors);else if("wrapRGB"===ja){var ka=ia.parameters[ja];ia.parameters[ja]=new THREE.Vector3(ka[0],ka[1],ka[2])}if(void 0!==ia.parameters.opacity&&ia.parameters.opacity<1&&(ia.parameters.transparent=!0),ia.parameters.normalMap){var la=THREE.ShaderLib.normalmap,ma=THREE.UniformsUtils.clone(la.uniforms),na=ia.parameters.color,oa=ia.parameters.specular,pa=ia.parameters.ambient,qa=ia.parameters.shininess;ma.tNormal.value=B.textures[ia.parameters.normalMap],ia.parameters.normalScale&&ma.uNormalScale.value.set(ia.parameters.normalScale[0],ia.parameters.normalScale[1]),ia.parameters.map&&(ma.tDiffuse.value=ia.parameters.map,ma.enableDiffuse.value=!0),ia.parameters.envMap&&(ma.tCube.value=ia.parameters.envMap,ma.enableReflection.value=!0,ma.uReflectivity.value=ia.parameters.reflectivity),ia.parameters.lightMap&&(ma.tAO.value=ia.parameters.lightMap,ma.enableAO.value=!0),ia.parameters.specularMap&&(ma.tSpecular.value=B.textures[ia.parameters.specularMap],ma.enableSpecular.value=!0),ia.parameters.displacementMap&&(ma.tDisplacement.value=B.textures[ia.parameters.displacementMap],ma.enableDisplacement.value=!0,ma.uDisplacementBias.value=ia.parameters.displacementBias,ma.uDisplacementScale.value=ia.parameters.displacementScale),ma.uDiffuseColor.value.setHex(na),ma.uSpecularColor.value.setHex(oa),ma.uAmbientColor.value.setHex(pa),ma.uShininess.value=qa,ia.parameters.opacity&&(ma.uOpacity.value=ia.parameters.opacity);var ra={fragmentShader:la.fragmentShader,vertexShader:la.vertexShader,uniforms:ma,lights:!0,fog:!0};p=new THREE.ShaderMaterial(ra)}else p=new THREE[ia.type](ia.parameters);p.name=ha,B.materials[ha]=p}for(ha in F.materials)if(ia=F.materials[ha],ia.parameters.materials){for(var sa=[],ca=0;ca<ia.parameters.materials.length;ca++){var ta=ia.parameters.materials[ca];sa.push(B.materials[ta])}B.materials[ha].materials=sa}e(),B.cameras&&F.defaults.camera&&(B.currentCamera=B.cameras[F.defaults.camera]),B.fogs&&F.defaults.fog&&(B.scene.fog=B.fogs[F.defaults.fog]),C.callbackSync(B),l()}},THREE.TextureLoader=function(a){this.manager=void 0!==a?a:THREE.DefaultLoadingManager},THREE.TextureLoader.prototype={constructor:THREE.TextureLoader,load:function(a,b,c,d){var e=this,f=new THREE.ImageLoader(e.manager);f.setCrossOrigin(this.crossOrigin),f.load(a,function(a){var c=new THREE.Texture(a);c.needsUpdate=!0,void 0!==b&&b(c)})},setCrossOrigin:function(a){this.crossOrigin=a}},THREE.Material=function(){this.id=THREE.MaterialIdCount++,this.uuid=THREE.Math.generateUUID(),this.name="",this.side=THREE.FrontSide,this.opacity=1,this.transparent=!1,this.blending=THREE.NormalBlending,this.blendSrc=THREE.SrcAlphaFactor,this.blendDst=THREE.OneMinusSrcAlphaFactor,this.blendEquation=THREE.AddEquation,this.depthTest=!0,this.depthWrite=!0,this.polygonOffset=!1,this.polygonOffsetFactor=0,this.polygonOffsetUnits=0,this.alphaTest=0,this.overdraw=0,this.visible=!0,this.needsUpdate=!0},THREE.Material.prototype={constructor:THREE.Material,setValues:function(a){if(void 0!==a)for(var b in a){var c=a[b];if(void 0!==c){if(b in this){var d=this[b];d instanceof THREE.Color?d.set(c):d instanceof THREE.Vector3&&c instanceof THREE.Vector3?d.copy(c):"overdraw"==b?this[b]=Number(c):this[b]=c}}else console.warn("THREE.Material: '"+b+"' parameter is undefined.")}},clone:function(a){return void 0===a&&(a=new THREE.Material),a.name=this.name,a.side=this.side,a.opacity=this.opacity,a.transparent=this.transparent,a.blending=this.blending,a.blendSrc=this.blendSrc,a.blendDst=this.blendDst,a.blendEquation=this.blendEquation,a.depthTest=this.depthTest,a.depthWrite=this.depthWrite,a.polygonOffset=this.polygonOffset,a.polygonOffsetFactor=this.polygonOffsetFactor,a.polygonOffsetUnits=this.polygonOffsetUnits,a.alphaTest=this.alphaTest,a.overdraw=this.overdraw,a.visible=this.visible,a},dispose:function(){this.dispatchEvent({type:"dispose"})}},THREE.EventDispatcher.prototype.apply(THREE.Material.prototype),THREE.MaterialIdCount=0,THREE.LineBasicMaterial=function(a){THREE.Material.call(this),this.color=new THREE.Color(16777215),this.linewidth=1,this.linecap="round",this.linejoin="round",this.vertexColors=!1,this.fog=!0,this.setValues(a)},THREE.LineBasicMaterial.prototype=Object.create(THREE.Material.prototype),THREE.LineBasicMaterial.prototype.clone=function(){var a=new THREE.LineBasicMaterial;return THREE.Material.prototype.clone.call(this,a),a.color.copy(this.color),a.linewidth=this.linewidth,a.linecap=this.linecap,a.linejoin=this.linejoin,a.vertexColors=this.vertexColors,a.fog=this.fog,a},THREE.LineDashedMaterial=function(a){THREE.Material.call(this),this.color=new THREE.Color(16777215),this.linewidth=1,this.scale=1,this.dashSize=3,this.gapSize=1,this.vertexColors=!1,this.fog=!0,this.setValues(a)},THREE.LineDashedMaterial.prototype=Object.create(THREE.Material.prototype),THREE.LineDashedMaterial.prototype.clone=function(){var a=new THREE.LineDashedMaterial;return THREE.Material.prototype.clone.call(this,a),a.color.copy(this.color),a.linewidth=this.linewidth,a.scale=this.scale,a.dashSize=this.dashSize,a.gapSize=this.gapSize,a.vertexColors=this.vertexColors,a.fog=this.fog,a},THREE.MeshBasicMaterial=function(a){THREE.Material.call(this),this.color=new THREE.Color(16777215),this.map=null,this.lightMap=null,this.specularMap=null,this.envMap=null,this.combine=THREE.MultiplyOperation,this.reflectivity=1,this.refractionRatio=.98,this.fog=!0,this.shading=THREE.SmoothShading,this.wireframe=!1,this.wireframeLinewidth=1,this.wireframeLinecap="round",this.wireframeLinejoin="round",this.vertexColors=THREE.NoColors,this.skinning=!1,this.morphTargets=!1,this.setValues(a)},THREE.MeshBasicMaterial.prototype=Object.create(THREE.Material.prototype),THREE.MeshBasicMaterial.prototype.clone=function(){var a=new THREE.MeshBasicMaterial;return THREE.Material.prototype.clone.call(this,a),a.color.copy(this.color),a.map=this.map,a.lightMap=this.lightMap,a.specularMap=this.specularMap,a.envMap=this.envMap,a.combine=this.combine,a.reflectivity=this.reflectivity,a.refractionRatio=this.refractionRatio,a.fog=this.fog,a.shading=this.shading,a.wireframe=this.wireframe,a.wireframeLinewidth=this.wireframeLinewidth,a.wireframeLinecap=this.wireframeLinecap,a.wireframeLinejoin=this.wireframeLinejoin,a.vertexColors=this.vertexColors,a.skinning=this.skinning,a.morphTargets=this.morphTargets,a},THREE.MeshLambertMaterial=function(a){THREE.Material.call(this),this.color=new THREE.Color(16777215),this.ambient=new THREE.Color(16777215),this.emissive=new THREE.Color(0),this.wrapAround=!1,this.wrapRGB=new THREE.Vector3(1,1,1),this.map=null,this.lightMap=null,this.specularMap=null,this.envMap=null,this.combine=THREE.MultiplyOperation,this.reflectivity=1,this.refractionRatio=.98,this.fog=!0,this.shading=THREE.SmoothShading,this.wireframe=!1,this.wireframeLinewidth=1,this.wireframeLinecap="round",this.wireframeLinejoin="round",this.vertexColors=THREE.NoColors,this.skinning=!1,this.morphTargets=!1,this.morphNormals=!1,this.setValues(a)},THREE.MeshLambertMaterial.prototype=Object.create(THREE.Material.prototype),THREE.MeshLambertMaterial.prototype.clone=function(){var a=new THREE.MeshLambertMaterial;return THREE.Material.prototype.clone.call(this,a),a.color.copy(this.color),a.ambient.copy(this.ambient),a.emissive.copy(this.emissive),a.wrapAround=this.wrapAround,a.wrapRGB.copy(this.wrapRGB),a.map=this.map,a.lightMap=this.lightMap,a.specularMap=this.specularMap,a.envMap=this.envMap,a.combine=this.combine,a.reflectivity=this.reflectivity,a.refractionRatio=this.refractionRatio,a.fog=this.fog,a.shading=this.shading,a.wireframe=this.wireframe,a.wireframeLinewidth=this.wireframeLinewidth,a.wireframeLinecap=this.wireframeLinecap,a.wireframeLinejoin=this.wireframeLinejoin,a.vertexColors=this.vertexColors,a.skinning=this.skinning,a.morphTargets=this.morphTargets,a.morphNormals=this.morphNormals,a},THREE.MeshPhongMaterial=function(a){THREE.Material.call(this),this.color=new THREE.Color(16777215),this.ambient=new THREE.Color(16777215),this.emissive=new THREE.Color(0),this.specular=new THREE.Color(1118481),this.shininess=30,this.metal=!1,this.perPixel=!0,this.wrapAround=!1,this.wrapRGB=new THREE.Vector3(1,1,1),this.map=null,this.lightMap=null,this.bumpMap=null,this.bumpScale=1,this.normalMap=null,this.normalScale=new THREE.Vector2(1,1),this.specularMap=null,this.envMap=null,this.combine=THREE.MultiplyOperation,this.reflectivity=1,this.refractionRatio=.98,this.fog=!0,this.shading=THREE.SmoothShading,this.wireframe=!1,this.wireframeLinewidth=1,this.wireframeLinecap="round",this.wireframeLinejoin="round",this.vertexColors=THREE.NoColors,this.skinning=!1,this.morphTargets=!1,this.morphNormals=!1,this.setValues(a)},THREE.MeshPhongMaterial.prototype=Object.create(THREE.Material.prototype),THREE.MeshPhongMaterial.prototype.clone=function(){var a=new THREE.MeshPhongMaterial;return THREE.Material.prototype.clone.call(this,a),a.color.copy(this.color),a.ambient.copy(this.ambient),a.emissive.copy(this.emissive),a.specular.copy(this.specular),a.shininess=this.shininess,a.metal=this.metal,a.perPixel=this.perPixel,a.wrapAround=this.wrapAround,a.wrapRGB.copy(this.wrapRGB),a.map=this.map,a.lightMap=this.lightMap,a.bumpMap=this.bumpMap,a.bumpScale=this.bumpScale,a.normalMap=this.normalMap,a.normalScale.copy(this.normalScale),a.specularMap=this.specularMap,a.envMap=this.envMap,a.combine=this.combine,a.reflectivity=this.reflectivity,a.refractionRatio=this.refractionRatio,a.fog=this.fog,a.shading=this.shading,a.wireframe=this.wireframe,a.wireframeLinewidth=this.wireframeLinewidth,a.wireframeLinecap=this.wireframeLinecap,a.wireframeLinejoin=this.wireframeLinejoin,a.vertexColors=this.vertexColors,a.skinning=this.skinning,a.morphTargets=this.morphTargets,a.morphNormals=this.morphNormals,a},THREE.MeshDepthMaterial=function(a){THREE.Material.call(this),this.wireframe=!1,this.wireframeLinewidth=1,this.setValues(a)},THREE.MeshDepthMaterial.prototype=Object.create(THREE.Material.prototype),THREE.MeshDepthMaterial.prototype.clone=function(){var a=new THREE.MeshDepthMaterial;return THREE.Material.prototype.clone.call(this,a),a.wireframe=this.wireframe,a.wireframeLinewidth=this.wireframeLinewidth,a},THREE.MeshNormalMaterial=function(a){THREE.Material.call(this,a),this.shading=THREE.FlatShading,this.wireframe=!1,this.wireframeLinewidth=1,this.morphTargets=!1,this.setValues(a)},THREE.MeshNormalMaterial.prototype=Object.create(THREE.Material.prototype),THREE.MeshNormalMaterial.prototype.clone=function(){var a=new THREE.MeshNormalMaterial;return THREE.Material.prototype.clone.call(this,a),a.shading=this.shading,a.wireframe=this.wireframe,a.wireframeLinewidth=this.wireframeLinewidth,a},THREE.MeshFaceMaterial=function(a){this.materials=a instanceof Array?a:[]},THREE.MeshFaceMaterial.prototype.clone=function(){return new THREE.MeshFaceMaterial(this.materials.slice(0))},THREE.ParticleBasicMaterial=function(a){THREE.Material.call(this),this.color=new THREE.Color(16777215),this.map=null,this.size=1,this.sizeAttenuation=!0,this.vertexColors=!1,this.fog=!0,this.setValues(a)},THREE.ParticleBasicMaterial.prototype=Object.create(THREE.Material.prototype),THREE.ParticleBasicMaterial.prototype.clone=function(){var a=new THREE.ParticleBasicMaterial;return THREE.Material.prototype.clone.call(this,a),a.color.copy(this.color),a.map=this.map,a.size=this.size,a.sizeAttenuation=this.sizeAttenuation,a.vertexColors=this.vertexColors,a.fog=this.fog,a},THREE.ParticleCanvasMaterial=function(a){THREE.Material.call(this),this.color=new THREE.Color(16777215),this.program=function(a,b){},this.setValues(a)},THREE.ParticleCanvasMaterial.prototype=Object.create(THREE.Material.prototype),THREE.ParticleCanvasMaterial.prototype.clone=function(){var a=new THREE.ParticleCanvasMaterial;return THREE.Material.prototype.clone.call(this,a),a.color.copy(this.color),a.program=this.program,a},THREE.ShaderMaterial=function(a){THREE.Material.call(this),this.fragmentShader="void main() {}",this.vertexShader="void main() {}",this.uniforms={},this.defines={},this.attributes=null,this.shading=THREE.SmoothShading,this.linewidth=1,this.wireframe=!1,this.wireframeLinewidth=1,this.fog=!1,this.lights=!1,this.vertexColors=THREE.NoColors,this.skinning=!1,this.morphTargets=!1,this.morphNormals=!1,this.defaultAttributeValues={color:[1,1,1],uv:[0,0],uv2:[0,0]},this.index0AttributeName="position",this.setValues(a)},THREE.ShaderMaterial.prototype=Object.create(THREE.Material.prototype),THREE.ShaderMaterial.prototype.clone=function(){var a=new THREE.ShaderMaterial;return THREE.Material.prototype.clone.call(this,a),a.fragmentShader=this.fragmentShader,a.vertexShader=this.vertexShader,a.uniforms=THREE.UniformsUtils.clone(this.uniforms),a.attributes=this.attributes,a.defines=this.defines,a.shading=this.shading,a.wireframe=this.wireframe,a.wireframeLinewidth=this.wireframeLinewidth,a.fog=this.fog,a.lights=this.lights,a.vertexColors=this.vertexColors,a.skinning=this.skinning,a.morphTargets=this.morphTargets,a.morphNormals=this.morphNormals,a},THREE.SpriteMaterial=function(a){THREE.Material.call(this),this.color=new THREE.Color(16777215),this.map=new THREE.Texture,this.useScreenCoordinates=!0,this.depthTest=!this.useScreenCoordinates,this.sizeAttenuation=!this.useScreenCoordinates,this.scaleByViewport=!this.sizeAttenuation,this.alignment=THREE.SpriteAlignment.center.clone(),this.fog=!1,this.uvOffset=new THREE.Vector2(0,0),this.uvScale=new THREE.Vector2(1,1),this.setValues(a),a=a||{},void 0===a.depthTest&&(this.depthTest=!this.useScreenCoordinates),void 0===a.sizeAttenuation&&(this.sizeAttenuation=!this.useScreenCoordinates),void 0===a.scaleByViewport&&(this.scaleByViewport=!this.sizeAttenuation)},THREE.SpriteMaterial.prototype=Object.create(THREE.Material.prototype),THREE.SpriteMaterial.prototype.clone=function(){var a=new THREE.SpriteMaterial;return THREE.Material.prototype.clone.call(this,a),a.color.copy(this.color),a.map=this.map,a.useScreenCoordinates=this.useScreenCoordinates,a.sizeAttenuation=this.sizeAttenuation,a.scaleByViewport=this.scaleByViewport,a.alignment.copy(this.alignment),a.uvOffset.copy(this.uvOffset),a.uvScale.copy(this.uvScale),a.fog=this.fog,a},THREE.SpriteAlignment={},THREE.SpriteAlignment.topLeft=new THREE.Vector2(1,(-1)),THREE.SpriteAlignment.topCenter=new THREE.Vector2(0,(-1)),THREE.SpriteAlignment.topRight=new THREE.Vector2((-1),(-1)),THREE.SpriteAlignment.centerLeft=new THREE.Vector2(1,0),THREE.SpriteAlignment.center=new THREE.Vector2(0,0),THREE.SpriteAlignment.centerRight=new THREE.Vector2((-1),0),THREE.SpriteAlignment.bottomLeft=new THREE.Vector2(1,1),THREE.SpriteAlignment.bottomCenter=new THREE.Vector2(0,1),THREE.SpriteAlignment.bottomRight=new THREE.Vector2((-1),1),THREE.Texture=function(a,b,c,d,e,f,g,h,i){this.id=THREE.TextureIdCount++,this.uuid=THREE.Math.generateUUID(),this.name="",this.image=a,this.mipmaps=[],this.mapping=void 0!==b?b:new THREE.UVMapping,this.wrapS=void 0!==c?c:THREE.ClampToEdgeWrapping,this.wrapT=void 0!==d?d:THREE.ClampToEdgeWrapping,this.magFilter=void 0!==e?e:THREE.LinearFilter,this.minFilter=void 0!==f?f:THREE.LinearMipMapLinearFilter,this.anisotropy=void 0!==i?i:1,this.format=void 0!==g?g:THREE.RGBAFormat,this.type=void 0!==h?h:THREE.UnsignedByteType,this.offset=new THREE.Vector2(0,0),this.repeat=new THREE.Vector2(1,1),this.generateMipmaps=!0,this.premultiplyAlpha=!1,this.flipY=!0,this.unpackAlignment=4,this.needsUpdate=!1,this.onUpdate=null},THREE.Texture.prototype={constructor:THREE.Texture,clone:function(a){return void 0===a&&(a=new THREE.Texture),a.image=this.image,a.mipmaps=this.mipmaps.slice(0),a.mapping=this.mapping,a.wrapS=this.wrapS,a.wrapT=this.wrapT,a.magFilter=this.magFilter,a.minFilter=this.minFilter,a.anisotropy=this.anisotropy,a.format=this.format,a.type=this.type,a.offset.copy(this.offset),a.repeat.copy(this.repeat),a.generateMipmaps=this.generateMipmaps,a.premultiplyAlpha=this.premultiplyAlpha,a.flipY=this.flipY,a.unpackAlignment=this.unpackAlignment,a},dispose:function(){this.dispatchEvent({type:"dispose"})}},THREE.EventDispatcher.prototype.apply(THREE.Texture.prototype),THREE.TextureIdCount=0,THREE.CompressedTexture=function(a,b,c,d,e,f,g,h,i,j,k){THREE.Texture.call(this,null,f,g,h,i,j,d,e,k),this.image={width:b,height:c},this.mipmaps=a,this.generateMipmaps=!1},THREE.CompressedTexture.prototype=Object.create(THREE.Texture.prototype),THREE.CompressedTexture.prototype.clone=function(){var a=new THREE.CompressedTexture;return THREE.Texture.prototype.clone.call(this,a),a},THREE.DataTexture=function(a,b,c,d,e,f,g,h,i,j,k){THREE.Texture.call(this,null,f,g,h,i,j,d,e,k),this.image={data:a,width:b,height:c}},THREE.DataTexture.prototype=Object.create(THREE.Texture.prototype),THREE.DataTexture.prototype.clone=function(){var a=new THREE.DataTexture;return THREE.Texture.prototype.clone.call(this,a),a},THREE.Particle=function(a){THREE.Object3D.call(this),this.material=a},THREE.Particle.prototype=Object.create(THREE.Object3D.prototype),THREE.Particle.prototype.clone=function(a){return void 0===a&&(a=new THREE.Particle(this.material)),THREE.Object3D.prototype.clone.call(this,a),a},THREE.ParticleSystem=function(a,b){THREE.Object3D.call(this),this.geometry=void 0!==a?a:new THREE.Geometry,this.material=void 0!==b?b:new THREE.ParticleBasicMaterial({color:16777215*Math.random()}),this.sortParticles=!1,this.frustumCulled=!1},THREE.ParticleSystem.prototype=Object.create(THREE.Object3D.prototype),THREE.ParticleSystem.prototype.clone=function(a){return void 0===a&&(a=new THREE.ParticleSystem(this.geometry,this.material)),a.sortParticles=this.sortParticles,THREE.Object3D.prototype.clone.call(this,a),a},THREE.Line=function(a,b,c){THREE.Object3D.call(this),this.geometry=void 0!==a?a:new THREE.Geometry,this.material=void 0!==b?b:new THREE.LineBasicMaterial({color:16777215*Math.random()}),this.type=void 0!==c?c:THREE.LineStrip},THREE.LineStrip=0,THREE.LinePieces=1,THREE.Line.prototype=Object.create(THREE.Object3D.prototype),THREE.Line.prototype.clone=function(a){return void 0===a&&(a=new THREE.Line(this.geometry,this.material,this.type)),THREE.Object3D.prototype.clone.call(this,a),a},THREE.Mesh=function(a,b){THREE.Object3D.call(this),this.geometry=void 0!==a?a:new THREE.Geometry,this.material=void 0!==b?b:new THREE.MeshBasicMaterial({color:16777215*Math.random()}),this.updateMorphTargets()},THREE.Mesh.prototype=Object.create(THREE.Object3D.prototype),THREE.Mesh.prototype.updateMorphTargets=function(){if(this.geometry.morphTargets.length>0){this.morphTargetBase=-1,this.morphTargetForcedOrder=[],this.morphTargetInfluences=[],this.morphTargetDictionary={};for(var a=0,b=this.geometry.morphTargets.length;a<b;a++)this.morphTargetInfluences.push(0),this.morphTargetDictionary[this.geometry.morphTargets[a].name]=a}},THREE.Mesh.prototype.getMorphTargetIndexByName=function(a){return void 0!==this.morphTargetDictionary[a]?this.morphTargetDictionary[a]:(console.log("THREE.Mesh.getMorphTargetIndexByName: morph target "+a+" does not exist. Returning 0."),0)},THREE.Mesh.prototype.clone=function(a){return void 0===a&&(a=new THREE.Mesh(this.geometry,this.material)),THREE.Object3D.prototype.clone.call(this,a),a},THREE.Bone=function(a){THREE.Object3D.call(this),this.skin=a,this.skinMatrix=new THREE.Matrix4},THREE.Bone.prototype=Object.create(THREE.Object3D.prototype),THREE.Bone.prototype.update=function(a,b){this.matrixAutoUpdate&&(b|=this.updateMatrix()),(b||this.matrixWorldNeedsUpdate)&&(a?this.skinMatrix.multiplyMatrices(a,this.matrix):this.skinMatrix.copy(this.matrix),this.matrixWorldNeedsUpdate=!1,b=!0);var c,d=this.children.length;for(c=0;c<d;c++)this.children[c].update(this.skinMatrix,b)},THREE.SkinnedMesh=function(a,b,c){THREE.Mesh.call(this,a,b),this.useVertexTexture=void 0===c||c,this.identityMatrix=new THREE.Matrix4,this.bones=[],this.boneMatrices=[];var d,e,f,g,h,i;if(this.geometry&&void 0!==this.geometry.bones){for(d=0;d<this.geometry.bones.length;d++)f=this.geometry.bones[d],g=f.pos,h=f.rotq,i=f.scl,e=this.addBone(),e.name=f.name,e.position.set(g[0],g[1],g[2]),e.quaternion.set(h[0],h[1],h[2],h[3]),void 0!==i?e.scale.set(i[0],i[1],i[2]):e.scale.set(1,1,1);for(d=0;d<this.bones.length;d++)f=this.geometry.bones[d],e=this.bones[d],f.parent===-1?this.add(e):this.bones[f.parent].add(e);var j=this.bones.length;if(this.useVertexTexture){var k;k=j>256?64:j>64?32:j>16?16:8,this.boneTextureWidth=k,this.boneTextureHeight=k,this.boneMatrices=new Float32Array(this.boneTextureWidth*this.boneTextureHeight*4),this.boneTexture=new THREE.DataTexture(this.boneMatrices,this.boneTextureWidth,this.boneTextureHeight,THREE.RGBAFormat,THREE.FloatType),this.boneTexture.minFilter=THREE.NearestFilter,this.boneTexture.magFilter=THREE.NearestFilter,this.boneTexture.generateMipmaps=!1,this.boneTexture.flipY=!1}else this.boneMatrices=new Float32Array(16*j);this.pose()}},THREE.SkinnedMesh.prototype=Object.create(THREE.Mesh.prototype),THREE.SkinnedMesh.prototype.addBone=function(a){return void 0===a&&(a=new THREE.Bone(this)),this.bones.push(a),a},THREE.SkinnedMesh.prototype.updateMatrixWorld=function(){var a=new THREE.Matrix4;return function(b){this.matrixAutoUpdate&&this.updateMatrix(),(this.matrixWorldNeedsUpdate||b)&&(this.parent?this.matrixWorld.multiplyMatrices(this.parent.matrixWorld,this.matrix):this.matrixWorld.copy(this.matrix),this.matrixWorldNeedsUpdate=!1,b=!0);for(var c=0,d=this.children.length;c<d;c++){var e=this.children[c];e instanceof THREE.Bone?e.update(this.identityMatrix,!1):e.updateMatrixWorld(!0)}if(void 0==this.boneInverses){this.boneInverses=[];for(var f=0,g=this.bones.length;f<g;f++){var h=new THREE.Matrix4;h.getInverse(this.bones[f].skinMatrix),this.boneInverses.push(h)}}for(var f=0,g=this.bones.length;f<g;f++)a.multiplyMatrices(this.bones[f].skinMatrix,this.boneInverses[f]),a.flattenToArrayOffset(this.boneMatrices,16*f);this.useVertexTexture&&(this.boneTexture.needsUpdate=!0)}}(),THREE.SkinnedMesh.prototype.pose=function(){this.updateMatrixWorld(!0),this.normalizeSkinWeights()},THREE.SkinnedMesh.prototype.normalizeSkinWeights=function(){if(this.geometry instanceof THREE.Geometry)for(var a=0;a<this.geometry.skinIndices.length;a++){var b=this.geometry.skinWeights[a],c=1/b.lengthManhattan();c!==1/0?b.multiplyScalar(c):b.set(1)}},THREE.SkinnedMesh.prototype.clone=function(a){return void 0===a&&(a=new THREE.SkinnedMesh(this.geometry,this.material,this.useVertexTexture)),THREE.Mesh.prototype.clone.call(this,a),a},THREE.MorphAnimMesh=function(a,b){THREE.Mesh.call(this,a,b),this.duration=1e3,this.mirroredLoop=!1,this.time=0,this.lastKeyframe=0,this.currentKeyframe=0,this.direction=1,this.directionBackwards=!1,this.setFrameRange(0,this.geometry.morphTargets.length-1)},THREE.MorphAnimMesh.prototype=Object.create(THREE.Mesh.prototype),THREE.MorphAnimMesh.prototype.setFrameRange=function(a,b){this.startKeyframe=a,this.endKeyframe=b,this.length=this.endKeyframe-this.startKeyframe+1},THREE.MorphAnimMesh.prototype.setDirectionForward=function(){this.direction=1,this.directionBackwards=!1},THREE.MorphAnimMesh.prototype.setDirectionBackward=function(){this.direction=-1,this.directionBackwards=!0},THREE.MorphAnimMesh.prototype.parseAnimations=function(){var a=this.geometry;a.animations||(a.animations={});for(var b,c=a.animations,d=/([a-z]+)(\d+)/,e=0,f=a.morphTargets.length;e<f;e++){var g=a.morphTargets[e],h=g.name.match(d);if(h&&h.length>1){var i=h[1];h[2];c[i]||(c[i]={start:1/0,end:-(1/0)});var j=c[i];e<j.start&&(j.start=e),e>j.end&&(j.end=e),b||(b=i)}}a.firstAnimation=b},THREE.MorphAnimMesh.prototype.setAnimationLabel=function(a,b,c){this.geometry.animations||(this.geometry.animations={}),this.geometry.animations[a]={start:b,end:c}},THREE.MorphAnimMesh.prototype.playAnimation=function(a,b){var c=this.geometry.animations[a];c?(this.setFrameRange(c.start,c.end),this.duration=1e3*((c.end-c.start)/b),this.time=0):console.warn("animation["+a+"] undefined")},THREE.MorphAnimMesh.prototype.updateAnimation=function(a){var b=this.duration/this.length;this.time+=this.direction*a,this.mirroredLoop?(this.time>this.duration||this.time<0)&&(this.direction*=-1,this.time>this.duration&&(this.time=this.duration,this.directionBackwards=!0),this.time<0&&(this.time=0,this.directionBackwards=!1)):(this.time=this.time%this.duration,this.time<0&&(this.time+=this.duration));var c=this.startKeyframe+THREE.Math.clamp(Math.floor(this.time/b),0,this.length-1);c!==this.currentKeyframe&&(this.morphTargetInfluences[this.lastKeyframe]=0,this.morphTargetInfluences[this.currentKeyframe]=1,this.morphTargetInfluences[c]=0,this.lastKeyframe=this.currentKeyframe,this.currentKeyframe=c);var d=this.time%b/b;this.directionBackwards&&(d=1-d),this.morphTargetInfluences[this.currentKeyframe]=d,this.morphTargetInfluences[this.lastKeyframe]=1-d},THREE.MorphAnimMesh.prototype.clone=function(a){return void 0===a&&(a=new THREE.MorphAnimMesh(this.geometry,this.material)),a.duration=this.duration,a.mirroredLoop=this.mirroredLoop,a.time=this.time,a.lastKeyframe=this.lastKeyframe,a.currentKeyframe=this.currentKeyframe,a.direction=this.direction,a.directionBackwards=this.directionBackwards,THREE.Mesh.prototype.clone.call(this,a),a},THREE.Ribbon=function(a,b){THREE.Object3D.call(this),this.geometry=a,this.material=b},THREE.Ribbon.prototype=Object.create(THREE.Object3D.prototype),THREE.Ribbon.prototype.clone=function(a){return void 0===a&&(a=new THREE.Ribbon(this.geometry,this.material)),THREE.Object3D.prototype.clone.call(this,a),a},THREE.LOD=function(){THREE.Object3D.call(this),this.objects=[]},THREE.LOD.prototype=Object.create(THREE.Object3D.prototype),THREE.LOD.prototype.addLevel=function(a,b){void 0===b&&(b=0),b=Math.abs(b);for(var c=0;c<this.objects.length&&!(b<this.objects[c].distance);c++);this.objects.splice(c,0,{distance:b,object:a}),this.add(a)},THREE.LOD.prototype.getObjectForDistance=function(a){for(var b=1,c=this.objects.length;b<c&&!(a<this.objects[b].distance);b++);return this.objects[b-1].object},THREE.LOD.prototype.update=function(){var a=new THREE.Vector3,b=new THREE.Vector3;return function(c){if(this.objects.length>1){a.getPositionFromMatrix(c.matrixWorld),b.getPositionFromMatrix(this.matrixWorld);var d=a.distanceTo(b);this.objects[0].object.visible=!0;for(var e=1,f=this.objects.length;e<f&&d>=this.objects[e].distance;e++)this.objects[e-1].object.visible=!1,this.objects[e].object.visible=!0;for(;e<f;e++)this.objects[e].object.visible=!1}}}(),THREE.LOD.prototype.clone=function(){},THREE.Sprite=function(a){THREE.Object3D.call(this),this.material=void 0!==a?a:new THREE.SpriteMaterial,this.rotation3d=this.rotation,this.rotation=0},THREE.Sprite.prototype=Object.create(THREE.Object3D.prototype),THREE.Sprite.prototype.updateMatrix=function(){this.rotation3d.set(0,0,this.rotation,this.rotation3d.order),this.quaternion.setFromEuler(this.rotation3d),this.matrix.compose(this.position,this.quaternion,this.scale),this.matrixWorldNeedsUpdate=!0},THREE.Sprite.prototype.clone=function(a){return void 0===a&&(a=new THREE.Sprite(this.material)),THREE.Object3D.prototype.clone.call(this,a),a},THREE.Scene=function(){THREE.Object3D.call(this),this.fog=null,this.overrideMaterial=null,this.autoUpdate=!0,this.matrixAutoUpdate=!1,this.__objects=[],this.__lights=[],this.__objectsAdded=[],this.__objectsRemoved=[]},THREE.Scene.prototype=Object.create(THREE.Object3D.prototype),THREE.Scene.prototype.__addObject=function(a){if(a instanceof THREE.Light)this.__lights.indexOf(a)===-1&&this.__lights.push(a),a.target&&void 0===a.target.parent&&this.add(a.target);else if(!(a instanceof THREE.Camera||a instanceof THREE.Bone)&&this.__objects.indexOf(a)===-1){this.__objects.push(a),this.__objectsAdded.push(a);var b=this.__objectsRemoved.indexOf(a);b!==-1&&this.__objectsRemoved.splice(b,1)}for(var c=0;c<a.children.length;c++)this.__addObject(a.children[c])},THREE.Scene.prototype.__removeObject=function(a){if(a instanceof THREE.Light){var b=this.__lights.indexOf(a);b!==-1&&this.__lights.splice(b,1)}else if(!(a instanceof THREE.Camera)){var b=this.__objects.indexOf(a);if(b!==-1){this.__objects.splice(b,1),this.__objectsRemoved.push(a);var c=this.__objectsAdded.indexOf(a);c!==-1&&this.__objectsAdded.splice(c,1)}}for(var d=0;d<a.children.length;d++)this.__removeObject(a.children[d])},THREE.Scene.prototype.clone=function(a){return void 0===a&&(a=new THREE.Scene),THREE.Object3D.prototype.clone.call(this,a),null!==this.fog&&(a.fog=this.fog.clone()),null!==this.overrideMaterial&&(a.overrideMaterial=this.overrideMaterial.clone()),a.autoUpdate=this.autoUpdate,a.matrixAutoUpdate=this.matrixAutoUpdate,a},THREE.Fog=function(a,b,c){this.name="",this.color=new THREE.Color(a),this.near=void 0!==b?b:1,this.far=void 0!==c?c:1e3},THREE.Fog.prototype.clone=function(){return new THREE.Fog(this.color.getHex(),this.near,this.far)},THREE.FogExp2=function(a,b){this.name="",this.color=new THREE.Color(a),this.density=void 0!==b?b:25e-5},THREE.FogExp2.prototype.clone=function(){return new THREE.FogExp2(this.color.getHex(),this.density)},THREE.CanvasRenderer=function(a){function b(){Da.setRGB(0,0,0),Ea.setRGB(0,0,0),Fa.setRGB(0,0,0);for(var a=0,b=y.length;a<b;a++){var c=y[a],d=c.color;c instanceof THREE.AmbientLight?Da.add(d):c instanceof THREE.DirectionalLight?Ea.add(d):c instanceof THREE.PointLight&&Fa.add(d)}}function c(a,b,c){for(var d=0,e=y.length;d<e;d++){var f=y[d];if(xa.copy(f.color),f instanceof THREE.DirectionalLight){var g=Ga.getPositionFromMatrix(f.matrixWorld).normalize(),h=b.dot(g);if(h<=0)continue;h*=f.intensity,c.add(xa.multiplyScalar(h))}else if(f instanceof THREE.PointLight){var g=Ga.getPositionFromMatrix(f.matrixWorld),h=b.dot(Ga.subVectors(g,a).normalize());if(h<=0)continue;if(h*=0==f.distance?1:1-Math.min(a.distanceTo(g)/f.distance,1),0==h)continue;h*=f.intensity,c.add(xa.multiplyScalar(h))}}}function d(a,b,c){n(c.opacity),o(c.blending);var d,e,f,g,h,i,j;if(c instanceof THREE.ParticleBasicMaterial)if(null===c.map){if(f=b.object.scale.x,g=b.object.scale.y,f*=b.scale.x*B,g*=b.scale.y*C,Ca.min.set(a.x-f,a.y-g),Ca.max.set(a.x+f,a.y+g),Aa.isIntersectionBox(Ca)===!1)return void Ca.makeEmpty();t(c.color.getStyle()),ea.save(),ea.translate(a.x,a.y),ea.rotate(-b.rotation),ea.scale(f,g),ea.fillRect(-1,-1,2,2),ea.restore()}else{if(h=c.map.image,i=h.width>>1,j=h.height>>1,f=b.scale.x*B,g=b.scale.y*C,d=f*i,e=g*j,Ca.min.set(a.x-d,a.y-e),Ca.max.set(a.x+d,a.y+e),Aa.isIntersectionBox(Ca)===!1)return void Ca.makeEmpty();ea.save(),ea.translate(a.x,a.y),ea.rotate(-b.rotation),ea.scale(f,-g),ea.translate(-i,-j),ea.drawImage(h,0,0),ea.restore()}else if(c instanceof THREE.ParticleCanvasMaterial){if(d=b.scale.x*B,e=b.scale.y*C,Ca.min.set(a.x-d,a.y-e),
Ca.max.set(a.x+d,a.y+e),Aa.isIntersectionBox(Ca)===!1)return void Ca.makeEmpty();s(c.color.getStyle()),t(c.color.getStyle()),ea.save(),ea.translate(a.x,a.y),ea.rotate(-b.rotation),ea.scale(d,e),c.program(ea),ea.restore()}}function e(a,b,c,d){if(n(d.opacity),o(d.blending),ea.beginPath(),ea.moveTo(a.positionScreen.x,a.positionScreen.y),ea.lineTo(b.positionScreen.x,b.positionScreen.y),d instanceof THREE.LineBasicMaterial){if(p(d.linewidth),q(d.linecap),r(d.linejoin),d.vertexColors!==THREE.VertexColors)s(d.color.getStyle());else{var e=c.vertexColors[0].getStyle(),f=c.vertexColors[1].getStyle();if(e===f)s(e);else{try{var g=ea.createLinearGradient(a.positionScreen.x,a.positionScreen.y,b.positionScreen.x,b.positionScreen.y);g.addColorStop(0,e),g.addColorStop(1,f)}catch(h){g=e}s(g)}}ea.stroke(),Ca.expandByScalar(2*d.linewidth)}else d instanceof THREE.LineDashedMaterial&&(p(d.linewidth),q(d.linecap),r(d.linejoin),s(d.color.getStyle()),u(d.dashSize,d.gapSize),ea.stroke(),Ca.expandByScalar(2*d.linewidth),u(null,null))}function f(a,b,d,e,f,m,p,q){if(ba.info.render.vertices+=3,ba.info.render.faces++,n(q.opacity),o(q.blending),H=a.positionScreen.x,I=a.positionScreen.y,J=b.positionScreen.x,K=b.positionScreen.y,L=d.positionScreen.x,M=d.positionScreen.y,g(H,I,J,K,L,M),(q instanceof THREE.MeshLambertMaterial||q instanceof THREE.MeshPhongMaterial)&&null===q.map)va.copy(q.color),wa.copy(q.emissive),q.vertexColors===THREE.FaceColors&&va.multiply(p.color),q.wireframe===!1&&q.shading==THREE.SmoothShading&&3==p.vertexNormalsLength?(ra.copy(Da),sa.copy(Da),ta.copy(Da),c(p.v1.positionWorld,p.vertexNormalsModel[0],ra),c(p.v2.positionWorld,p.vertexNormalsModel[1],sa),c(p.v3.positionWorld,p.vertexNormalsModel[2],ta),ra.multiply(va).add(wa),sa.multiply(va).add(wa),ta.multiply(va).add(wa),ua.addColors(sa,ta).multiplyScalar(.5),P=l(ra,sa,ta,ua),k(H,I,J,K,L,M,0,0,1,0,0,1,P)):(qa.copy(Da),c(p.centroidModel,p.normalModel,qa),qa.multiply(va).add(wa),q.wireframe===!0?h(qa,q.wireframeLinewidth,q.wireframeLinecap,q.wireframeLinejoin):i(qa));else if(q instanceof THREE.MeshBasicMaterial||q instanceof THREE.MeshLambertMaterial||q instanceof THREE.MeshPhongMaterial)null!==q.map?q.map.mapping instanceof THREE.UVMapping&&(Q=p.uvs[0],j(H,I,J,K,L,M,Q[e].x,Q[e].y,Q[f].x,Q[f].y,Q[m].x,Q[m].y,q.map)):null!==q.envMap?q.envMap.mapping instanceof THREE.SphericalReflectionMapping&&(Ga.copy(p.vertexNormalsModelView[e]),R=.5*Ga.x+.5,S=.5*Ga.y+.5,Ga.copy(p.vertexNormalsModelView[f]),T=.5*Ga.x+.5,U=.5*Ga.y+.5,Ga.copy(p.vertexNormalsModelView[m]),V=.5*Ga.x+.5,W=.5*Ga.y+.5,j(H,I,J,K,L,M,R,S,T,U,V,W,q.envMap)):(qa.copy(q.color),q.vertexColors===THREE.FaceColors&&qa.multiply(p.color),q.wireframe===!0?h(qa,q.wireframeLinewidth,q.wireframeLinecap,q.wireframeLinejoin):i(qa));else if(q instanceof THREE.MeshDepthMaterial)N=D.near,O=D.far,ra.r=ra.g=ra.b=1-v(a.positionScreen.z*a.positionScreen.w,N,O),sa.r=sa.g=sa.b=1-v(b.positionScreen.z*b.positionScreen.w,N,O),ta.r=ta.g=ta.b=1-v(d.positionScreen.z*d.positionScreen.w,N,O),ua.addColors(sa,ta).multiplyScalar(.5),P=l(ra,sa,ta,ua),k(H,I,J,K,L,M,0,0,1,0,0,1,P);else if(q instanceof THREE.MeshNormalMaterial){var r;q.shading==THREE.FlatShading?(r=p.normalModelView,qa.setRGB(r.x,r.y,r.z).multiplyScalar(.5).addScalar(.5),q.wireframe===!0?h(qa,q.wireframeLinewidth,q.wireframeLinecap,q.wireframeLinejoin):i(qa)):q.shading==THREE.SmoothShading&&(r=p.vertexNormalsModelView[e],ra.setRGB(r.x,r.y,r.z).multiplyScalar(.5).addScalar(.5),r=p.vertexNormalsModelView[f],sa.setRGB(r.x,r.y,r.z).multiplyScalar(.5).addScalar(.5),r=p.vertexNormalsModelView[m],ta.setRGB(r.x,r.y,r.z).multiplyScalar(.5).addScalar(.5),ua.addColors(sa,ta).multiplyScalar(.5),P=l(ra,sa,ta,ua),k(H,I,J,K,L,M,0,0,1,0,0,1,P))}}function g(a,b,c,d,e,f){ea.beginPath(),ea.moveTo(a,b),ea.lineTo(c,d),ea.lineTo(e,f),ea.closePath()}function h(a,b,c,d){p(b),q(c),r(d),s(a.getStyle()),ea.stroke(),Ca.expandByScalar(2*b)}function i(a){t(a.getStyle()),ea.fill()}function j(a,b,c,d,e,f,g,h,j,k,l,m,n){if(!(n instanceof THREE.DataTexture||void 0===n.image||0==n.image.width)){if(n.needsUpdate===!0){var o=n.wrapS==THREE.RepeatWrapping,p=n.wrapT==THREE.RepeatWrapping;ya[n.id]=ea.createPattern(n.image,o===!0&&p===!0?"repeat":o===!0&&p===!1?"repeat-x":o===!1&&p===!0?"repeat-y":"no-repeat"),n.needsUpdate=!1}t(void 0===ya[n.id]?"rgba(0,0,0,1)":ya[n.id]);var q,r,s,u,v,w,x,y,z=n.offset.x/n.repeat.x,A=n.offset.y/n.repeat.y,B=n.image.width*n.repeat.x,C=n.image.height*n.repeat.y;if(g=(g+z)*B,h=(1-h+A)*C,j=(j+z)*B,k=(1-k+A)*C,l=(l+z)*B,m=(1-m+A)*C,c-=a,d-=b,e-=a,f-=b,j-=g,k-=h,l-=g,m-=h,x=j*m-l*k,0===x){if(void 0===za[n.id]){var D=document.createElement("canvas");D.width=n.image.width,D.height=n.image.height;var E=D.getContext("2d");E.drawImage(n.image,0,0),za[n.id]=E.getImageData(0,0,n.image.width,n.image.height).data}var F=za[n.id],G=4*(Math.floor(g)+Math.floor(h)*n.image.width);return qa.setRGB(F[G]/255,F[G+1]/255,F[G+2]/255),void i(qa)}y=1/x,q=(m*c-k*e)*y,r=(m*d-k*f)*y,s=(j*e-l*c)*y,u=(j*f-l*d)*y,v=a-q*g-s*h,w=b-r*g-u*h,ea.save(),ea.transform(q,r,s,u,v,w),ea.fill(),ea.restore()}}function k(a,b,c,d,e,f,g,h,i,j,k,l,m){var n,o,p,q,r,s,t,u,v=m.width-1,w=m.height-1;g*=v,h*=w,i*=v,j*=w,k*=v,l*=w,c-=a,d-=b,e-=a,f-=b,i-=g,j-=h,k-=g,l-=h,t=i*l-k*j,u=1/t,n=(l*c-j*e)*u,o=(l*d-j*f)*u,p=(i*e-k*c)*u,q=(i*f-k*d)*u,r=a-n*g-p*h,s=b-o*g-q*h,ea.save(),ea.transform(n,o,p,q,r,s),ea.clip(),ea.drawImage(m,0,0),ea.restore()}function l(a,b,c,d){return $[0]=255*a.r|0,$[1]=255*a.g|0,$[2]=255*a.b|0,$[4]=255*b.r|0,$[5]=255*b.g|0,$[6]=255*b.b|0,$[8]=255*c.r|0,$[9]=255*c.g|0,$[10]=255*c.b|0,$[12]=255*d.r|0,$[13]=255*d.g|0,$[14]=255*d.b|0,Y.putImageData(Z,0,0),aa.drawImage(X,0,0),_}function m(a,b,c){var d,e=b.x-a.x,f=b.y-a.y,g=e*e+f*f;0!==g&&(d=c/Math.sqrt(g),e*=d,f*=d,b.x+=e,b.y+=f,a.x-=e,a.y-=f)}function n(a){ha!==a&&(ea.globalAlpha=a,ha=a)}function o(a){ia!==a&&(a===THREE.NormalBlending?ea.globalCompositeOperation="source-over":a===THREE.AdditiveBlending?ea.globalCompositeOperation="lighter":a===THREE.SubtractiveBlending&&(ea.globalCompositeOperation="darker"),ia=a)}function p(a){la!==a&&(ea.lineWidth=a,la=a)}function q(a){ma!==a&&(ea.lineCap=a,ma=a)}function r(a){na!==a&&(ea.lineJoin=a,na=a)}function s(a){ja!==a&&(ea.strokeStyle=a,ja=a)}function t(a){ka!==a&&(ea.fillStyle=a,ka=a)}function u(a,b){oa===a&&pa===b||(ea.setLineDash([a,b]),oa=a,pa=b)}console.log("THREE.CanvasRenderer",THREE.REVISION);var v=THREE.Math.smoothstep;a=a||{};var w,x,y,z,A,B,C,D,E,F,G,H,I,J,K,L,M,N,O,P,Q,R,S,T,U,V,W,X,Y,Z,$,_,aa,ba=this,ca=new THREE.Projector,da=void 0!==a.canvas?a.canvas:document.createElement("canvas"),ea=da.getContext("2d"),fa=new THREE.Color(0),ga=0,ha=1,ia=0,ja=null,ka=null,la=null,ma=null,na=null,oa=null,pa=0,qa=(new THREE.RenderableVertex,new THREE.RenderableVertex,new THREE.Color),ra=new THREE.Color,sa=new THREE.Color,ta=new THREE.Color,ua=new THREE.Color,va=new THREE.Color,wa=new THREE.Color,xa=new THREE.Color,ya={},za={},Aa=new THREE.Box2,Ba=new THREE.Box2,Ca=new THREE.Box2,Da=new THREE.Color,Ea=new THREE.Color,Fa=new THREE.Color,Ga=new THREE.Vector3,Ha=16;X=document.createElement("canvas"),X.width=X.height=2,Y=X.getContext("2d"),Y.fillStyle="rgba(0,0,0,1)",Y.fillRect(0,0,2,2),Z=Y.getImageData(0,0,2,2),$=Z.data,_=document.createElement("canvas"),_.width=_.height=Ha,aa=_.getContext("2d"),aa.translate(-Ha/2,-Ha/2),aa.scale(Ha,Ha),Ha--,void 0===ea.setLineDash&&(void 0!==ea.mozDash?ea.setLineDash=function(a){ea.mozDash=null!==a[0]?a:null}:ea.setLineDash=function(){}),this.domElement=da,this.devicePixelRatio=void 0!==a.devicePixelRatio?a.devicePixelRatio:void 0!==window.devicePixelRatio?window.devicePixelRatio:1,this.autoClear=!0,this.sortObjects=!0,this.sortElements=!0,this.info={render:{vertices:0,faces:0}},this.supportsVertexTextures=function(){},this.setFaceCulling=function(){},this.setSize=function(a,b,c){z=a*this.devicePixelRatio,A=b*this.devicePixelRatio,B=Math.floor(z/2),C=Math.floor(A/2),da.width=z,da.height=A,1!==this.devicePixelRatio&&c!==!1&&(da.style.width=a+"px",da.style.height=b+"px"),Aa.set(new THREE.Vector2((-B),(-C)),new THREE.Vector2(B,C)),Ba.set(new THREE.Vector2((-B),(-C)),new THREE.Vector2(B,C)),ha=1,ia=0,ja=null,ka=null,la=null,ma=null,na=null},this.setClearColor=function(a,b){fa.set(a),ga=void 0!==b?b:1,Ba.set(new THREE.Vector2((-B),(-C)),new THREE.Vector2(B,C))},this.setClearColorHex=function(a,b){console.warn("DEPRECATED: .setClearColorHex() is being removed. Use .setClearColor() instead."),this.setClearColor(a,b)},this.getMaxAnisotropy=function(){return 0},this.clear=function(){ea.setTransform(1,0,0,-1,B,C),Ba.empty()===!1&&(Ba.intersect(Aa),Ba.expandByScalar(2),ga<1&&ea.clearRect(0|Ba.min.x,0|Ba.min.y,Ba.max.x-Ba.min.x|0,Ba.max.y-Ba.min.y|0),ga>0&&(o(THREE.NormalBlending),n(1),t("rgba("+Math.floor(255*fa.r)+","+Math.floor(255*fa.g)+","+Math.floor(255*fa.b)+","+ga+")"),ea.fillRect(0|Ba.min.x,0|Ba.min.y,Ba.max.x-Ba.min.x|0,Ba.max.y-Ba.min.y|0)),Ba.makeEmpty())},this.render=function(a,c){if(c instanceof THREE.Camera==!1)return void console.error("THREE.CanvasRenderer.render: camera is not an instance of THREE.Camera.");this.autoClear===!0&&this.clear(),ea.setTransform(1,0,0,-1,B,C),ba.info.render.vertices=0,ba.info.render.faces=0,w=ca.projectScene(a,c,this.sortObjects,this.sortElements),x=w.elements,y=w.lights,D=c,b();for(var g=0,h=x.length;g<h;g++){var i=x[g],j=i.material;if(void 0!==j&&j.visible!==!1){if(Ca.makeEmpty(),i instanceof THREE.RenderableParticle)E=i,E.x*=B,E.y*=C,d(E,i,j);else if(i instanceof THREE.RenderableLine)E=i.v1,F=i.v2,E.positionScreen.x*=B,E.positionScreen.y*=C,F.positionScreen.x*=B,F.positionScreen.y*=C,Ca.setFromPoints([E.positionScreen,F.positionScreen]),Aa.isIntersectionBox(Ca)===!0&&e(E,F,i,j);else if(i instanceof THREE.RenderableFace3){if(E=i.v1,F=i.v2,G=i.v3,E.positionScreen.z<-1||E.positionScreen.z>1)continue;if(F.positionScreen.z<-1||F.positionScreen.z>1)continue;if(G.positionScreen.z<-1||G.positionScreen.z>1)continue;E.positionScreen.x*=B,E.positionScreen.y*=C,F.positionScreen.x*=B,F.positionScreen.y*=C,G.positionScreen.x*=B,G.positionScreen.y*=C,j.overdraw>0&&(m(E.positionScreen,F.positionScreen,j.overdraw),m(F.positionScreen,G.positionScreen,j.overdraw),m(G.positionScreen,E.positionScreen,j.overdraw)),Ca.setFromPoints([E.positionScreen,F.positionScreen,G.positionScreen]),Aa.isIntersectionBox(Ca)===!0&&f(E,F,G,0,1,2,i,j)}Ba.union(Ca)}}ea.setTransform(1,0,0,1,0,0)}},THREE.ShaderChunk={fog_pars_fragment:["#ifdef USE_FOG","uniform vec3 fogColor;","#ifdef FOG_EXP2","uniform float fogDensity;","#else","uniform float fogNear;","uniform float fogFar;","#endif","#endif"].join("\n"),fog_fragment:["#ifdef USE_FOG","float depth = gl_FragCoord.z / gl_FragCoord.w;","#ifdef FOG_EXP2","const float LOG2 = 1.442695;","float fogFactor = exp2( - fogDensity * fogDensity * depth * depth * LOG2 );","fogFactor = 1.0 - clamp( fogFactor, 0.0, 1.0 );","#else","float fogFactor = smoothstep( fogNear, fogFar, depth );","#endif","gl_FragColor = mix( gl_FragColor, vec4( fogColor, gl_FragColor.w ), fogFactor );","#endif"].join("\n"),envmap_pars_fragment:["#ifdef USE_ENVMAP","uniform float reflectivity;","uniform samplerCube envMap;","uniform float flipEnvMap;","uniform int combine;","#if defined( USE_BUMPMAP ) || defined( USE_NORMALMAP )","uniform bool useRefract;","uniform float refractionRatio;","#else","varying vec3 vReflect;","#endif","#endif"].join("\n"),envmap_fragment:["#ifdef USE_ENVMAP","vec3 reflectVec;","#if defined( USE_BUMPMAP ) || defined( USE_NORMALMAP )","vec3 cameraToVertex = normalize( vWorldPosition - cameraPosition );","if ( useRefract ) {","reflectVec = refract( cameraToVertex, normal, refractionRatio );","} else { ","reflectVec = reflect( cameraToVertex, normal );","}","#else","reflectVec = vReflect;","#endif","#ifdef DOUBLE_SIDED","float flipNormal = ( -1.0 + 2.0 * float( gl_FrontFacing ) );","vec4 cubeColor = textureCube( envMap, flipNormal * vec3( flipEnvMap * reflectVec.x, reflectVec.yz ) );","#else","vec4 cubeColor = textureCube( envMap, vec3( flipEnvMap * reflectVec.x, reflectVec.yz ) );","#endif","#ifdef GAMMA_INPUT","cubeColor.xyz *= cubeColor.xyz;","#endif","if ( combine == 1 ) {","gl_FragColor.xyz = mix( gl_FragColor.xyz, cubeColor.xyz, specularStrength * reflectivity );","} else if ( combine == 2 ) {","gl_FragColor.xyz += cubeColor.xyz * specularStrength * reflectivity;","} else {","gl_FragColor.xyz = mix( gl_FragColor.xyz, gl_FragColor.xyz * cubeColor.xyz, specularStrength * reflectivity );","}","#endif"].join("\n"),envmap_pars_vertex:["#if defined( USE_ENVMAP ) && ! defined( USE_BUMPMAP ) && ! defined( USE_NORMALMAP )","varying vec3 vReflect;","uniform float refractionRatio;","uniform bool useRefract;","#endif"].join("\n"),worldpos_vertex:["#if defined( USE_ENVMAP ) || defined( PHONG ) || defined( LAMBERT ) || defined ( USE_SHADOWMAP )","#ifdef USE_SKINNING","vec4 worldPosition = modelMatrix * skinned;","#endif","#if defined( USE_MORPHTARGETS ) && ! defined( USE_SKINNING )","vec4 worldPosition = modelMatrix * vec4( morphed, 1.0 );","#endif","#if ! defined( USE_MORPHTARGETS ) && ! defined( USE_SKINNING )","vec4 worldPosition = modelMatrix * vec4( position, 1.0 );","#endif","#endif"].join("\n"),envmap_vertex:["#if defined( USE_ENVMAP ) && ! defined( USE_BUMPMAP ) && ! defined( USE_NORMALMAP )","vec3 worldNormal = mat3( modelMatrix[ 0 ].xyz, modelMatrix[ 1 ].xyz, modelMatrix[ 2 ].xyz ) * objectNormal;","worldNormal = normalize( worldNormal );","vec3 cameraToVertex = normalize( worldPosition.xyz - cameraPosition );","if ( useRefract ) {","vReflect = refract( cameraToVertex, worldNormal, refractionRatio );","} else {","vReflect = reflect( cameraToVertex, worldNormal );","}","#endif"].join("\n"),map_particle_pars_fragment:["#ifdef USE_MAP","uniform sampler2D map;","#endif"].join("\n"),map_particle_fragment:["#ifdef USE_MAP","gl_FragColor = gl_FragColor * texture2D( map, vec2( gl_PointCoord.x, 1.0 - gl_PointCoord.y ) );","#endif"].join("\n"),map_pars_vertex:["#if defined( USE_MAP ) || defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( USE_SPECULARMAP )","varying vec2 vUv;","uniform vec4 offsetRepeat;","#endif"].join("\n"),map_pars_fragment:["#if defined( USE_MAP ) || defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( USE_SPECULARMAP )","varying vec2 vUv;","#endif","#ifdef USE_MAP","uniform sampler2D map;","#endif"].join("\n"),map_vertex:["#if defined( USE_MAP ) || defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( USE_SPECULARMAP )","vUv = uv * offsetRepeat.zw + offsetRepeat.xy;","#endif"].join("\n"),map_fragment:["#ifdef USE_MAP","vec4 texelColor = texture2D( map, vUv );","#ifdef GAMMA_INPUT","texelColor.xyz *= texelColor.xyz;","#endif","gl_FragColor = gl_FragColor * texelColor;","#endif"].join("\n"),lightmap_pars_fragment:["#ifdef USE_LIGHTMAP","varying vec2 vUv2;","uniform sampler2D lightMap;","#endif"].join("\n"),lightmap_pars_vertex:["#ifdef USE_LIGHTMAP","varying vec2 vUv2;","#endif"].join("\n"),lightmap_fragment:["#ifdef USE_LIGHTMAP","gl_FragColor = gl_FragColor * texture2D( lightMap, vUv2 );","#endif"].join("\n"),lightmap_vertex:["#ifdef USE_LIGHTMAP","vUv2 = uv2;","#endif"].join("\n"),bumpmap_pars_fragment:["#ifdef USE_BUMPMAP","uniform sampler2D bumpMap;","uniform float bumpScale;","vec2 dHdxy_fwd() {","vec2 dSTdx = dFdx( vUv );","vec2 dSTdy = dFdy( vUv );","float Hll = bumpScale * texture2D( bumpMap, vUv ).x;","float dBx = bumpScale * texture2D( bumpMap, vUv + dSTdx ).x - Hll;","float dBy = bumpScale * texture2D( bumpMap, vUv + dSTdy ).x - Hll;","return vec2( dBx, dBy );","}","vec3 perturbNormalArb( vec3 surf_pos, vec3 surf_norm, vec2 dHdxy ) {","vec3 vSigmaX = dFdx( surf_pos );","vec3 vSigmaY = dFdy( surf_pos );","vec3 vN = surf_norm;","vec3 R1 = cross( vSigmaY, vN );","vec3 R2 = cross( vN, vSigmaX );","float fDet = dot( vSigmaX, R1 );","vec3 vGrad = sign( fDet ) * ( dHdxy.x * R1 + dHdxy.y * R2 );","return normalize( abs( fDet ) * surf_norm - vGrad );","}","#endif"].join("\n"),normalmap_pars_fragment:["#ifdef USE_NORMALMAP","uniform sampler2D normalMap;","uniform vec2 normalScale;","vec3 perturbNormal2Arb( vec3 eye_pos, vec3 surf_norm ) {","vec3 q0 = dFdx( eye_pos.xyz );","vec3 q1 = dFdy( eye_pos.xyz );","vec2 st0 = dFdx( vUv.st );","vec2 st1 = dFdy( vUv.st );","vec3 S = normalize(  q0 * st1.t - q1 * st0.t );","vec3 T = normalize( -q0 * st1.s + q1 * st0.s );","vec3 N = normalize( surf_norm );","vec3 mapN = texture2D( normalMap, vUv ).xyz * 2.0 - 1.0;","mapN.xy = normalScale * mapN.xy;","mat3 tsn = mat3( S, T, N );","return normalize( tsn * mapN );","}","#endif"].join("\n"),specularmap_pars_fragment:["#ifdef USE_SPECULARMAP","uniform sampler2D specularMap;","#endif"].join("\n"),specularmap_fragment:["float specularStrength;","#ifdef USE_SPECULARMAP","vec4 texelSpecular = texture2D( specularMap, vUv );","specularStrength = texelSpecular.r;","#else","specularStrength = 1.0;","#endif"].join("\n"),lights_lambert_pars_vertex:["uniform vec3 ambient;","uniform vec3 diffuse;","uniform vec3 emissive;","uniform vec3 ambientLightColor;","#if MAX_DIR_LIGHTS > 0","uniform vec3 directionalLightColor[ MAX_DIR_LIGHTS ];","uniform vec3 directionalLightDirection[ MAX_DIR_LIGHTS ];","#endif","#if MAX_HEMI_LIGHTS > 0","uniform vec3 hemisphereLightSkyColor[ MAX_HEMI_LIGHTS ];","uniform vec3 hemisphereLightGroundColor[ MAX_HEMI_LIGHTS ];","uniform vec3 hemisphereLightDirection[ MAX_HEMI_LIGHTS ];","#endif","#if MAX_POINT_LIGHTS > 0","uniform vec3 pointLightColor[ MAX_POINT_LIGHTS ];","uniform vec3 pointLightPosition[ MAX_POINT_LIGHTS ];","uniform float pointLightDistance[ MAX_POINT_LIGHTS ];","#endif","#if MAX_SPOT_LIGHTS > 0","uniform vec3 spotLightColor[ MAX_SPOT_LIGHTS ];","uniform vec3 spotLightPosition[ MAX_SPOT_LIGHTS ];","uniform vec3 spotLightDirection[ MAX_SPOT_LIGHTS ];","uniform float spotLightDistance[ MAX_SPOT_LIGHTS ];","uniform float spotLightAngleCos[ MAX_SPOT_LIGHTS ];","uniform float spotLightExponent[ MAX_SPOT_LIGHTS ];","#endif","#ifdef WRAP_AROUND","uniform vec3 wrapRGB;","#endif"].join("\n"),lights_lambert_vertex:["vLightFront = vec3( 0.0 );","#ifdef DOUBLE_SIDED","vLightBack = vec3( 0.0 );","#endif","transformedNormal = normalize( transformedNormal );","#if MAX_DIR_LIGHTS > 0","for( int i = 0; i < MAX_DIR_LIGHTS; i ++ ) {","vec4 lDirection = viewMatrix * vec4( directionalLightDirection[ i ], 0.0 );","vec3 dirVector = normalize( lDirection.xyz );","float dotProduct = dot( transformedNormal, dirVector );","vec3 directionalLightWeighting = vec3( max( dotProduct, 0.0 ) );","#ifdef DOUBLE_SIDED","vec3 directionalLightWeightingBack = vec3( max( -dotProduct, 0.0 ) );","#ifdef WRAP_AROUND","vec3 directionalLightWeightingHalfBack = vec3( max( -0.5 * dotProduct + 0.5, 0.0 ) );","#endif","#endif","#ifdef WRAP_AROUND","vec3 directionalLightWeightingHalf = vec3( max( 0.5 * dotProduct + 0.5, 0.0 ) );","directionalLightWeighting = mix( directionalLightWeighting, directionalLightWeightingHalf, wrapRGB );","#ifdef DOUBLE_SIDED","directionalLightWeightingBack = mix( directionalLightWeightingBack, directionalLightWeightingHalfBack, wrapRGB );","#endif","#endif","vLightFront += directionalLightColor[ i ] * directionalLightWeighting;","#ifdef DOUBLE_SIDED","vLightBack += directionalLightColor[ i ] * directionalLightWeightingBack;","#endif","}","#endif","#if MAX_POINT_LIGHTS > 0","for( int i = 0; i < MAX_POINT_LIGHTS; i ++ ) {","vec4 lPosition = viewMatrix * vec4( pointLightPosition[ i ], 1.0 );","vec3 lVector = lPosition.xyz - mvPosition.xyz;","float lDistance = 1.0;","if ( pointLightDistance[ i ] > 0.0 )","lDistance = 1.0 - min( ( length( lVector ) / pointLightDistance[ i ] ), 1.0 );","lVector = normalize( lVector );","float dotProduct = dot( transformedNormal, lVector );","vec3 pointLightWeighting = vec3( max( dotProduct, 0.0 ) );","#ifdef DOUBLE_SIDED","vec3 pointLightWeightingBack = vec3( max( -dotProduct, 0.0 ) );","#ifdef WRAP_AROUND","vec3 pointLightWeightingHalfBack = vec3( max( -0.5 * dotProduct + 0.5, 0.0 ) );","#endif","#endif","#ifdef WRAP_AROUND","vec3 pointLightWeightingHalf = vec3( max( 0.5 * dotProduct + 0.5, 0.0 ) );","pointLightWeighting = mix( pointLightWeighting, pointLightWeightingHalf, wrapRGB );","#ifdef DOUBLE_SIDED","pointLightWeightingBack = mix( pointLightWeightingBack, pointLightWeightingHalfBack, wrapRGB );","#endif","#endif","vLightFront += pointLightColor[ i ] * pointLightWeighting * lDistance;","#ifdef DOUBLE_SIDED","vLightBack += pointLightColor[ i ] * pointLightWeightingBack * lDistance;","#endif","}","#endif","#if MAX_SPOT_LIGHTS > 0","for( int i = 0; i < MAX_SPOT_LIGHTS; i ++ ) {","vec4 lPosition = viewMatrix * vec4( spotLightPosition[ i ], 1.0 );","vec3 lVector = lPosition.xyz - mvPosition.xyz;","float spotEffect = dot( spotLightDirection[ i ], normalize( spotLightPosition[ i ] - worldPosition.xyz ) );","if ( spotEffect > spotLightAngleCos[ i ] ) {","spotEffect = max( pow( spotEffect, spotLightExponent[ i ] ), 0.0 );","float lDistance = 1.0;","if ( spotLightDistance[ i ] > 0.0 )","lDistance = 1.0 - min( ( length( lVector ) / spotLightDistance[ i ] ), 1.0 );","lVector = normalize( lVector );","float dotProduct = dot( transformedNormal, lVector );","vec3 spotLightWeighting = vec3( max( dotProduct, 0.0 ) );","#ifdef DOUBLE_SIDED","vec3 spotLightWeightingBack = vec3( max( -dotProduct, 0.0 ) );","#ifdef WRAP_AROUND","vec3 spotLightWeightingHalfBack = vec3( max( -0.5 * dotProduct + 0.5, 0.0 ) );","#endif","#endif","#ifdef WRAP_AROUND","vec3 spotLightWeightingHalf = vec3( max( 0.5 * dotProduct + 0.5, 0.0 ) );","spotLightWeighting = mix( spotLightWeighting, spotLightWeightingHalf, wrapRGB );","#ifdef DOUBLE_SIDED","spotLightWeightingBack = mix( spotLightWeightingBack, spotLightWeightingHalfBack, wrapRGB );","#endif","#endif","vLightFront += spotLightColor[ i ] * spotLightWeighting * lDistance * spotEffect;","#ifdef DOUBLE_SIDED","vLightBack += spotLightColor[ i ] * spotLightWeightingBack * lDistance * spotEffect;","#endif","}","}","#endif","#if MAX_HEMI_LIGHTS > 0","for( int i = 0; i < MAX_HEMI_LIGHTS; i ++ ) {","vec4 lDirection = viewMatrix * vec4( hemisphereLightDirection[ i ], 0.0 );","vec3 lVector = normalize( lDirection.xyz );","float dotProduct = dot( transformedNormal, lVector );","float hemiDiffuseWeight = 0.5 * dotProduct + 0.5;","float hemiDiffuseWeightBack = -0.5 * dotProduct + 0.5;","vLightFront += mix( hemisphereLightGroundColor[ i ], hemisphereLightSkyColor[ i ], hemiDiffuseWeight );","#ifdef DOUBLE_SIDED","vLightBack += mix( hemisphereLightGroundColor[ i ], hemisphereLightSkyColor[ i ], hemiDiffuseWeightBack );","#endif","}","#endif","vLightFront = vLightFront * diffuse + ambient * ambientLightColor + emissive;","#ifdef DOUBLE_SIDED","vLightBack = vLightBack * diffuse + ambient * ambientLightColor + emissive;","#endif"].join("\n"),lights_phong_pars_vertex:["#ifndef PHONG_PER_PIXEL","#if MAX_POINT_LIGHTS > 0","uniform vec3 pointLightPosition[ MAX_POINT_LIGHTS ];","uniform float pointLightDistance[ MAX_POINT_LIGHTS ];","varying vec4 vPointLight[ MAX_POINT_LIGHTS ];","#endif","#if MAX_SPOT_LIGHTS > 0","uniform vec3 spotLightPosition[ MAX_SPOT_LIGHTS ];","uniform float spotLightDistance[ MAX_SPOT_LIGHTS ];","varying vec4 vSpotLight[ MAX_SPOT_LIGHTS ];","#endif","#endif","#if MAX_SPOT_LIGHTS > 0 || defined( USE_BUMPMAP )","varying vec3 vWorldPosition;","#endif"].join("\n"),lights_phong_vertex:["#ifndef PHONG_PER_PIXEL","#if MAX_POINT_LIGHTS > 0","for( int i = 0; i < MAX_POINT_LIGHTS; i ++ ) {","vec4 lPosition = viewMatrix * vec4( pointLightPosition[ i ], 1.0 );","vec3 lVector = lPosition.xyz - mvPosition.xyz;","float lDistance = 1.0;","if ( pointLightDistance[ i ] > 0.0 )","lDistance = 1.0 - min( ( length( lVector ) / pointLightDistance[ i ] ), 1.0 );","vPointLight[ i ] = vec4( lVector, lDistance );","}","#endif","#if MAX_SPOT_LIGHTS > 0","for( int i = 0; i < MAX_SPOT_LIGHTS; i ++ ) {","vec4 lPosition = viewMatrix * vec4( spotLightPosition[ i ], 1.0 );","vec3 lVector = lPosition.xyz - mvPosition.xyz;","float lDistance = 1.0;","if ( spotLightDistance[ i ] > 0.0 )","lDistance = 1.0 - min( ( length( lVector ) / spotLightDistance[ i ] ), 1.0 );","vSpotLight[ i ] = vec4( lVector, lDistance );","}","#endif","#endif","#if MAX_SPOT_LIGHTS > 0 || defined( USE_BUMPMAP )","vWorldPosition = worldPosition.xyz;","#endif"].join("\n"),lights_phong_pars_fragment:["uniform vec3 ambientLightColor;","#if MAX_DIR_LIGHTS > 0","uniform vec3 directionalLightColor[ MAX_DIR_LIGHTS ];","uniform vec3 directionalLightDirection[ MAX_DIR_LIGHTS ];","#endif","#if MAX_HEMI_LIGHTS > 0","uniform vec3 hemisphereLightSkyColor[ MAX_HEMI_LIGHTS ];","uniform vec3 hemisphereLightGroundColor[ MAX_HEMI_LIGHTS ];","uniform vec3 hemisphereLightDirection[ MAX_HEMI_LIGHTS ];","#endif","#if MAX_POINT_LIGHTS > 0","uniform vec3 pointLightColor[ MAX_POINT_LIGHTS ];","#ifdef PHONG_PER_PIXEL","uniform vec3 pointLightPosition[ MAX_POINT_LIGHTS ];","uniform float pointLightDistance[ MAX_POINT_LIGHTS ];","#else","varying vec4 vPointLight[ MAX_POINT_LIGHTS ];","#endif","#endif","#if MAX_SPOT_LIGHTS > 0","uniform vec3 spotLightColor[ MAX_SPOT_LIGHTS ];","uniform vec3 spotLightPosition[ MAX_SPOT_LIGHTS ];","uniform vec3 spotLightDirection[ MAX_SPOT_LIGHTS ];","uniform float spotLightAngleCos[ MAX_SPOT_LIGHTS ];","uniform float spotLightExponent[ MAX_SPOT_LIGHTS ];","#ifdef PHONG_PER_PIXEL","uniform float spotLightDistance[ MAX_SPOT_LIGHTS ];","#else","varying vec4 vSpotLight[ MAX_SPOT_LIGHTS ];","#endif","#endif","#if MAX_SPOT_LIGHTS > 0 || defined( USE_BUMPMAP )","varying vec3 vWorldPosition;","#endif","#ifdef WRAP_AROUND","uniform vec3 wrapRGB;","#endif","varying vec3 vViewPosition;","varying vec3 vNormal;"].join("\n"),lights_phong_fragment:["vec3 normal = normalize( vNormal );","vec3 viewPosition = normalize( vViewPosition );","#ifdef DOUBLE_SIDED","normal = normal * ( -1.0 + 2.0 * float( gl_FrontFacing ) );","#endif","#ifdef USE_NORMALMAP","normal = perturbNormal2Arb( -vViewPosition, normal );","#elif defined( USE_BUMPMAP )","normal = perturbNormalArb( -vViewPosition, normal, dHdxy_fwd() );","#endif","#if MAX_POINT_LIGHTS > 0","vec3 pointDiffuse  = vec3( 0.0 );","vec3 pointSpecular = vec3( 0.0 );","for ( int i = 0; i < MAX_POINT_LIGHTS; i ++ ) {","#ifdef PHONG_PER_PIXEL","vec4 lPosition = viewMatrix * vec4( pointLightPosition[ i ], 1.0 );","vec3 lVector = lPosition.xyz + vViewPosition.xyz;","float lDistance = 1.0;","if ( pointLightDistance[ i ] > 0.0 )","lDistance = 1.0 - min( ( length( lVector ) / pointLightDistance[ i ] ), 1.0 );","lVector = normalize( lVector );","#else","vec3 lVector = normalize( vPointLight[ i ].xyz );","float lDistance = vPointLight[ i ].w;","#endif","float dotProduct = dot( normal, lVector );","#ifdef WRAP_AROUND","float pointDiffuseWeightFull = max( dotProduct, 0.0 );","float pointDiffuseWeightHalf = max( 0.5 * dotProduct + 0.5, 0.0 );","vec3 pointDiffuseWeight = mix( vec3 ( pointDiffuseWeightFull ), vec3( pointDiffuseWeightHalf ), wrapRGB );","#else","float pointDiffuseWeight = max( dotProduct, 0.0 );","#endif","pointDiffuse  += diffuse * pointLightColor[ i ] * pointDiffuseWeight * lDistance;","vec3 pointHalfVector = normalize( lVector + viewPosition );","float pointDotNormalHalf = max( dot( normal, pointHalfVector ), 0.0 );","float pointSpecularWeight = specularStrength * max( pow( pointDotNormalHalf, shininess ), 0.0 );","#ifdef PHYSICALLY_BASED_SHADING","float specularNormalization = ( shininess + 2.0001 ) / 8.0;","vec3 schlick = specular + vec3( 1.0 - specular ) * pow( 1.0 - dot( lVector, pointHalfVector ), 5.0 );","pointSpecular += schlick * pointLightColor[ i ] * pointSpecularWeight * pointDiffuseWeight * lDistance * specularNormalization;","#else","pointSpecular += specular * pointLightColor[ i ] * pointSpecularWeight * pointDiffuseWeight * lDistance;","#endif","}","#endif","#if MAX_SPOT_LIGHTS > 0","vec3 spotDiffuse  = vec3( 0.0 );","vec3 spotSpecular = vec3( 0.0 );","for ( int i = 0; i < MAX_SPOT_LIGHTS; i ++ ) {","#ifdef PHONG_PER_PIXEL","vec4 lPosition = viewMatrix * vec4( spotLightPosition[ i ], 1.0 );","vec3 lVector = lPosition.xyz + vViewPosition.xyz;","float lDistance = 1.0;","if ( spotLightDistance[ i ] > 0.0 )","lDistance = 1.0 - min( ( length( lVector ) / spotLightDistance[ i ] ), 1.0 );","lVector = normalize( lVector );","#else","vec3 lVector = normalize( vSpotLight[ i ].xyz );","float lDistance = vSpotLight[ i ].w;","#endif","float spotEffect = dot( spotLightDirection[ i ], normalize( spotLightPosition[ i ] - vWorldPosition ) );","if ( spotEffect > spotLightAngleCos[ i ] ) {","spotEffect = max( pow( spotEffect, spotLightExponent[ i ] ), 0.0 );","float dotProduct = dot( normal, lVector );","#ifdef WRAP_AROUND","float spotDiffuseWeightFull = max( dotProduct, 0.0 );","float spotDiffuseWeightHalf = max( 0.5 * dotProduct + 0.5, 0.0 );","vec3 spotDiffuseWeight = mix( vec3 ( spotDiffuseWeightFull ), vec3( spotDiffuseWeightHalf ), wrapRGB );","#else","float spotDiffuseWeight = max( dotProduct, 0.0 );","#endif","spotDiffuse += diffuse * spotLightColor[ i ] * spotDiffuseWeight * lDistance * spotEffect;","vec3 spotHalfVector = normalize( lVector + viewPosition );","float spotDotNormalHalf = max( dot( normal, spotHalfVector ), 0.0 );","float spotSpecularWeight = specularStrength * max( pow( spotDotNormalHalf, shininess ), 0.0 );","#ifdef PHYSICALLY_BASED_SHADING","float specularNormalization = ( shininess + 2.0001 ) / 8.0;","vec3 schlick = specular + vec3( 1.0 - specular ) * pow( 1.0 - dot( lVector, spotHalfVector ), 5.0 );","spotSpecular += schlick * spotLightColor[ i ] * spotSpecularWeight * spotDiffuseWeight * lDistance * specularNormalization * spotEffect;","#else","spotSpecular += specular * spotLightColor[ i ] * spotSpecularWeight * spotDiffuseWeight * lDistance * spotEffect;","#endif","}","}","#endif","#if MAX_DIR_LIGHTS > 0","vec3 dirDiffuse  = vec3( 0.0 );","vec3 dirSpecular = vec3( 0.0 );","for( int i = 0; i < MAX_DIR_LIGHTS; i ++ ) {","vec4 lDirection = viewMatrix * vec4( directionalLightDirection[ i ], 0.0 );","vec3 dirVector = normalize( lDirection.xyz );","float dotProduct = dot( normal, dirVector );","#ifdef WRAP_AROUND","float dirDiffuseWeightFull = max( dotProduct, 0.0 );","float dirDiffuseWeightHalf = max( 0.5 * dotProduct + 0.5, 0.0 );","vec3 dirDiffuseWeight = mix( vec3( dirDiffuseWeightFull ), vec3( dirDiffuseWeightHalf ), wrapRGB );","#else","float dirDiffuseWeight = max( dotProduct, 0.0 );","#endif","dirDiffuse  += diffuse * directionalLightColor[ i ] * dirDiffuseWeight;","vec3 dirHalfVector = normalize( dirVector + viewPosition );","float dirDotNormalHalf = max( dot( normal, dirHalfVector ), 0.0 );","float dirSpecularWeight = specularStrength * max( pow( dirDotNormalHalf, shininess ), 0.0 );","#ifdef PHYSICALLY_BASED_SHADING","float specularNormalization = ( shininess + 2.0001 ) / 8.0;","vec3 schlick = specular + vec3( 1.0 - specular ) * pow( 1.0 - dot( dirVector, dirHalfVector ), 5.0 );","dirSpecular += schlick * directionalLightColor[ i ] * dirSpecularWeight * dirDiffuseWeight * specularNormalization;","#else","dirSpecular += specular * directionalLightColor[ i ] * dirSpecularWeight * dirDiffuseWeight;","#endif","}","#endif","#if MAX_HEMI_LIGHTS > 0","vec3 hemiDiffuse  = vec3( 0.0 );","vec3 hemiSpecular = vec3( 0.0 );","for( int i = 0; i < MAX_HEMI_LIGHTS; i ++ ) {","vec4 lDirection = viewMatrix * vec4( hemisphereLightDirection[ i ], 0.0 );","vec3 lVector = normalize( lDirection.xyz );","float dotProduct = dot( normal, lVector );","float hemiDiffuseWeight = 0.5 * dotProduct + 0.5;","vec3 hemiColor = mix( hemisphereLightGroundColor[ i ], hemisphereLightSkyColor[ i ], hemiDiffuseWeight );","hemiDiffuse += diffuse * hemiColor;","vec3 hemiHalfVectorSky = normalize( lVector + viewPosition );","float hemiDotNormalHalfSky = 0.5 * dot( normal, hemiHalfVectorSky ) + 0.5;","float hemiSpecularWeightSky = specularStrength * max( pow( hemiDotNormalHalfSky, shininess ), 0.0 );","vec3 lVectorGround = -lVector;","vec3 hemiHalfVectorGround = normalize( lVectorGround + viewPosition );","float hemiDotNormalHalfGround = 0.5 * dot( normal, hemiHalfVectorGround ) + 0.5;","float hemiSpecularWeightGround = specularStrength * max( pow( hemiDotNormalHalfGround, shininess ), 0.0 );","#ifdef PHYSICALLY_BASED_SHADING","float dotProductGround = dot( normal, lVectorGround );","float specularNormalization = ( shininess + 2.0001 ) / 8.0;","vec3 schlickSky = specular + vec3( 1.0 - specular ) * pow( 1.0 - dot( lVector, hemiHalfVectorSky ), 5.0 );","vec3 schlickGround = specular + vec3( 1.0 - specular ) * pow( 1.0 - dot( lVectorGround, hemiHalfVectorGround ), 5.0 );","hemiSpecular += hemiColor * specularNormalization * ( schlickSky * hemiSpecularWeightSky * max( dotProduct, 0.0 ) + schlickGround * hemiSpecularWeightGround * max( dotProductGround, 0.0 ) );","#else","hemiSpecular += specular * hemiColor * ( hemiSpecularWeightSky + hemiSpecularWeightGround ) * hemiDiffuseWeight;","#endif","}","#endif","vec3 totalDiffuse = vec3( 0.0 );","vec3 totalSpecular = vec3( 0.0 );","#if MAX_DIR_LIGHTS > 0","totalDiffuse += dirDiffuse;","totalSpecular += dirSpecular;","#endif","#if MAX_HEMI_LIGHTS > 0","totalDiffuse += hemiDiffuse;","totalSpecular += hemiSpecular;","#endif","#if MAX_POINT_LIGHTS > 0","totalDiffuse += pointDiffuse;","totalSpecular += pointSpecular;","#endif","#if MAX_SPOT_LIGHTS > 0","totalDiffuse += spotDiffuse;","totalSpecular += spotSpecular;","#endif","#ifdef METAL","gl_FragColor.xyz = gl_FragColor.xyz * ( emissive + totalDiffuse + ambientLightColor * ambient + totalSpecular );","#else","gl_FragColor.xyz = gl_FragColor.xyz * ( emissive + totalDiffuse + ambientLightColor * ambient ) + totalSpecular;","#endif"].join("\n"),
color_pars_fragment:["#ifdef USE_COLOR","varying vec3 vColor;","#endif"].join("\n"),color_fragment:["#ifdef USE_COLOR","gl_FragColor = gl_FragColor * vec4( vColor, opacity );","#endif"].join("\n"),color_pars_vertex:["#ifdef USE_COLOR","varying vec3 vColor;","#endif"].join("\n"),color_vertex:["#ifdef USE_COLOR","#ifdef GAMMA_INPUT","vColor = color * color;","#else","vColor = color;","#endif","#endif"].join("\n"),skinning_pars_vertex:["#ifdef USE_SKINNING","#ifdef BONE_TEXTURE","uniform sampler2D boneTexture;","mat4 getBoneMatrix( const in float i ) {","float j = i * 4.0;","float x = mod( j, N_BONE_PIXEL_X );","float y = floor( j / N_BONE_PIXEL_X );","const float dx = 1.0 / N_BONE_PIXEL_X;","const float dy = 1.0 / N_BONE_PIXEL_Y;","y = dy * ( y + 0.5 );","vec4 v1 = texture2D( boneTexture, vec2( dx * ( x + 0.5 ), y ) );","vec4 v2 = texture2D( boneTexture, vec2( dx * ( x + 1.5 ), y ) );","vec4 v3 = texture2D( boneTexture, vec2( dx * ( x + 2.5 ), y ) );","vec4 v4 = texture2D( boneTexture, vec2( dx * ( x + 3.5 ), y ) );","mat4 bone = mat4( v1, v2, v3, v4 );","return bone;","}","#else","uniform mat4 boneGlobalMatrices[ MAX_BONES ];","mat4 getBoneMatrix( const in float i ) {","mat4 bone = boneGlobalMatrices[ int(i) ];","return bone;","}","#endif","#endif"].join("\n"),skinbase_vertex:["#ifdef USE_SKINNING","mat4 boneMatX = getBoneMatrix( skinIndex.x );","mat4 boneMatY = getBoneMatrix( skinIndex.y );","#endif"].join("\n"),skinning_vertex:["#ifdef USE_SKINNING","#ifdef USE_MORPHTARGETS","vec4 skinVertex = vec4( morphed, 1.0 );","#else","vec4 skinVertex = vec4( position, 1.0 );","#endif","vec4 skinned  = boneMatX * skinVertex * skinWeight.x;","skinned \t  += boneMatY * skinVertex * skinWeight.y;","#endif"].join("\n"),morphtarget_pars_vertex:["#ifdef USE_MORPHTARGETS","#ifndef USE_MORPHNORMALS","uniform float morphTargetInfluences[ 8 ];","#else","uniform float morphTargetInfluences[ 4 ];","#endif","#endif"].join("\n"),morphtarget_vertex:["#ifdef USE_MORPHTARGETS","vec3 morphed = vec3( 0.0 );","morphed += ( morphTarget0 - position ) * morphTargetInfluences[ 0 ];","morphed += ( morphTarget1 - position ) * morphTargetInfluences[ 1 ];","morphed += ( morphTarget2 - position ) * morphTargetInfluences[ 2 ];","morphed += ( morphTarget3 - position ) * morphTargetInfluences[ 3 ];","#ifndef USE_MORPHNORMALS","morphed += ( morphTarget4 - position ) * morphTargetInfluences[ 4 ];","morphed += ( morphTarget5 - position ) * morphTargetInfluences[ 5 ];","morphed += ( morphTarget6 - position ) * morphTargetInfluences[ 6 ];","morphed += ( morphTarget7 - position ) * morphTargetInfluences[ 7 ];","#endif","morphed += position;","#endif"].join("\n"),default_vertex:["vec4 mvPosition;","#ifdef USE_SKINNING","mvPosition = modelViewMatrix * skinned;","#endif","#if !defined( USE_SKINNING ) && defined( USE_MORPHTARGETS )","mvPosition = modelViewMatrix * vec4( morphed, 1.0 );","#endif","#if !defined( USE_SKINNING ) && ! defined( USE_MORPHTARGETS )","mvPosition = modelViewMatrix * vec4( position, 1.0 );","#endif","gl_Position = projectionMatrix * mvPosition;"].join("\n"),morphnormal_vertex:["#ifdef USE_MORPHNORMALS","vec3 morphedNormal = vec3( 0.0 );","morphedNormal +=  ( morphNormal0 - normal ) * morphTargetInfluences[ 0 ];","morphedNormal +=  ( morphNormal1 - normal ) * morphTargetInfluences[ 1 ];","morphedNormal +=  ( morphNormal2 - normal ) * morphTargetInfluences[ 2 ];","morphedNormal +=  ( morphNormal3 - normal ) * morphTargetInfluences[ 3 ];","morphedNormal += normal;","#endif"].join("\n"),skinnormal_vertex:["#ifdef USE_SKINNING","mat4 skinMatrix = skinWeight.x * boneMatX;","skinMatrix \t+= skinWeight.y * boneMatY;","#ifdef USE_MORPHNORMALS","vec4 skinnedNormal = skinMatrix * vec4( morphedNormal, 0.0 );","#else","vec4 skinnedNormal = skinMatrix * vec4( normal, 0.0 );","#endif","#endif"].join("\n"),defaultnormal_vertex:["vec3 objectNormal;","#ifdef USE_SKINNING","objectNormal = skinnedNormal.xyz;","#endif","#if !defined( USE_SKINNING ) && defined( USE_MORPHNORMALS )","objectNormal = morphedNormal;","#endif","#if !defined( USE_SKINNING ) && ! defined( USE_MORPHNORMALS )","objectNormal = normal;","#endif","#ifdef FLIP_SIDED","objectNormal = -objectNormal;","#endif","vec3 transformedNormal = normalMatrix * objectNormal;"].join("\n"),shadowmap_pars_fragment:["#ifdef USE_SHADOWMAP","uniform sampler2D shadowMap[ MAX_SHADOWS ];","uniform vec2 shadowMapSize[ MAX_SHADOWS ];","uniform float shadowDarkness[ MAX_SHADOWS ];","uniform float shadowBias[ MAX_SHADOWS ];","varying vec4 vShadowCoord[ MAX_SHADOWS ];","float unpackDepth( const in vec4 rgba_depth ) {","const vec4 bit_shift = vec4( 1.0 / ( 256.0 * 256.0 * 256.0 ), 1.0 / ( 256.0 * 256.0 ), 1.0 / 256.0, 1.0 );","float depth = dot( rgba_depth, bit_shift );","return depth;","}","#endif"].join("\n"),shadowmap_fragment:["#ifdef USE_SHADOWMAP","#ifdef SHADOWMAP_DEBUG","vec3 frustumColors[3];","frustumColors[0] = vec3( 1.0, 0.5, 0.0 );","frustumColors[1] = vec3( 0.0, 1.0, 0.8 );","frustumColors[2] = vec3( 0.0, 0.5, 1.0 );","#endif","#ifdef SHADOWMAP_CASCADE","int inFrustumCount = 0;","#endif","float fDepth;","vec3 shadowColor = vec3( 1.0 );","for( int i = 0; i < MAX_SHADOWS; i ++ ) {","vec3 shadowCoord = vShadowCoord[ i ].xyz / vShadowCoord[ i ].w;","bvec4 inFrustumVec = bvec4 ( shadowCoord.x >= 0.0, shadowCoord.x <= 1.0, shadowCoord.y >= 0.0, shadowCoord.y <= 1.0 );","bool inFrustum = all( inFrustumVec );","#ifdef SHADOWMAP_CASCADE","inFrustumCount += int( inFrustum );","bvec3 frustumTestVec = bvec3( inFrustum, inFrustumCount == 1, shadowCoord.z <= 1.0 );","#else","bvec2 frustumTestVec = bvec2( inFrustum, shadowCoord.z <= 1.0 );","#endif","bool frustumTest = all( frustumTestVec );","if ( frustumTest ) {","shadowCoord.z += shadowBias[ i ];","#if defined( SHADOWMAP_TYPE_PCF )","float shadow = 0.0;","const float shadowDelta = 1.0 / 9.0;","float xPixelOffset = 1.0 / shadowMapSize[ i ].x;","float yPixelOffset = 1.0 / shadowMapSize[ i ].y;","float dx0 = -1.25 * xPixelOffset;","float dy0 = -1.25 * yPixelOffset;","float dx1 = 1.25 * xPixelOffset;","float dy1 = 1.25 * yPixelOffset;","fDepth = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy + vec2( dx0, dy0 ) ) );","if ( fDepth < shadowCoord.z ) shadow += shadowDelta;","fDepth = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy + vec2( 0.0, dy0 ) ) );","if ( fDepth < shadowCoord.z ) shadow += shadowDelta;","fDepth = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy + vec2( dx1, dy0 ) ) );","if ( fDepth < shadowCoord.z ) shadow += shadowDelta;","fDepth = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy + vec2( dx0, 0.0 ) ) );","if ( fDepth < shadowCoord.z ) shadow += shadowDelta;","fDepth = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy ) );","if ( fDepth < shadowCoord.z ) shadow += shadowDelta;","fDepth = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy + vec2( dx1, 0.0 ) ) );","if ( fDepth < shadowCoord.z ) shadow += shadowDelta;","fDepth = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy + vec2( dx0, dy1 ) ) );","if ( fDepth < shadowCoord.z ) shadow += shadowDelta;","fDepth = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy + vec2( 0.0, dy1 ) ) );","if ( fDepth < shadowCoord.z ) shadow += shadowDelta;","fDepth = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy + vec2( dx1, dy1 ) ) );","if ( fDepth < shadowCoord.z ) shadow += shadowDelta;","shadowColor = shadowColor * vec3( ( 1.0 - shadowDarkness[ i ] * shadow ) );","#elif defined( SHADOWMAP_TYPE_PCF_SOFT )","float shadow = 0.0;","float xPixelOffset = 1.0 / shadowMapSize[ i ].x;","float yPixelOffset = 1.0 / shadowMapSize[ i ].y;","float dx0 = -1.0 * xPixelOffset;","float dy0 = -1.0 * yPixelOffset;","float dx1 = 1.0 * xPixelOffset;","float dy1 = 1.0 * yPixelOffset;","mat3 shadowKernel;","mat3 depthKernel;","depthKernel[0][0] = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy + vec2( dx0, dy0 ) ) );","depthKernel[0][1] = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy + vec2( dx0, 0.0 ) ) );","depthKernel[0][2] = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy + vec2( dx0, dy1 ) ) );","depthKernel[1][0] = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy + vec2( 0.0, dy0 ) ) );","depthKernel[1][1] = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy ) );","depthKernel[1][2] = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy + vec2( 0.0, dy1 ) ) );","depthKernel[2][0] = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy + vec2( dx1, dy0 ) ) );","depthKernel[2][1] = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy + vec2( dx1, 0.0 ) ) );","depthKernel[2][2] = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy + vec2( dx1, dy1 ) ) );","vec3 shadowZ = vec3( shadowCoord.z );","shadowKernel[0] = vec3(lessThan(depthKernel[0], shadowZ ));","shadowKernel[0] *= vec3(0.25);","shadowKernel[1] = vec3(lessThan(depthKernel[1], shadowZ ));","shadowKernel[1] *= vec3(0.25);","shadowKernel[2] = vec3(lessThan(depthKernel[2], shadowZ ));","shadowKernel[2] *= vec3(0.25);","vec2 fractionalCoord = 1.0 - fract( shadowCoord.xy * shadowMapSize[i].xy );","shadowKernel[0] = mix( shadowKernel[1], shadowKernel[0], fractionalCoord.x );","shadowKernel[1] = mix( shadowKernel[2], shadowKernel[1], fractionalCoord.x );","vec4 shadowValues;","shadowValues.x = mix( shadowKernel[0][1], shadowKernel[0][0], fractionalCoord.y );","shadowValues.y = mix( shadowKernel[0][2], shadowKernel[0][1], fractionalCoord.y );","shadowValues.z = mix( shadowKernel[1][1], shadowKernel[1][0], fractionalCoord.y );","shadowValues.w = mix( shadowKernel[1][2], shadowKernel[1][1], fractionalCoord.y );","shadow = dot( shadowValues, vec4( 1.0 ) );","shadowColor = shadowColor * vec3( ( 1.0 - shadowDarkness[ i ] * shadow ) );","#else","vec4 rgbaDepth = texture2D( shadowMap[ i ], shadowCoord.xy );","float fDepth = unpackDepth( rgbaDepth );","if ( fDepth < shadowCoord.z )","shadowColor = shadowColor * vec3( 1.0 - shadowDarkness[ i ] );","#endif","}","#ifdef SHADOWMAP_DEBUG","#ifdef SHADOWMAP_CASCADE","if ( inFrustum && inFrustumCount == 1 ) gl_FragColor.xyz *= frustumColors[ i ];","#else","if ( inFrustum ) gl_FragColor.xyz *= frustumColors[ i ];","#endif","#endif","}","#ifdef GAMMA_OUTPUT","shadowColor *= shadowColor;","#endif","gl_FragColor.xyz = gl_FragColor.xyz * shadowColor;","#endif"].join("\n"),shadowmap_pars_vertex:["#ifdef USE_SHADOWMAP","varying vec4 vShadowCoord[ MAX_SHADOWS ];","uniform mat4 shadowMatrix[ MAX_SHADOWS ];","#endif"].join("\n"),shadowmap_vertex:["#ifdef USE_SHADOWMAP","for( int i = 0; i < MAX_SHADOWS; i ++ ) {","vShadowCoord[ i ] = shadowMatrix[ i ] * worldPosition;","}","#endif"].join("\n"),alphatest_fragment:["#ifdef ALPHATEST","if ( gl_FragColor.a < ALPHATEST ) discard;","#endif"].join("\n"),linear_to_gamma_fragment:["#ifdef GAMMA_OUTPUT","gl_FragColor.xyz = sqrt( gl_FragColor.xyz );","#endif"].join("\n")},THREE.UniformsUtils={merge:function(a){var b,c,d,e={};for(b=0;b<a.length;b++){d=this.clone(a[b]);for(c in d)e[c]=d[c]}return e},clone:function(a){var b,c,d,e={};for(b in a){e[b]={};for(c in a[b])d=a[b][c],d instanceof THREE.Color||d instanceof THREE.Vector2||d instanceof THREE.Vector3||d instanceof THREE.Vector4||d instanceof THREE.Matrix4||d instanceof THREE.Texture?e[b][c]=d.clone():d instanceof Array?e[b][c]=d.slice():e[b][c]=d}return e}},THREE.UniformsLib={common:{diffuse:{type:"c",value:new THREE.Color(15658734)},opacity:{type:"f",value:1},map:{type:"t",value:null},offsetRepeat:{type:"v4",value:new THREE.Vector4(0,0,1,1)},lightMap:{type:"t",value:null},specularMap:{type:"t",value:null},envMap:{type:"t",value:null},flipEnvMap:{type:"f",value:-1},useRefract:{type:"i",value:0},reflectivity:{type:"f",value:1},refractionRatio:{type:"f",value:.98},combine:{type:"i",value:0},morphTargetInfluences:{type:"f",value:0}},bump:{bumpMap:{type:"t",value:null},bumpScale:{type:"f",value:1}},normalmap:{normalMap:{type:"t",value:null},normalScale:{type:"v2",value:new THREE.Vector2(1,1)}},fog:{fogDensity:{type:"f",value:25e-5},fogNear:{type:"f",value:1},fogFar:{type:"f",value:2e3},fogColor:{type:"c",value:new THREE.Color(16777215)}},lights:{ambientLightColor:{type:"fv",value:[]},directionalLightDirection:{type:"fv",value:[]},directionalLightColor:{type:"fv",value:[]},hemisphereLightDirection:{type:"fv",value:[]},hemisphereLightSkyColor:{type:"fv",value:[]},hemisphereLightGroundColor:{type:"fv",value:[]},pointLightColor:{type:"fv",value:[]},pointLightPosition:{type:"fv",value:[]},pointLightDistance:{type:"fv1",value:[]},spotLightColor:{type:"fv",value:[]},spotLightPosition:{type:"fv",value:[]},spotLightDirection:{type:"fv",value:[]},spotLightDistance:{type:"fv1",value:[]},spotLightAngleCos:{type:"fv1",value:[]},spotLightExponent:{type:"fv1",value:[]}},particle:{psColor:{type:"c",value:new THREE.Color(15658734)},opacity:{type:"f",value:1},size:{type:"f",value:1},scale:{type:"f",value:1},map:{type:"t",value:null},fogDensity:{type:"f",value:25e-5},fogNear:{type:"f",value:1},fogFar:{type:"f",value:2e3},fogColor:{type:"c",value:new THREE.Color(16777215)}},shadowmap:{shadowMap:{type:"tv",value:[]},shadowMapSize:{type:"v2v",value:[]},shadowBias:{type:"fv1",value:[]},shadowDarkness:{type:"fv1",value:[]},shadowMatrix:{type:"m4v",value:[]}}},THREE.ShaderLib={basic:{uniforms:THREE.UniformsUtils.merge([THREE.UniformsLib.common,THREE.UniformsLib.fog,THREE.UniformsLib.shadowmap]),vertexShader:[THREE.ShaderChunk.map_pars_vertex,THREE.ShaderChunk.lightmap_pars_vertex,THREE.ShaderChunk.envmap_pars_vertex,THREE.ShaderChunk.color_pars_vertex,THREE.ShaderChunk.morphtarget_pars_vertex,THREE.ShaderChunk.skinning_pars_vertex,THREE.ShaderChunk.shadowmap_pars_vertex,"void main() {",THREE.ShaderChunk.map_vertex,THREE.ShaderChunk.lightmap_vertex,THREE.ShaderChunk.color_vertex,THREE.ShaderChunk.skinbase_vertex,"#ifdef USE_ENVMAP",THREE.ShaderChunk.morphnormal_vertex,THREE.ShaderChunk.skinnormal_vertex,THREE.ShaderChunk.defaultnormal_vertex,"#endif",THREE.ShaderChunk.morphtarget_vertex,THREE.ShaderChunk.skinning_vertex,THREE.ShaderChunk.default_vertex,THREE.ShaderChunk.worldpos_vertex,THREE.ShaderChunk.envmap_vertex,THREE.ShaderChunk.shadowmap_vertex,"}"].join("\n"),fragmentShader:["uniform vec3 diffuse;","uniform float opacity;",THREE.ShaderChunk.color_pars_fragment,THREE.ShaderChunk.map_pars_fragment,THREE.ShaderChunk.lightmap_pars_fragment,THREE.ShaderChunk.envmap_pars_fragment,THREE.ShaderChunk.fog_pars_fragment,THREE.ShaderChunk.shadowmap_pars_fragment,THREE.ShaderChunk.specularmap_pars_fragment,"void main() {","gl_FragColor = vec4( diffuse, opacity );",THREE.ShaderChunk.map_fragment,THREE.ShaderChunk.alphatest_fragment,THREE.ShaderChunk.specularmap_fragment,THREE.ShaderChunk.lightmap_fragment,THREE.ShaderChunk.color_fragment,THREE.ShaderChunk.envmap_fragment,THREE.ShaderChunk.shadowmap_fragment,THREE.ShaderChunk.linear_to_gamma_fragment,THREE.ShaderChunk.fog_fragment,"}"].join("\n")},lambert:{uniforms:THREE.UniformsUtils.merge([THREE.UniformsLib.common,THREE.UniformsLib.fog,THREE.UniformsLib.lights,THREE.UniformsLib.shadowmap,{ambient:{type:"c",value:new THREE.Color(16777215)},emissive:{type:"c",value:new THREE.Color(0)},wrapRGB:{type:"v3",value:new THREE.Vector3(1,1,1)}}]),vertexShader:["#define LAMBERT","varying vec3 vLightFront;","#ifdef DOUBLE_SIDED","varying vec3 vLightBack;","#endif",THREE.ShaderChunk.map_pars_vertex,THREE.ShaderChunk.lightmap_pars_vertex,THREE.ShaderChunk.envmap_pars_vertex,THREE.ShaderChunk.lights_lambert_pars_vertex,THREE.ShaderChunk.color_pars_vertex,THREE.ShaderChunk.morphtarget_pars_vertex,THREE.ShaderChunk.skinning_pars_vertex,THREE.ShaderChunk.shadowmap_pars_vertex,"void main() {",THREE.ShaderChunk.map_vertex,THREE.ShaderChunk.lightmap_vertex,THREE.ShaderChunk.color_vertex,THREE.ShaderChunk.morphnormal_vertex,THREE.ShaderChunk.skinbase_vertex,THREE.ShaderChunk.skinnormal_vertex,THREE.ShaderChunk.defaultnormal_vertex,THREE.ShaderChunk.morphtarget_vertex,THREE.ShaderChunk.skinning_vertex,THREE.ShaderChunk.default_vertex,THREE.ShaderChunk.worldpos_vertex,THREE.ShaderChunk.envmap_vertex,THREE.ShaderChunk.lights_lambert_vertex,THREE.ShaderChunk.shadowmap_vertex,"}"].join("\n"),fragmentShader:["uniform float opacity;","varying vec3 vLightFront;","#ifdef DOUBLE_SIDED","varying vec3 vLightBack;","#endif",THREE.ShaderChunk.color_pars_fragment,THREE.ShaderChunk.map_pars_fragment,THREE.ShaderChunk.lightmap_pars_fragment,THREE.ShaderChunk.envmap_pars_fragment,THREE.ShaderChunk.fog_pars_fragment,THREE.ShaderChunk.shadowmap_pars_fragment,THREE.ShaderChunk.specularmap_pars_fragment,"void main() {","gl_FragColor = vec4( vec3 ( 1.0 ), opacity );",THREE.ShaderChunk.map_fragment,THREE.ShaderChunk.alphatest_fragment,THREE.ShaderChunk.specularmap_fragment,"#ifdef DOUBLE_SIDED","if ( gl_FrontFacing )","gl_FragColor.xyz *= vLightFront;","else","gl_FragColor.xyz *= vLightBack;","#else","gl_FragColor.xyz *= vLightFront;","#endif",THREE.ShaderChunk.lightmap_fragment,THREE.ShaderChunk.color_fragment,THREE.ShaderChunk.envmap_fragment,THREE.ShaderChunk.shadowmap_fragment,THREE.ShaderChunk.linear_to_gamma_fragment,THREE.ShaderChunk.fog_fragment,"}"].join("\n")},phong:{uniforms:THREE.UniformsUtils.merge([THREE.UniformsLib.common,THREE.UniformsLib.bump,THREE.UniformsLib.normalmap,THREE.UniformsLib.fog,THREE.UniformsLib.lights,THREE.UniformsLib.shadowmap,{ambient:{type:"c",value:new THREE.Color(16777215)},emissive:{type:"c",value:new THREE.Color(0)},specular:{type:"c",value:new THREE.Color(1118481)},shininess:{type:"f",value:30},wrapRGB:{type:"v3",value:new THREE.Vector3(1,1,1)}}]),vertexShader:["#define PHONG","varying vec3 vViewPosition;","varying vec3 vNormal;",THREE.ShaderChunk.map_pars_vertex,THREE.ShaderChunk.lightmap_pars_vertex,THREE.ShaderChunk.envmap_pars_vertex,THREE.ShaderChunk.lights_phong_pars_vertex,THREE.ShaderChunk.color_pars_vertex,THREE.ShaderChunk.morphtarget_pars_vertex,THREE.ShaderChunk.skinning_pars_vertex,THREE.ShaderChunk.shadowmap_pars_vertex,"void main() {",THREE.ShaderChunk.map_vertex,THREE.ShaderChunk.lightmap_vertex,THREE.ShaderChunk.color_vertex,THREE.ShaderChunk.morphnormal_vertex,THREE.ShaderChunk.skinbase_vertex,THREE.ShaderChunk.skinnormal_vertex,THREE.ShaderChunk.defaultnormal_vertex,"vNormal = normalize( transformedNormal );",THREE.ShaderChunk.morphtarget_vertex,THREE.ShaderChunk.skinning_vertex,THREE.ShaderChunk.default_vertex,"vViewPosition = -mvPosition.xyz;",THREE.ShaderChunk.worldpos_vertex,THREE.ShaderChunk.envmap_vertex,THREE.ShaderChunk.lights_phong_vertex,THREE.ShaderChunk.shadowmap_vertex,"}"].join("\n"),fragmentShader:["uniform vec3 diffuse;","uniform float opacity;","uniform vec3 ambient;","uniform vec3 emissive;","uniform vec3 specular;","uniform float shininess;",THREE.ShaderChunk.color_pars_fragment,THREE.ShaderChunk.map_pars_fragment,THREE.ShaderChunk.lightmap_pars_fragment,THREE.ShaderChunk.envmap_pars_fragment,THREE.ShaderChunk.fog_pars_fragment,THREE.ShaderChunk.lights_phong_pars_fragment,THREE.ShaderChunk.shadowmap_pars_fragment,THREE.ShaderChunk.bumpmap_pars_fragment,THREE.ShaderChunk.normalmap_pars_fragment,THREE.ShaderChunk.specularmap_pars_fragment,"void main() {","gl_FragColor = vec4( vec3 ( 1.0 ), opacity );",THREE.ShaderChunk.map_fragment,THREE.ShaderChunk.alphatest_fragment,THREE.ShaderChunk.specularmap_fragment,THREE.ShaderChunk.lights_phong_fragment,THREE.ShaderChunk.lightmap_fragment,THREE.ShaderChunk.color_fragment,THREE.ShaderChunk.envmap_fragment,THREE.ShaderChunk.shadowmap_fragment,THREE.ShaderChunk.linear_to_gamma_fragment,THREE.ShaderChunk.fog_fragment,"}"].join("\n")},particle_basic:{uniforms:THREE.UniformsUtils.merge([THREE.UniformsLib.particle,THREE.UniformsLib.shadowmap]),vertexShader:["uniform float size;","uniform float scale;",THREE.ShaderChunk.color_pars_vertex,THREE.ShaderChunk.shadowmap_pars_vertex,"void main() {",THREE.ShaderChunk.color_vertex,"vec4 mvPosition = modelViewMatrix * vec4( position, 1.0 );","#ifdef USE_SIZEATTENUATION","gl_PointSize = size * ( scale / length( mvPosition.xyz ) );","#else","gl_PointSize = size;","#endif","gl_Position = projectionMatrix * mvPosition;",THREE.ShaderChunk.worldpos_vertex,THREE.ShaderChunk.shadowmap_vertex,"}"].join("\n"),fragmentShader:["uniform vec3 psColor;","uniform float opacity;",THREE.ShaderChunk.color_pars_fragment,THREE.ShaderChunk.map_particle_pars_fragment,THREE.ShaderChunk.fog_pars_fragment,THREE.ShaderChunk.shadowmap_pars_fragment,"void main() {","gl_FragColor = vec4( psColor, opacity );",THREE.ShaderChunk.map_particle_fragment,THREE.ShaderChunk.alphatest_fragment,THREE.ShaderChunk.color_fragment,THREE.ShaderChunk.shadowmap_fragment,THREE.ShaderChunk.fog_fragment,"}"].join("\n")},dashed:{uniforms:THREE.UniformsUtils.merge([THREE.UniformsLib.common,THREE.UniformsLib.fog,{scale:{type:"f",value:1},dashSize:{type:"f",value:1},totalSize:{type:"f",value:2}}]),vertexShader:["uniform float scale;","attribute float lineDistance;","varying float vLineDistance;",THREE.ShaderChunk.color_pars_vertex,"void main() {",THREE.ShaderChunk.color_vertex,"vLineDistance = scale * lineDistance;","vec4 mvPosition = modelViewMatrix * vec4( position, 1.0 );","gl_Position = projectionMatrix * mvPosition;","}"].join("\n"),fragmentShader:["uniform vec3 diffuse;","uniform float opacity;","uniform float dashSize;","uniform float totalSize;","varying float vLineDistance;",THREE.ShaderChunk.color_pars_fragment,THREE.ShaderChunk.fog_pars_fragment,"void main() {","if ( mod( vLineDistance, totalSize ) > dashSize ) {","discard;","}","gl_FragColor = vec4( diffuse, opacity );",THREE.ShaderChunk.color_fragment,THREE.ShaderChunk.fog_fragment,"}"].join("\n")},depth:{uniforms:{mNear:{type:"f",value:1},mFar:{type:"f",value:2e3},opacity:{type:"f",value:1}},vertexShader:["void main() {","gl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );","}"].join("\n"),fragmentShader:["uniform float mNear;","uniform float mFar;","uniform float opacity;","void main() {","float depth = gl_FragCoord.z / gl_FragCoord.w;","float color = 1.0 - smoothstep( mNear, mFar, depth );","gl_FragColor = vec4( vec3( color ), opacity );","}"].join("\n")},normal:{uniforms:{opacity:{type:"f",value:1}},vertexShader:["varying vec3 vNormal;",THREE.ShaderChunk.morphtarget_pars_vertex,"void main() {","vNormal = normalize( normalMatrix * normal );",THREE.ShaderChunk.morphtarget_vertex,THREE.ShaderChunk.default_vertex,"}"].join("\n"),fragmentShader:["uniform float opacity;","varying vec3 vNormal;","void main() {","gl_FragColor = vec4( 0.5 * normalize( vNormal ) + 0.5, opacity );","}"].join("\n")},normalmap:{uniforms:THREE.UniformsUtils.merge([THREE.UniformsLib.fog,THREE.UniformsLib.lights,THREE.UniformsLib.shadowmap,{enableAO:{type:"i",value:0},enableDiffuse:{type:"i",value:0},enableSpecular:{type:"i",value:0},enableReflection:{type:"i",value:0},enableDisplacement:{type:"i",value:0},tDisplacement:{type:"t",value:null},tDiffuse:{type:"t",value:null},tCube:{type:"t",value:null},tNormal:{type:"t",value:null},tSpecular:{type:"t",value:null},tAO:{type:"t",value:null},uNormalScale:{type:"v2",value:new THREE.Vector2(1,1)},uDisplacementBias:{type:"f",value:0},uDisplacementScale:{type:"f",value:1},uDiffuseColor:{type:"c",value:new THREE.Color(16777215)},uSpecularColor:{type:"c",value:new THREE.Color(1118481)},uAmbientColor:{type:"c",value:new THREE.Color(16777215)},uShininess:{type:"f",value:30},uOpacity:{type:"f",value:1},useRefract:{type:"i",value:0},uRefractionRatio:{type:"f",value:.98},uReflectivity:{type:"f",value:.5},uOffset:{type:"v2",value:new THREE.Vector2(0,0)},uRepeat:{type:"v2",value:new THREE.Vector2(1,1)},wrapRGB:{type:"v3",value:new THREE.Vector3(1,1,1)}}]),fragmentShader:["uniform vec3 uAmbientColor;","uniform vec3 uDiffuseColor;","uniform vec3 uSpecularColor;","uniform float uShininess;","uniform float uOpacity;","uniform bool enableDiffuse;","uniform bool enableSpecular;","uniform bool enableAO;","uniform bool enableReflection;","uniform sampler2D tDiffuse;","uniform sampler2D tNormal;","uniform sampler2D tSpecular;","uniform sampler2D tAO;","uniform samplerCube tCube;","uniform vec2 uNormalScale;","uniform bool useRefract;","uniform float uRefractionRatio;","uniform float uReflectivity;","varying vec3 vTangent;","varying vec3 vBinormal;","varying vec3 vNormal;","varying vec2 vUv;","uniform vec3 ambientLightColor;","#if MAX_DIR_LIGHTS > 0","uniform vec3 directionalLightColor[ MAX_DIR_LIGHTS ];","uniform vec3 directionalLightDirection[ MAX_DIR_LIGHTS ];","#endif","#if MAX_HEMI_LIGHTS > 0","uniform vec3 hemisphereLightSkyColor[ MAX_HEMI_LIGHTS ];","uniform vec3 hemisphereLightGroundColor[ MAX_HEMI_LIGHTS ];","uniform vec3 hemisphereLightDirection[ MAX_HEMI_LIGHTS ];","#endif","#if MAX_POINT_LIGHTS > 0","uniform vec3 pointLightColor[ MAX_POINT_LIGHTS ];","uniform vec3 pointLightPosition[ MAX_POINT_LIGHTS ];","uniform float pointLightDistance[ MAX_POINT_LIGHTS ];","#endif","#if MAX_SPOT_LIGHTS > 0","uniform vec3 spotLightColor[ MAX_SPOT_LIGHTS ];","uniform vec3 spotLightPosition[ MAX_SPOT_LIGHTS ];","uniform vec3 spotLightDirection[ MAX_SPOT_LIGHTS ];","uniform float spotLightAngleCos[ MAX_SPOT_LIGHTS ];","uniform float spotLightExponent[ MAX_SPOT_LIGHTS ];","uniform float spotLightDistance[ MAX_SPOT_LIGHTS ];","#endif","#ifdef WRAP_AROUND","uniform vec3 wrapRGB;","#endif","varying vec3 vWorldPosition;","varying vec3 vViewPosition;",THREE.ShaderChunk.shadowmap_pars_fragment,THREE.ShaderChunk.fog_pars_fragment,"void main() {","gl_FragColor = vec4( vec3( 1.0 ), uOpacity );","vec3 specularTex = vec3( 1.0 );","vec3 normalTex = texture2D( tNormal, vUv ).xyz * 2.0 - 1.0;","normalTex.xy *= uNormalScale;","normalTex = normalize( normalTex );","if( enableDiffuse ) {","#ifdef GAMMA_INPUT","vec4 texelColor = texture2D( tDiffuse, vUv );","texelColor.xyz *= texelColor.xyz;","gl_FragColor = gl_FragColor * texelColor;","#else","gl_FragColor = gl_FragColor * texture2D( tDiffuse, vUv );","#endif","}","if( enableAO ) {","#ifdef GAMMA_INPUT","vec4 aoColor = texture2D( tAO, vUv );","aoColor.xyz *= aoColor.xyz;","gl_FragColor.xyz = gl_FragColor.xyz * aoColor.xyz;","#else","gl_FragColor.xyz = gl_FragColor.xyz * texture2D( tAO, vUv ).xyz;","#endif","}","if( enableSpecular )","specularTex = texture2D( tSpecular, vUv ).xyz;","mat3 tsb = mat3( normalize( vTangent ), normalize( vBinormal ), normalize( vNormal ) );","vec3 finalNormal = tsb * normalTex;","#ifdef FLIP_SIDED","finalNormal = -finalNormal;","#endif","vec3 normal = normalize( finalNormal );","vec3 viewPosition = normalize( vViewPosition );","#if MAX_POINT_LIGHTS > 0","vec3 pointDiffuse = vec3( 0.0 );","vec3 pointSpecular = vec3( 0.0 );","for ( int i = 0; i < MAX_POINT_LIGHTS; i ++ ) {","vec4 lPosition = viewMatrix * vec4( pointLightPosition[ i ], 1.0 );","vec3 pointVector = lPosition.xyz + vViewPosition.xyz;","float pointDistance = 1.0;","if ( pointLightDistance[ i ] > 0.0 )","pointDistance = 1.0 - min( ( length( pointVector ) / pointLightDistance[ i ] ), 1.0 );","pointVector = normalize( pointVector );","#ifdef WRAP_AROUND","float pointDiffuseWeightFull = max( dot( normal, pointVector ), 0.0 );","float pointDiffuseWeightHalf = max( 0.5 * dot( normal, pointVector ) + 0.5, 0.0 );","vec3 pointDiffuseWeight = mix( vec3 ( pointDiffuseWeightFull ), vec3( pointDiffuseWeightHalf ), wrapRGB );","#else","float pointDiffuseWeight = max( dot( normal, pointVector ), 0.0 );","#endif","pointDiffuse += pointDistance * pointLightColor[ i ] * uDiffuseColor * pointDiffuseWeight;","vec3 pointHalfVector = normalize( pointVector + viewPosition );","float pointDotNormalHalf = max( dot( normal, pointHalfVector ), 0.0 );","float pointSpecularWeight = specularTex.r * max( pow( pointDotNormalHalf, uShininess ), 0.0 );","#ifdef PHYSICALLY_BASED_SHADING","float specularNormalization = ( uShininess + 2.0001 ) / 8.0;","vec3 schlick = uSpecularColor + vec3( 1.0 - uSpecularColor ) * pow( 1.0 - dot( pointVector, pointHalfVector ), 5.0 );","pointSpecular += schlick * pointLightColor[ i ] * pointSpecularWeight * pointDiffuseWeight * pointDistance * specularNormalization;","#else","pointSpecular += pointDistance * pointLightColor[ i ] * uSpecularColor * pointSpecularWeight * pointDiffuseWeight;","#endif","}","#endif","#if MAX_SPOT_LIGHTS > 0","vec3 spotDiffuse = vec3( 0.0 );","vec3 spotSpecular = vec3( 0.0 );","for ( int i = 0; i < MAX_SPOT_LIGHTS; i ++ ) {","vec4 lPosition = viewMatrix * vec4( spotLightPosition[ i ], 1.0 );","vec3 spotVector = lPosition.xyz + vViewPosition.xyz;","float spotDistance = 1.0;","if ( spotLightDistance[ i ] > 0.0 )","spotDistance = 1.0 - min( ( length( spotVector ) / spotLightDistance[ i ] ), 1.0 );","spotVector = normalize( spotVector );","float spotEffect = dot( spotLightDirection[ i ], normalize( spotLightPosition[ i ] - vWorldPosition ) );","if ( spotEffect > spotLightAngleCos[ i ] ) {","spotEffect = max( pow( spotEffect, spotLightExponent[ i ] ), 0.0 );","#ifdef WRAP_AROUND","float spotDiffuseWeightFull = max( dot( normal, spotVector ), 0.0 );","float spotDiffuseWeightHalf = max( 0.5 * dot( normal, spotVector ) + 0.5, 0.0 );","vec3 spotDiffuseWeight = mix( vec3 ( spotDiffuseWeightFull ), vec3( spotDiffuseWeightHalf ), wrapRGB );","#else","float spotDiffuseWeight = max( dot( normal, spotVector ), 0.0 );","#endif","spotDiffuse += spotDistance * spotLightColor[ i ] * uDiffuseColor * spotDiffuseWeight * spotEffect;","vec3 spotHalfVector = normalize( spotVector + viewPosition );","float spotDotNormalHalf = max( dot( normal, spotHalfVector ), 0.0 );","float spotSpecularWeight = specularTex.r * max( pow( spotDotNormalHalf, uShininess ), 0.0 );","#ifdef PHYSICALLY_BASED_SHADING","float specularNormalization = ( uShininess + 2.0001 ) / 8.0;","vec3 schlick = uSpecularColor + vec3( 1.0 - uSpecularColor ) * pow( 1.0 - dot( spotVector, spotHalfVector ), 5.0 );","spotSpecular += schlick * spotLightColor[ i ] * spotSpecularWeight * spotDiffuseWeight * spotDistance * specularNormalization * spotEffect;","#else","spotSpecular += spotDistance * spotLightColor[ i ] * uSpecularColor * spotSpecularWeight * spotDiffuseWeight * spotEffect;","#endif","}","}","#endif","#if MAX_DIR_LIGHTS > 0","vec3 dirDiffuse = vec3( 0.0 );","vec3 dirSpecular = vec3( 0.0 );","for( int i = 0; i < MAX_DIR_LIGHTS; i++ ) {","vec4 lDirection = viewMatrix * vec4( directionalLightDirection[ i ], 0.0 );","vec3 dirVector = normalize( lDirection.xyz );","#ifdef WRAP_AROUND","float directionalLightWeightingFull = max( dot( normal, dirVector ), 0.0 );","float directionalLightWeightingHalf = max( 0.5 * dot( normal, dirVector ) + 0.5, 0.0 );","vec3 dirDiffuseWeight = mix( vec3( directionalLightWeightingFull ), vec3( directionalLightWeightingHalf ), wrapRGB );","#else","float dirDiffuseWeight = max( dot( normal, dirVector ), 0.0 );","#endif","dirDiffuse += directionalLightColor[ i ] * uDiffuseColor * dirDiffuseWeight;","vec3 dirHalfVector = normalize( dirVector + viewPosition );","float dirDotNormalHalf = max( dot( normal, dirHalfVector ), 0.0 );","float dirSpecularWeight = specularTex.r * max( pow( dirDotNormalHalf, uShininess ), 0.0 );","#ifdef PHYSICALLY_BASED_SHADING","float specularNormalization = ( uShininess + 2.0001 ) / 8.0;","vec3 schlick = uSpecularColor + vec3( 1.0 - uSpecularColor ) * pow( 1.0 - dot( dirVector, dirHalfVector ), 5.0 );","dirSpecular += schlick * directionalLightColor[ i ] * dirSpecularWeight * dirDiffuseWeight * specularNormalization;","#else","dirSpecular += directionalLightColor[ i ] * uSpecularColor * dirSpecularWeight * dirDiffuseWeight;","#endif","}","#endif","#if MAX_HEMI_LIGHTS > 0","vec3 hemiDiffuse  = vec3( 0.0 );","vec3 hemiSpecular = vec3( 0.0 );","for( int i = 0; i < MAX_HEMI_LIGHTS; i ++ ) {","vec4 lDirection = viewMatrix * vec4( hemisphereLightDirection[ i ], 0.0 );","vec3 lVector = normalize( lDirection.xyz );","float dotProduct = dot( normal, lVector );","float hemiDiffuseWeight = 0.5 * dotProduct + 0.5;","vec3 hemiColor = mix( hemisphereLightGroundColor[ i ], hemisphereLightSkyColor[ i ], hemiDiffuseWeight );","hemiDiffuse += uDiffuseColor * hemiColor;","vec3 hemiHalfVectorSky = normalize( lVector + viewPosition );","float hemiDotNormalHalfSky = 0.5 * dot( normal, hemiHalfVectorSky ) + 0.5;","float hemiSpecularWeightSky = specularTex.r * max( pow( hemiDotNormalHalfSky, uShininess ), 0.0 );","vec3 lVectorGround = -lVector;","vec3 hemiHalfVectorGround = normalize( lVectorGround + viewPosition );","float hemiDotNormalHalfGround = 0.5 * dot( normal, hemiHalfVectorGround ) + 0.5;","float hemiSpecularWeightGround = specularTex.r * max( pow( hemiDotNormalHalfGround, uShininess ), 0.0 );","#ifdef PHYSICALLY_BASED_SHADING","float dotProductGround = dot( normal, lVectorGround );","float specularNormalization = ( uShininess + 2.0001 ) / 8.0;","vec3 schlickSky = uSpecularColor + vec3( 1.0 - uSpecularColor ) * pow( 1.0 - dot( lVector, hemiHalfVectorSky ), 5.0 );","vec3 schlickGround = uSpecularColor + vec3( 1.0 - uSpecularColor ) * pow( 1.0 - dot( lVectorGround, hemiHalfVectorGround ), 5.0 );","hemiSpecular += hemiColor * specularNormalization * ( schlickSky * hemiSpecularWeightSky * max( dotProduct, 0.0 ) + schlickGround * hemiSpecularWeightGround * max( dotProductGround, 0.0 ) );","#else","hemiSpecular += uSpecularColor * hemiColor * ( hemiSpecularWeightSky + hemiSpecularWeightGround ) * hemiDiffuseWeight;","#endif","}","#endif","vec3 totalDiffuse = vec3( 0.0 );","vec3 totalSpecular = vec3( 0.0 );","#if MAX_DIR_LIGHTS > 0","totalDiffuse += dirDiffuse;","totalSpecular += dirSpecular;","#endif","#if MAX_HEMI_LIGHTS > 0","totalDiffuse += hemiDiffuse;","totalSpecular += hemiSpecular;","#endif","#if MAX_POINT_LIGHTS > 0","totalDiffuse += pointDiffuse;","totalSpecular += pointSpecular;","#endif","#if MAX_SPOT_LIGHTS > 0","totalDiffuse += spotDiffuse;","totalSpecular += spotSpecular;","#endif","#ifdef METAL","gl_FragColor.xyz = gl_FragColor.xyz * ( totalDiffuse + ambientLightColor * uAmbientColor + totalSpecular );","#else","gl_FragColor.xyz = gl_FragColor.xyz * ( totalDiffuse + ambientLightColor * uAmbientColor ) + totalSpecular;","#endif","if ( enableReflection ) {","vec3 vReflect;","vec3 cameraToVertex = normalize( vWorldPosition - cameraPosition );","if ( useRefract ) {","vReflect = refract( cameraToVertex, normal, uRefractionRatio );","} else {","vReflect = reflect( cameraToVertex, normal );","}","vec4 cubeColor = textureCube( tCube, vec3( -vReflect.x, vReflect.yz ) );","#ifdef GAMMA_INPUT","cubeColor.xyz *= cubeColor.xyz;","#endif","gl_FragColor.xyz = mix( gl_FragColor.xyz, cubeColor.xyz, specularTex.r * uReflectivity );","}",THREE.ShaderChunk.shadowmap_fragment,THREE.ShaderChunk.linear_to_gamma_fragment,THREE.ShaderChunk.fog_fragment,"}"].join("\n"),
vertexShader:["attribute vec4 tangent;","uniform vec2 uOffset;","uniform vec2 uRepeat;","uniform bool enableDisplacement;","#ifdef VERTEX_TEXTURES","uniform sampler2D tDisplacement;","uniform float uDisplacementScale;","uniform float uDisplacementBias;","#endif","varying vec3 vTangent;","varying vec3 vBinormal;","varying vec3 vNormal;","varying vec2 vUv;","varying vec3 vWorldPosition;","varying vec3 vViewPosition;",THREE.ShaderChunk.skinning_pars_vertex,THREE.ShaderChunk.shadowmap_pars_vertex,"void main() {",THREE.ShaderChunk.skinbase_vertex,THREE.ShaderChunk.skinnormal_vertex,"#ifdef USE_SKINNING","vNormal = normalize( normalMatrix * skinnedNormal.xyz );","vec4 skinnedTangent = skinMatrix * vec4( tangent.xyz, 0.0 );","vTangent = normalize( normalMatrix * skinnedTangent.xyz );","#else","vNormal = normalize( normalMatrix * normal );","vTangent = normalize( normalMatrix * tangent.xyz );","#endif","vBinormal = normalize( cross( vNormal, vTangent ) * tangent.w );","vUv = uv * uRepeat + uOffset;","vec3 displacedPosition;","#ifdef VERTEX_TEXTURES","if ( enableDisplacement ) {","vec3 dv = texture2D( tDisplacement, uv ).xyz;","float df = uDisplacementScale * dv.x + uDisplacementBias;","displacedPosition = position + normalize( normal ) * df;","} else {","#ifdef USE_SKINNING","vec4 skinVertex = vec4( position, 1.0 );","vec4 skinned  = boneMatX * skinVertex * skinWeight.x;","skinned \t  += boneMatY * skinVertex * skinWeight.y;","displacedPosition  = skinned.xyz;","#else","displacedPosition = position;","#endif","}","#else","#ifdef USE_SKINNING","vec4 skinVertex = vec4( position, 1.0 );","vec4 skinned  = boneMatX * skinVertex * skinWeight.x;","skinned \t  += boneMatY * skinVertex * skinWeight.y;","displacedPosition  = skinned.xyz;","#else","displacedPosition = position;","#endif","#endif","vec4 mvPosition = modelViewMatrix * vec4( displacedPosition, 1.0 );","vec4 worldPosition = modelMatrix * vec4( displacedPosition, 1.0 );","gl_Position = projectionMatrix * mvPosition;","vWorldPosition = worldPosition.xyz;","vViewPosition = -mvPosition.xyz;","#ifdef USE_SHADOWMAP","for( int i = 0; i < MAX_SHADOWS; i ++ ) {","vShadowCoord[ i ] = shadowMatrix[ i ] * worldPosition;","}","#endif","}"].join("\n")},cube:{uniforms:{tCube:{type:"t",value:null},tFlip:{type:"f",value:-1}},vertexShader:["varying vec3 vWorldPosition;","void main() {","vec4 worldPosition = modelMatrix * vec4( position, 1.0 );","vWorldPosition = worldPosition.xyz;","gl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );","}"].join("\n"),fragmentShader:["uniform samplerCube tCube;","uniform float tFlip;","varying vec3 vWorldPosition;","void main() {","gl_FragColor = textureCube( tCube, vec3( tFlip * vWorldPosition.x, vWorldPosition.yz ) );","}"].join("\n")},depthRGBA:{uniforms:{},vertexShader:[THREE.ShaderChunk.morphtarget_pars_vertex,THREE.ShaderChunk.skinning_pars_vertex,"void main() {",THREE.ShaderChunk.skinbase_vertex,THREE.ShaderChunk.morphtarget_vertex,THREE.ShaderChunk.skinning_vertex,THREE.ShaderChunk.default_vertex,"}"].join("\n"),fragmentShader:["vec4 pack_depth( const in float depth ) {","const vec4 bit_shift = vec4( 256.0 * 256.0 * 256.0, 256.0 * 256.0, 256.0, 1.0 );","const vec4 bit_mask  = vec4( 0.0, 1.0 / 256.0, 1.0 / 256.0, 1.0 / 256.0 );","vec4 res = fract( depth * bit_shift );","res -= res.xxyz * bit_mask;","return res;","}","void main() {","gl_FragData[ 0 ] = pack_depth( gl_FragCoord.z );","}"].join("\n")}},THREE.WebGLRenderer=function(a){function b(a){a.__webglVertexBuffer=La.createBuffer(),a.__webglColorBuffer=La.createBuffer(),Ra.info.memory.geometries++}function c(a){a.__webglVertexBuffer=La.createBuffer(),a.__webglColorBuffer=La.createBuffer(),a.__webglLineDistanceBuffer=La.createBuffer(),Ra.info.memory.geometries++}function d(a){a.__webglVertexBuffer=La.createBuffer(),a.__webglColorBuffer=La.createBuffer(),a.__webglNormalBuffer=La.createBuffer(),Ra.info.memory.geometries++}function e(a){a.__webglVertexBuffer=La.createBuffer(),a.__webglNormalBuffer=La.createBuffer(),a.__webglTangentBuffer=La.createBuffer(),a.__webglColorBuffer=La.createBuffer(),a.__webglUVBuffer=La.createBuffer(),a.__webglUV2Buffer=La.createBuffer(),a.__webglSkinIndicesBuffer=La.createBuffer(),a.__webglSkinWeightsBuffer=La.createBuffer(),a.__webglFaceBuffer=La.createBuffer(),a.__webglLineBuffer=La.createBuffer();var b,c;if(a.numMorphTargets)for(a.__webglMorphTargetsBuffers=[],b=0,c=a.numMorphTargets;b<c;b++)a.__webglMorphTargetsBuffers.push(La.createBuffer());if(a.numMorphNormals)for(a.__webglMorphNormalsBuffers=[],b=0,c=a.numMorphNormals;b<c;b++)a.__webglMorphNormalsBuffers.push(La.createBuffer());Ra.info.memory.geometries++}function f(a,b){var c=a.vertices.length,d=b.material;if(d.attributes){void 0===a.__webglCustomAttributesList&&(a.__webglCustomAttributesList=[]);for(var e in d.attributes){var f=d.attributes[e];if(!f.__webglInitialized||f.createUniqueBuffers){f.__webglInitialized=!0;var g=1;"v2"===f.type?g=2:"v3"===f.type?g=3:"v4"===f.type?g=4:"c"===f.type&&(g=3),f.size=g,f.array=new Float32Array(c*g),f.buffer=La.createBuffer(),f.buffer.belongsToAttribute=e,f.needsUpdate=!0}a.__webglCustomAttributesList.push(f)}}}function g(a,b){var c=a.vertices.length;a.__vertexArray=new Float32Array(3*c),a.__colorArray=new Float32Array(3*c),a.__sortArray=[],a.__webglParticleCount=c,f(a,b)}function h(a,b){var c=a.vertices.length;a.__vertexArray=new Float32Array(3*c),a.__colorArray=new Float32Array(3*c),a.__lineDistanceArray=new Float32Array(1*c),a.__webglLineCount=c,f(a,b)}function i(a,b){var c=a.vertices.length;a.__vertexArray=new Float32Array(3*c),a.__colorArray=new Float32Array(3*c),a.__normalArray=new Float32Array(3*c),a.__webglVertexCount=c,f(a,b)}function j(a,b){var c=b.geometry,d=a.faces3,e=3*d.length,f=1*d.length,g=3*d.length,h=k(b,a),i=o(h),j=m(h),l=n(h);a.__vertexArray=new Float32Array(3*e),j&&(a.__normalArray=new Float32Array(3*e)),c.hasTangents&&(a.__tangentArray=new Float32Array(4*e)),l&&(a.__colorArray=new Float32Array(3*e)),i&&(c.faceVertexUvs.length>0&&(a.__uvArray=new Float32Array(2*e)),c.faceVertexUvs.length>1&&(a.__uv2Array=new Float32Array(2*e))),b.geometry.skinWeights.length&&b.geometry.skinIndices.length&&(a.__skinIndexArray=new Float32Array(4*e),a.__skinWeightArray=new Float32Array(4*e)),a.__faceArray=new Uint16Array(3*f),a.__lineArray=new Uint16Array(2*g);var p,q;if(a.numMorphTargets)for(a.__morphTargetsArrays=[],p=0,q=a.numMorphTargets;p<q;p++)a.__morphTargetsArrays.push(new Float32Array(3*e));if(a.numMorphNormals)for(a.__morphNormalsArrays=[],p=0,q=a.numMorphNormals;p<q;p++)a.__morphNormalsArrays.push(new Float32Array(3*e));if(a.__webglFaceCount=3*f,a.__webglLineCount=2*g,h.attributes){void 0===a.__webglCustomAttributesList&&(a.__webglCustomAttributesList=[]);for(var r in h.attributes){var s=h.attributes[r],t={};for(var u in s)t[u]=s[u];if(!t.__webglInitialized||t.createUniqueBuffers){t.__webglInitialized=!0;var v=1;"v2"===t.type?v=2:"v3"===t.type?v=3:"v4"===t.type?v=4:"c"===t.type&&(v=3),t.size=v,t.array=new Float32Array(e*v),t.buffer=La.createBuffer(),t.buffer.belongsToAttribute=r,s.needsUpdate=!0,t.__original=s}a.__webglCustomAttributesList.push(t)}}a.__inittedArrays=!0}function k(a,b){return a.material instanceof THREE.MeshFaceMaterial?a.material.materials[b.materialIndex]:a.material}function l(a){return a&&void 0!==a.shading&&a.shading===THREE.SmoothShading}function m(a){return!(a instanceof THREE.MeshBasicMaterial&&!a.envMap||a instanceof THREE.MeshDepthMaterial)&&(l(a)?THREE.SmoothShading:THREE.FlatShading)}function n(a){return!!a.vertexColors&&a.vertexColors}function o(a){return!!(a.map||a.lightMap||a.bumpMap||a.normalMap||a.specularMap||a instanceof THREE.ShaderMaterial)}function p(a){var b,c,d;for(b in a.attributes)d="index"===b?La.ELEMENT_ARRAY_BUFFER:La.ARRAY_BUFFER,c=a.attributes[b],void 0===c.numItems&&(c.numItems=c.array.length),c.buffer=La.createBuffer(),La.bindBuffer(d,c.buffer),La.bufferData(d,c.array,La.STATIC_DRAW)}function q(a,b,c){var d,e,f,g,h,i,j,k,l,m,n,o,p=a.vertices,q=p.length,r=a.colors,s=r.length,t=a.__vertexArray,u=a.__colorArray,v=a.__sortArray,w=a.verticesNeedUpdate,x=(a.elementsNeedUpdate,a.colorsNeedUpdate),y=a.__webglCustomAttributesList;if(c.sortParticles){for(ub.copy(tb),ub.multiply(c.matrixWorld),d=0;d<q;d++)f=p[d],vb.copy(f),vb.applyProjection(ub),v[d]=[vb.z,d];for(v.sort(z),d=0;d<q;d++)f=p[v[d][1]],g=3*d,t[g]=f.x,t[g+1]=f.y,t[g+2]=f.z;for(e=0;e<s;e++)g=3*e,i=r[v[e][1]],u[g]=i.r,u[g+1]=i.g,u[g+2]=i.b;if(y)for(j=0,k=y.length;j<k;j++)if(o=y[j],void 0===o.boundTo||"vertices"===o.boundTo)if(g=0,m=o.value.length,1===o.size)for(l=0;l<m;l++)h=v[l][1],o.array[l]=o.value[h];else if(2===o.size)for(l=0;l<m;l++)h=v[l][1],n=o.value[h],o.array[g]=n.x,o.array[g+1]=n.y,g+=2;else if(3===o.size)if("c"===o.type)for(l=0;l<m;l++)h=v[l][1],n=o.value[h],o.array[g]=n.r,o.array[g+1]=n.g,o.array[g+2]=n.b,g+=3;else for(l=0;l<m;l++)h=v[l][1],n=o.value[h],o.array[g]=n.x,o.array[g+1]=n.y,o.array[g+2]=n.z,g+=3;else if(4===o.size)for(l=0;l<m;l++)h=v[l][1],n=o.value[h],o.array[g]=n.x,o.array[g+1]=n.y,o.array[g+2]=n.z,o.array[g+3]=n.w,g+=4}else{if(w)for(d=0;d<q;d++)f=p[d],g=3*d,t[g]=f.x,t[g+1]=f.y,t[g+2]=f.z;if(x)for(e=0;e<s;e++)i=r[e],g=3*e,u[g]=i.r,u[g+1]=i.g,u[g+2]=i.b;if(y)for(j=0,k=y.length;j<k;j++)if(o=y[j],o.needsUpdate&&(void 0===o.boundTo||"vertices"===o.boundTo))if(m=o.value.length,g=0,1===o.size)for(l=0;l<m;l++)o.array[l]=o.value[l];else if(2===o.size)for(l=0;l<m;l++)n=o.value[l],o.array[g]=n.x,o.array[g+1]=n.y,g+=2;else if(3===o.size)if("c"===o.type)for(l=0;l<m;l++)n=o.value[l],o.array[g]=n.r,o.array[g+1]=n.g,o.array[g+2]=n.b,g+=3;else for(l=0;l<m;l++)n=o.value[l],o.array[g]=n.x,o.array[g+1]=n.y,o.array[g+2]=n.z,g+=3;else if(4===o.size)for(l=0;l<m;l++)n=o.value[l],o.array[g]=n.x,o.array[g+1]=n.y,o.array[g+2]=n.z,o.array[g+3]=n.w,g+=4}if((w||c.sortParticles)&&(La.bindBuffer(La.ARRAY_BUFFER,a.__webglVertexBuffer),La.bufferData(La.ARRAY_BUFFER,t,b)),(x||c.sortParticles)&&(La.bindBuffer(La.ARRAY_BUFFER,a.__webglColorBuffer),La.bufferData(La.ARRAY_BUFFER,u,b)),y)for(j=0,k=y.length;j<k;j++)o=y[j],(o.needsUpdate||c.sortParticles)&&(La.bindBuffer(La.ARRAY_BUFFER,o.buffer),La.bufferData(La.ARRAY_BUFFER,o.array,b))}function r(a,b){var c,d,e,f,g,h,i,j,k,l,m,n,o=a.vertices,p=a.colors,q=a.lineDistances,r=o.length,s=p.length,t=q.length,u=a.__vertexArray,v=a.__colorArray,w=a.__lineDistanceArray,x=a.verticesNeedUpdate,y=a.colorsNeedUpdate,z=a.lineDistancesNeedUpdate,A=a.__webglCustomAttributesList;if(x){for(c=0;c<r;c++)f=o[c],g=3*c,u[g]=f.x,u[g+1]=f.y,u[g+2]=f.z;La.bindBuffer(La.ARRAY_BUFFER,a.__webglVertexBuffer),La.bufferData(La.ARRAY_BUFFER,u,b)}if(y){for(d=0;d<s;d++)h=p[d],g=3*d,v[g]=h.r,v[g+1]=h.g,v[g+2]=h.b;La.bindBuffer(La.ARRAY_BUFFER,a.__webglColorBuffer),La.bufferData(La.ARRAY_BUFFER,v,b)}if(z){for(e=0;e<t;e++)w[e]=q[e];La.bindBuffer(La.ARRAY_BUFFER,a.__webglLineDistanceBuffer),La.bufferData(La.ARRAY_BUFFER,w,b)}if(A)for(i=0,j=A.length;i<j;i++)if(n=A[i],n.needsUpdate&&(void 0===n.boundTo||"vertices"===n.boundTo)){if(g=0,l=n.value.length,1===n.size)for(k=0;k<l;k++)n.array[k]=n.value[k];else if(2===n.size)for(k=0;k<l;k++)m=n.value[k],n.array[g]=m.x,n.array[g+1]=m.y,g+=2;else if(3===n.size)if("c"===n.type)for(k=0;k<l;k++)m=n.value[k],n.array[g]=m.r,n.array[g+1]=m.g,n.array[g+2]=m.b,g+=3;else for(k=0;k<l;k++)m=n.value[k],n.array[g]=m.x,n.array[g+1]=m.y,n.array[g+2]=m.z,g+=3;else if(4===n.size)for(k=0;k<l;k++)m=n.value[k],n.array[g]=m.x,n.array[g+1]=m.y,n.array[g+2]=m.z,n.array[g+3]=m.w,g+=4;La.bindBuffer(La.ARRAY_BUFFER,n.buffer),La.bufferData(La.ARRAY_BUFFER,n.array,b)}}function s(a,b){var c,d,e,f,g,h,i,j,k,l,m,n,o,p=a.vertices,q=a.colors,r=a.normals,s=p.length,t=q.length,u=r.length,v=a.__vertexArray,w=a.__colorArray,x=a.__normalArray,y=a.verticesNeedUpdate,z=a.colorsNeedUpdate,A=a.normalsNeedUpdate,B=a.__webglCustomAttributesList;if(y){for(c=0;c<s;c++)f=p[c],g=3*c,v[g]=f.x,v[g+1]=f.y,v[g+2]=f.z;La.bindBuffer(La.ARRAY_BUFFER,a.__webglVertexBuffer),La.bufferData(La.ARRAY_BUFFER,v,b)}if(z){for(d=0;d<t;d++)h=q[d],g=3*d,w[g]=h.r,w[g+1]=h.g,w[g+2]=h.b;La.bindBuffer(La.ARRAY_BUFFER,a.__webglColorBuffer),La.bufferData(La.ARRAY_BUFFER,w,b)}if(A){for(e=0;e<u;e++)i=r[e],g=3*e,x[g]=i.x,x[g+1]=i.y,x[g+2]=i.z;La.bindBuffer(La.ARRAY_BUFFER,a.__webglNormalBuffer),La.bufferData(La.ARRAY_BUFFER,x,b)}if(B)for(j=0,k=B.length;j<k;j++)if(n=B[j],n.needsUpdate&&(void 0===n.boundTo||"vertices"===n.boundTo)){if(g=0,m=n.value.length,1===n.size)for(l=0;l<m;l++)n.array[l]=n.value[l];else if(2===n.size)for(l=0;l<m;l++)o=n.value[l],n.array[g]=o.x,n.array[g+1]=o.y,g+=2;else if(3===n.size)if("c"===n.type)for(l=0;l<m;l++)o=n.value[l],n.array[g]=o.r,n.array[g+1]=o.g,n.array[g+2]=o.b,g+=3;else for(l=0;l<m;l++)o=n.value[l],n.array[g]=o.x,n.array[g+1]=o.y,n.array[g+2]=o.z,g+=3;else if(4===n.size)for(l=0;l<m;l++)o=n.value[l],n.array[g]=o.x,n.array[g+1]=o.y,n.array[g+2]=o.z,n.array[g+3]=o.w,g+=4;La.bindBuffer(La.ARRAY_BUFFER,n.buffer),La.bufferData(La.ARRAY_BUFFER,n.array,b)}}function t(a,b,c,d,e){if(a.__inittedArrays){var f,g,h,i,j,k,l,p,q,r,s,t,u,v,w,x,y,z,A,B,C,D,E,F,G,H,I,J,K,L,M,N,O,P,Q,R,S,T,U,V,W,X,Y=m(e),Z=n(e),$=o(e),_=Y===THREE.SmoothShading,aa=0,ba=0,ca=0,da=0,ea=0,fa=0,ga=0,ha=0,ia=0,ja=0,ka=0,la=0,ma=0,na=a.__vertexArray,oa=a.__uvArray,pa=a.__uv2Array,qa=a.__normalArray,ra=a.__tangentArray,sa=a.__colorArray,ta=a.__skinIndexArray,ua=a.__skinWeightArray,va=a.__morphTargetsArrays,wa=a.__morphNormalsArrays,xa=a.__webglCustomAttributesList,ya=a.__faceArray,za=a.__lineArray,Aa=b.geometry,Ba=Aa.verticesNeedUpdate,Ca=Aa.elementsNeedUpdate,Da=Aa.uvsNeedUpdate,Ea=Aa.normalsNeedUpdate,Fa=Aa.tangentsNeedUpdate,Ga=Aa.colorsNeedUpdate,Ha=Aa.morphTargetsNeedUpdate,Ia=Aa.vertices,Ja=a.faces3,Ka=Aa.faces,Ma=Aa.faceVertexUvs[0],Na=Aa.faceVertexUvs[1],Oa=(Aa.colors,Aa.skinIndices),Pa=Aa.skinWeights,Qa=Aa.morphTargets,Ra=Aa.morphNormals;if(Ba){for(f=0,g=Ja.length;f<g;f++)i=Ka[Ja[f]],t=Ia[i.a],u=Ia[i.b],v=Ia[i.c],na[ba]=t.x,na[ba+1]=t.y,na[ba+2]=t.z,na[ba+3]=u.x,na[ba+4]=u.y,na[ba+5]=u.z,na[ba+6]=v.x,na[ba+7]=v.y,na[ba+8]=v.z,ba+=9;La.bindBuffer(La.ARRAY_BUFFER,a.__webglVertexBuffer),La.bufferData(La.ARRAY_BUFFER,na,c)}if(Ha)for(Q=0,R=Qa.length;Q<R;Q++){for(ka=0,f=0,g=Ja.length;f<g;f++)U=Ja[f],i=Ka[U],t=Qa[Q].vertices[i.a],u=Qa[Q].vertices[i.b],v=Qa[Q].vertices[i.c],S=va[Q],S[ka]=t.x,S[ka+1]=t.y,S[ka+2]=t.z,S[ka+3]=u.x,S[ka+4]=u.y,S[ka+5]=u.z,S[ka+6]=v.x,S[ka+7]=v.y,S[ka+8]=v.z,e.morphNormals&&(_?(V=Ra[Q].vertexNormals[U],z=V.a,A=V.b,B=V.c):(z=Ra[Q].faceNormals[U],A=z,B=z),T=wa[Q],T[ka]=z.x,T[ka+1]=z.y,T[ka+2]=z.z,T[ka+3]=A.x,T[ka+4]=A.y,T[ka+5]=A.z,T[ka+6]=B.x,T[ka+7]=B.y,T[ka+8]=B.z),ka+=9;La.bindBuffer(La.ARRAY_BUFFER,a.__webglMorphTargetsBuffers[Q]),La.bufferData(La.ARRAY_BUFFER,va[Q],c),e.morphNormals&&(La.bindBuffer(La.ARRAY_BUFFER,a.__webglMorphNormalsBuffers[Q]),La.bufferData(La.ARRAY_BUFFER,wa[Q],c))}if(Pa.length){for(f=0,g=Ja.length;f<g;f++)i=Ka[Ja[f]],F=Pa[i.a],G=Pa[i.b],H=Pa[i.c],ua[ja]=F.x,ua[ja+1]=F.y,ua[ja+2]=F.z,ua[ja+3]=F.w,ua[ja+4]=G.x,ua[ja+5]=G.y,ua[ja+6]=G.z,ua[ja+7]=G.w,ua[ja+8]=H.x,ua[ja+9]=H.y,ua[ja+10]=H.z,ua[ja+11]=H.w,I=Oa[i.a],J=Oa[i.b],K=Oa[i.c],ta[ja]=I.x,ta[ja+1]=I.y,ta[ja+2]=I.z,ta[ja+3]=I.w,ta[ja+4]=J.x,ta[ja+5]=J.y,ta[ja+6]=J.z,ta[ja+7]=J.w,ta[ja+8]=K.x,ta[ja+9]=K.y,ta[ja+10]=K.z,ta[ja+11]=K.w,ja+=12;ja>0&&(La.bindBuffer(La.ARRAY_BUFFER,a.__webglSkinIndicesBuffer),La.bufferData(La.ARRAY_BUFFER,ta,c),La.bindBuffer(La.ARRAY_BUFFER,a.__webglSkinWeightsBuffer),La.bufferData(La.ARRAY_BUFFER,ua,c))}if(Ga&&Z){for(f=0,g=Ja.length;f<g;f++)i=Ka[Ja[f]],l=i.vertexColors,p=i.color,3===l.length&&Z===THREE.VertexColors?(C=l[0],D=l[1],E=l[2]):(C=p,D=p,E=p),sa[ia]=C.r,sa[ia+1]=C.g,sa[ia+2]=C.b,sa[ia+3]=D.r,sa[ia+4]=D.g,sa[ia+5]=D.b,sa[ia+6]=E.r,sa[ia+7]=E.g,sa[ia+8]=E.b,ia+=9;ia>0&&(La.bindBuffer(La.ARRAY_BUFFER,a.__webglColorBuffer),La.bufferData(La.ARRAY_BUFFER,sa,c))}if(Fa&&Aa.hasTangents){for(f=0,g=Ja.length;f<g;f++)i=Ka[Ja[f]],q=i.vertexTangents,w=q[0],x=q[1],y=q[2],ra[ga]=w.x,ra[ga+1]=w.y,ra[ga+2]=w.z,ra[ga+3]=w.w,ra[ga+4]=x.x,ra[ga+5]=x.y,ra[ga+6]=x.z,ra[ga+7]=x.w,ra[ga+8]=y.x,ra[ga+9]=y.y,ra[ga+10]=y.z,ra[ga+11]=y.w,ga+=12;La.bindBuffer(La.ARRAY_BUFFER,a.__webglTangentBuffer),La.bufferData(La.ARRAY_BUFFER,ra,c)}if(Ea&&Y){for(f=0,g=Ja.length;f<g;f++)if(i=Ka[Ja[f]],j=i.vertexNormals,k=i.normal,3===j.length&&_)for(L=0;L<3;L++)N=j[L],qa[fa]=N.x,qa[fa+1]=N.y,qa[fa+2]=N.z,fa+=3;else for(L=0;L<3;L++)qa[fa]=k.x,qa[fa+1]=k.y,qa[fa+2]=k.z,fa+=3;La.bindBuffer(La.ARRAY_BUFFER,a.__webglNormalBuffer),La.bufferData(La.ARRAY_BUFFER,qa,c)}if(Da&&Ma&&$){for(f=0,g=Ja.length;f<g;f++)if(h=Ja[f],r=Ma[h],void 0!==r)for(L=0;L<3;L++)O=r[L],oa[ca]=O.x,oa[ca+1]=O.y,ca+=2;ca>0&&(La.bindBuffer(La.ARRAY_BUFFER,a.__webglUVBuffer),La.bufferData(La.ARRAY_BUFFER,oa,c))}if(Da&&Na&&$){for(f=0,g=Ja.length;f<g;f++)if(h=Ja[f],s=Na[h],void 0!==s)for(L=0;L<3;L++)P=s[L],pa[da]=P.x,pa[da+1]=P.y,da+=2;da>0&&(La.bindBuffer(La.ARRAY_BUFFER,a.__webglUV2Buffer),La.bufferData(La.ARRAY_BUFFER,pa,c))}if(Ca){for(f=0,g=Ja.length;f<g;f++)ya[ea]=aa,ya[ea+1]=aa+1,ya[ea+2]=aa+2,ea+=3,za[ha]=aa,za[ha+1]=aa+1,za[ha+2]=aa,za[ha+3]=aa+2,za[ha+4]=aa+1,za[ha+5]=aa+2,ha+=6,aa+=3;La.bindBuffer(La.ELEMENT_ARRAY_BUFFER,a.__webglFaceBuffer),La.bufferData(La.ELEMENT_ARRAY_BUFFER,ya,c),La.bindBuffer(La.ELEMENT_ARRAY_BUFFER,a.__webglLineBuffer),La.bufferData(La.ELEMENT_ARRAY_BUFFER,za,c)}if(xa)for(L=0,M=xa.length;L<M;L++)if(X=xa[L],X.__original.needsUpdate){if(la=0,ma=0,1===X.size){if(void 0===X.boundTo||"vertices"===X.boundTo)for(f=0,g=Ja.length;f<g;f++)i=Ka[Ja[f]],X.array[la]=X.value[i.a],X.array[la+1]=X.value[i.b],X.array[la+2]=X.value[i.c],la+=3;else if("faces"===X.boundTo)for(f=0,g=Ja.length;f<g;f++)W=X.value[Ja[f]],X.array[la]=W,X.array[la+1]=W,X.array[la+2]=W,la+=3}else if(2===X.size){if(void 0===X.boundTo||"vertices"===X.boundTo)for(f=0,g=Ja.length;f<g;f++)i=Ka[Ja[f]],t=X.value[i.a],u=X.value[i.b],v=X.value[i.c],X.array[la]=t.x,X.array[la+1]=t.y,X.array[la+2]=u.x,X.array[la+3]=u.y,X.array[la+4]=v.x,X.array[la+5]=v.y,la+=6;else if("faces"===X.boundTo)for(f=0,g=Ja.length;f<g;f++)W=X.value[Ja[f]],t=W,u=W,v=W,X.array[la]=t.x,X.array[la+1]=t.y,X.array[la+2]=u.x,X.array[la+3]=u.y,X.array[la+4]=v.x,X.array[la+5]=v.y,la+=6}else if(3===X.size){var Sa;if(Sa="c"===X.type?["r","g","b"]:["x","y","z"],void 0===X.boundTo||"vertices"===X.boundTo)for(f=0,g=Ja.length;f<g;f++)i=Ka[Ja[f]],t=X.value[i.a],u=X.value[i.b],v=X.value[i.c],X.array[la]=t[Sa[0]],X.array[la+1]=t[Sa[1]],X.array[la+2]=t[Sa[2]],X.array[la+3]=u[Sa[0]],X.array[la+4]=u[Sa[1]],X.array[la+5]=u[Sa[2]],X.array[la+6]=v[Sa[0]],X.array[la+7]=v[Sa[1]],X.array[la+8]=v[Sa[2]],la+=9;else if("faces"===X.boundTo)for(f=0,g=Ja.length;f<g;f++)W=X.value[Ja[f]],t=W,u=W,v=W,X.array[la]=t[Sa[0]],X.array[la+1]=t[Sa[1]],X.array[la+2]=t[Sa[2]],X.array[la+3]=u[Sa[0]],X.array[la+4]=u[Sa[1]],X.array[la+5]=u[Sa[2]],X.array[la+6]=v[Sa[0]],X.array[la+7]=v[Sa[1]],X.array[la+8]=v[Sa[2]],la+=9;else if("faceVertices"===X.boundTo)for(f=0,g=Ja.length;f<g;f++)W=X.value[Ja[f]],t=W[0],u=W[1],v=W[2],X.array[la]=t[Sa[0]],X.array[la+1]=t[Sa[1]],X.array[la+2]=t[Sa[2]],X.array[la+3]=u[Sa[0]],X.array[la+4]=u[Sa[1]],X.array[la+5]=u[Sa[2]],X.array[la+6]=v[Sa[0]],X.array[la+7]=v[Sa[1]],X.array[la+8]=v[Sa[2]],la+=9}else if(4===X.size)if(void 0===X.boundTo||"vertices"===X.boundTo)for(f=0,g=Ja.length;f<g;f++)i=Ka[Ja[f]],t=X.value[i.a],u=X.value[i.b],v=X.value[i.c],X.array[la]=t.x,X.array[la+1]=t.y,X.array[la+2]=t.z,X.array[la+3]=t.w,X.array[la+4]=u.x,X.array[la+5]=u.y,X.array[la+6]=u.z,X.array[la+7]=u.w,X.array[la+8]=v.x,X.array[la+9]=v.y,X.array[la+10]=v.z,X.array[la+11]=v.w,la+=12;else if("faces"===X.boundTo)for(f=0,g=Ja.length;f<g;f++)W=X.value[Ja[f]],t=W,u=W,v=W,X.array[la]=t.x,X.array[la+1]=t.y,X.array[la+2]=t.z,X.array[la+3]=t.w,X.array[la+4]=u.x,X.array[la+5]=u.y,X.array[la+6]=u.z,X.array[la+7]=u.w,X.array[la+8]=v.x,X.array[la+9]=v.y,X.array[la+10]=v.z,X.array[la+11]=v.w,la+=12;else if("faceVertices"===X.boundTo)for(f=0,g=Ja.length;f<g;f++)W=X.value[Ja[f]],t=W[0],u=W[1],v=W[2],X.array[la]=t.x,X.array[la+1]=t.y,X.array[la+2]=t.z,X.array[la+3]=t.w,X.array[la+4]=u.x,X.array[la+5]=u.y,X.array[la+6]=u.z,X.array[la+7]=u.w,X.array[la+8]=v.x,X.array[la+9]=v.y,X.array[la+10]=v.z,X.array[la+11]=v.w,la+=12;La.bindBuffer(La.ARRAY_BUFFER,X.buffer),La.bufferData(La.ARRAY_BUFFER,X.array,c)}d&&(delete a.__inittedArrays,delete a.__colorArray,delete a.__normalArray,delete a.__tangentArray,delete a.__uvArray,delete a.__uv2Array,delete a.__faceArray,delete a.__vertexArray,delete a.__lineArray,delete a.__skinIndexArray,delete a.__skinWeightArray)}}function u(a,b,c){var d,e,f=a.attributes;for(d in f)e=f[d],e.needsUpdate&&("index"===d?(La.bindBuffer(La.ELEMENT_ARRAY_BUFFER,e.buffer),La.bufferData(La.ELEMENT_ARRAY_BUFFER,e.array,b)):(La.bindBuffer(La.ARRAY_BUFFER,e.buffer),La.bufferData(La.ARRAY_BUFFER,e.array,b)),e.needsUpdate=!1),c&&!e.dynamic&&(e.array=null)}function v(a){rb[a]||(La.enableVertexAttribArray(a),rb[a]=!0)}function w(){for(var a in rb)rb[a]&&(La.disableVertexAttribArray(a),rb[a]=!1)}function x(a,b,c){var d=a.program.attributes;if(c.morphTargetBase!==-1&&d.position>=0?(La.bindBuffer(La.ARRAY_BUFFER,b.__webglMorphTargetsBuffers[c.morphTargetBase]),v(d.position),La.vertexAttribPointer(d.position,3,La.FLOAT,!1,0,0)):d.position>=0&&(La.bindBuffer(La.ARRAY_BUFFER,b.__webglVertexBuffer),v(d.position),La.vertexAttribPointer(d.position,3,La.FLOAT,!1,0,0)),c.morphTargetForcedOrder.length)for(var e=0,f=c.morphTargetForcedOrder,g=c.morphTargetInfluences;e<a.numSupportedMorphTargets&&e<f.length;)d["morphTarget"+e]>=0&&(La.bindBuffer(La.ARRAY_BUFFER,b.__webglMorphTargetsBuffers[f[e]]),v(d["morphTarget"+e]),La.vertexAttribPointer(d["morphTarget"+e],3,La.FLOAT,!1,0,0)),d["morphNormal"+e]>=0&&a.morphNormals&&(La.bindBuffer(La.ARRAY_BUFFER,b.__webglMorphNormalsBuffers[f[e]]),v(d["morphNormal"+e]),La.vertexAttribPointer(d["morphNormal"+e],3,La.FLOAT,!1,0,0)),c.__webglMorphTargetInfluences[e]=g[f[e]],e++;else{var h,i,j=[],g=c.morphTargetInfluences,k=g.length;for(i=0;i<k;i++)h=g[i],h>0&&j.push([h,i]);j.length>a.numSupportedMorphTargets?(j.sort(z),j.length=a.numSupportedMorphTargets):j.length>a.numSupportedMorphNormals?j.sort(z):0===j.length&&j.push([0,0]);for(var l,e=0;e<a.numSupportedMorphTargets;)j[e]?(l=j[e][1],d["morphTarget"+e]>=0&&(La.bindBuffer(La.ARRAY_BUFFER,b.__webglMorphTargetsBuffers[l]),v(d["morphTarget"+e]),La.vertexAttribPointer(d["morphTarget"+e],3,La.FLOAT,!1,0,0)),d["morphNormal"+e]>=0&&a.morphNormals&&(La.bindBuffer(La.ARRAY_BUFFER,b.__webglMorphNormalsBuffers[l]),v(d["morphNormal"+e]),La.vertexAttribPointer(d["morphNormal"+e],3,La.FLOAT,!1,0,0)),c.__webglMorphTargetInfluences[e]=g[l]):c.__webglMorphTargetInfluences[e]=0,e++}null!==a.program.uniforms.morphTargetInfluences&&La.uniform1fv(a.program.uniforms.morphTargetInfluences,c.__webglMorphTargetInfluences)}function y(a,b){return a.z!==b.z?b.z-a.z:a.id-b.id}function z(a,b){return b[0]-a[0]}function A(a,b,c){if(a.length)for(var d=0,e=a.length;d<e;d++)Ua=null,Ya=null,bb=-1,fb=-1,gb=-1,_a=-1,ab=-1,Xa=-1,Wa=-1,xb=!0,a[d].render(b,c,pb,qb),Ua=null,Ya=null,bb=-1,fb=-1,gb=-1,_a=-1,ab=-1,Xa=-1,Wa=-1,xb=!0}function B(a,b,c,d,e,f,g,h){var i,j,k,l,m,n,o;b?(m=a.length-1,n=-1,o=-1):(m=0,n=a.length,o=1);for(var p=m;p!==n;p+=o)if(i=a[p],i.render){if(j=i.object,k=i.buffer,h)l=h;else{if(l=i[c],!l)continue;g&&Ra.setBlending(l.blending,l.blendEquation,l.blendSrc,l.blendDst),Ra.setDepthTest(l.depthTest),Ra.setDepthWrite(l.depthWrite),ga(l.polygonOffset,l.polygonOffsetFactor,l.polygonOffsetUnits)}Ra.setMaterialFaces(l),k instanceof THREE.BufferGeometry?Ra.renderBufferDirect(d,e,f,l,k,j):Ra.renderBuffer(d,e,f,l,k,j)}}function C(a,b,c,d,e,f,g){for(var h,i,j,k=0,l=a.length;k<l;k++)if(h=a[k],i=h.object,i.visible){if(g)j=g;else{if(j=h[b],!j)continue;f&&Ra.setBlending(j.blending,j.blendEquation,j.blendSrc,j.blendDst),Ra.setDepthTest(j.depthTest),Ra.setDepthWrite(j.depthWrite),ga(j.polygonOffset,j.polygonOffsetFactor,j.polygonOffsetUnits)}Ra.renderImmediateObject(c,d,e,j,i)}}function D(a){var b=a.object,c=b.material;c.transparent?(a.transparent=c,a.opaque=null):(a.opaque=c,a.transparent=null)}function E(a){var b,c,d,e=a.object,f=a.buffer;d=e.material,d instanceof THREE.MeshFaceMaterial?(c=f.materialIndex,b=d.materials[c],b.transparent?(a.transparent=b,a.opaque=null):(a.opaque=b,a.transparent=null)):(b=d,b&&(b.transparent?(a.transparent=b,a.opaque=null):(a.opaque=b,a.transparent=null)))}function F(a,b){var c,d,e,f,g,h,i={},j=a.morphTargets.length,k=a.morphNormals.length,l=b instanceof THREE.MeshFaceMaterial;for(a.geometryGroups={},c=0,d=a.faces.length;c<d;c++)e=a.faces[c],f=l?e.materialIndex:0,void 0===i[f]&&(i[f]={hash:f,counter:0}),h=i[f].hash+"_"+i[f].counter,void 0===a.geometryGroups[h]&&(a.geometryGroups[h]={faces3:[],materialIndex:f,vertices:0,numMorphTargets:j,numMorphNormals:k}),g=3,a.geometryGroups[h].vertices+g>65535&&(i[f].counter+=1,h=i[f].hash+"_"+i[f].counter,void 0===a.geometryGroups[h]&&(a.geometryGroups[h]={faces3:[],materialIndex:f,vertices:0,numMorphTargets:j,numMorphNormals:k})),a.geometryGroups[h].faces3.push(c),a.geometryGroups[h].vertices+=g;a.geometryGroupsList=[];for(var m in a.geometryGroups)a.geometryGroups[m].id=Za++,a.geometryGroupsList.push(a.geometryGroups[m])}function G(a,f){var k,l,m,n;if(void 0===a.__webglInit)if(a.__webglInit=!0,a._modelViewMatrix=new THREE.Matrix4,a._normalMatrix=new THREE.Matrix3,void 0!==a.geometry&&void 0===a.geometry.__webglInit&&(a.geometry.__webglInit=!0,a.geometry.addEventListener("dispose",Lb)),l=a.geometry,void 0===l);else if(l instanceof THREE.BufferGeometry)p(l);else if(a instanceof THREE.Mesh){m=a.material,void 0===l.geometryGroups&&F(l,m);for(k in l.geometryGroups)n=l.geometryGroups[k],n.__webglVertexBuffer||(e(n),j(n,a),l.verticesNeedUpdate=!0,l.morphTargetsNeedUpdate=!0,l.elementsNeedUpdate=!0,l.uvsNeedUpdate=!0,l.normalsNeedUpdate=!0,l.tangentsNeedUpdate=!0,l.colorsNeedUpdate=!0)}else a instanceof THREE.Ribbon?l.__webglVertexBuffer||(d(l),i(l,a),l.verticesNeedUpdate=!0,l.colorsNeedUpdate=!0,l.normalsNeedUpdate=!0):a instanceof THREE.Line?l.__webglVertexBuffer||(c(l),h(l,a),l.verticesNeedUpdate=!0,l.colorsNeedUpdate=!0,l.lineDistancesNeedUpdate=!0):a instanceof THREE.ParticleSystem&&(l.__webglVertexBuffer||(b(l),g(l,a),l.verticesNeedUpdate=!0,l.colorsNeedUpdate=!0));if(void 0===a.__webglActive){if(a instanceof THREE.Mesh){if(l=a.geometry,l instanceof THREE.BufferGeometry)H(f.__webglObjects,l,a);else if(l instanceof THREE.Geometry)for(k in l.geometryGroups)n=l.geometryGroups[k],H(f.__webglObjects,n,a)}else a instanceof THREE.Ribbon||a instanceof THREE.Line||a instanceof THREE.ParticleSystem?(l=a.geometry,H(f.__webglObjects,l,a)):a instanceof THREE.ImmediateRenderObject||a.immediateRenderCallback?I(f.__webglObjectsImmediate,a):a instanceof THREE.Sprite?f.__webglSprites.push(a):a instanceof THREE.LensFlare&&f.__webglFlares.push(a);a.__webglActive=!0}}function H(a,b,c){a.push({id:null,buffer:b,object:c,opaque:null,transparent:null,z:0})}function I(a,b){a.push({id:null,object:b,opaque:null,transparent:null,z:0})}function J(a){var b,c,d,e=a.geometry;if(e instanceof THREE.BufferGeometry)u(e,La.DYNAMIC_DRAW,!e.dynamic);else if(a instanceof THREE.Mesh){for(var f=0,g=e.geometryGroupsList.length;f<g;f++)b=e.geometryGroupsList[f],d=k(a,b),e.buffersNeedUpdate&&j(b,a),c=d.attributes&&K(d),(e.verticesNeedUpdate||e.morphTargetsNeedUpdate||e.elementsNeedUpdate||e.uvsNeedUpdate||e.normalsNeedUpdate||e.colorsNeedUpdate||e.tangentsNeedUpdate||c)&&t(b,a,La.DYNAMIC_DRAW,!e.dynamic,d);e.verticesNeedUpdate=!1,e.morphTargetsNeedUpdate=!1,e.elementsNeedUpdate=!1,e.uvsNeedUpdate=!1,e.normalsNeedUpdate=!1,e.colorsNeedUpdate=!1,e.tangentsNeedUpdate=!1,e.buffersNeedUpdate=!1,d.attributes&&L(d)}else a instanceof THREE.Ribbon?(d=k(a,e),c=d.attributes&&K(d),(e.verticesNeedUpdate||e.colorsNeedUpdate||e.normalsNeedUpdate||c)&&s(e,La.DYNAMIC_DRAW),e.verticesNeedUpdate=!1,e.colorsNeedUpdate=!1,e.normalsNeedUpdate=!1,d.attributes&&L(d)):a instanceof THREE.Line?(d=k(a,e),c=d.attributes&&K(d),(e.verticesNeedUpdate||e.colorsNeedUpdate||e.lineDistancesNeedUpdate||c)&&r(e,La.DYNAMIC_DRAW),e.verticesNeedUpdate=!1,e.colorsNeedUpdate=!1,e.lineDistancesNeedUpdate=!1,d.attributes&&L(d)):a instanceof THREE.ParticleSystem&&(d=k(a,e),c=d.attributes&&K(d),(e.verticesNeedUpdate||e.colorsNeedUpdate||a.sortParticles||c)&&q(e,La.DYNAMIC_DRAW,a),e.verticesNeedUpdate=!1,e.colorsNeedUpdate=!1,d.attributes&&L(d))}function K(a){for(var b in a.attributes)if(a.attributes[b].needsUpdate)return!0;return!1}function L(a){for(var b in a.attributes)a.attributes[b].needsUpdate=!1}function M(a,b){a instanceof THREE.Mesh||a instanceof THREE.ParticleSystem||a instanceof THREE.Ribbon||a instanceof THREE.Line?N(b.__webglObjects,a):a instanceof THREE.Sprite?O(b.__webglSprites,a):a instanceof THREE.LensFlare?O(b.__webglFlares,a):(a instanceof THREE.ImmediateRenderObject||a.immediateRenderCallback)&&N(b.__webglObjectsImmediate,a),delete a.__webglActive}function N(a,b){for(var c=a.length-1;c>=0;c--)a[c].object===b&&a.splice(c,1)}function O(a,b){for(var c=a.length-1;c>=0;c--)a[c]===b&&a.splice(c,1)}function P(a,b){a.uniforms=THREE.UniformsUtils.clone(b.uniforms),a.vertexShader=b.vertexShader,a.fragmentShader=b.fragmentShader}function Q(a,b,c,d,e){$a=0,d.needsUpdate&&(d.program&&Tb(d),Ra.initMaterial(d,b,c,e),d.needsUpdate=!1),d.morphTargets&&(e.__webglMorphTargetInfluences||(e.__webglMorphTargetInfluences=new Float32Array(Ra.maxMorphTargets)));var f=!1,g=d.program,h=g.uniforms,i=d.uniforms;if(g!==Ua&&(La.useProgram(g),Ua=g,f=!0),d.id!==Wa&&(Wa=d.id,f=!0),(f||a!==Ya)&&(La.uniformMatrix4fv(h.projectionMatrix,!1,a.projectionMatrix.elements),a!==Ya&&(Ya=a)),d.skinning)if(Eb&&e.useVertexTexture){if(null!==h.boneTexture){var j=_();La.uniform1i(h.boneTexture,j),Ra.setTexture(e.boneTexture,j)}}else null!==h.boneGlobalMatrices&&La.uniformMatrix4fv(h.boneGlobalMatrices,!1,e.boneMatrices);return f&&(c&&d.fog&&V(i,c),(d instanceof THREE.MeshPhongMaterial||d instanceof THREE.MeshLambertMaterial||d.lights)&&(xb&&(ea(g,b),xb=!1),Y(i,yb)),(d instanceof THREE.MeshBasicMaterial||d instanceof THREE.MeshLambertMaterial||d instanceof THREE.MeshPhongMaterial)&&R(i,d),d instanceof THREE.LineBasicMaterial?S(i,d):d instanceof THREE.LineDashedMaterial?(S(i,d),T(i,d)):d instanceof THREE.ParticleBasicMaterial?U(i,d):d instanceof THREE.MeshPhongMaterial?W(i,d):d instanceof THREE.MeshLambertMaterial?X(i,d):d instanceof THREE.MeshDepthMaterial?(i.mNear.value=a.near,i.mFar.value=a.far,i.opacity.value=d.opacity):d instanceof THREE.MeshNormalMaterial&&(i.opacity.value=d.opacity),e.receiveShadow&&!d._shadowPass&&Z(i,b),aa(g,d.uniformsList),(d instanceof THREE.ShaderMaterial||d instanceof THREE.MeshPhongMaterial||d.envMap)&&null!==h.cameraPosition&&(vb.getPositionFromMatrix(a.matrixWorld),La.uniform3f(h.cameraPosition,vb.x,vb.y,vb.z)),(d instanceof THREE.MeshPhongMaterial||d instanceof THREE.MeshLambertMaterial||d instanceof THREE.ShaderMaterial||d.skinning)&&null!==h.viewMatrix&&La.uniformMatrix4fv(h.viewMatrix,!1,a.matrixWorldInverse.elements)),$(h,e),null!==h.modelMatrix&&La.uniformMatrix4fv(h.modelMatrix,!1,e.matrixWorld.elements),g}function R(a,b){a.opacity.value=b.opacity,Ra.gammaInput?a.diffuse.value.copyGammaToLinear(b.color):a.diffuse.value=b.color,a.map.value=b.map,a.lightMap.value=b.lightMap,a.specularMap.value=b.specularMap,b.bumpMap&&(a.bumpMap.value=b.bumpMap,a.bumpScale.value=b.bumpScale),b.normalMap&&(a.normalMap.value=b.normalMap,a.normalScale.value.copy(b.normalScale));var c;if(b.map?c=b.map:b.specularMap?c=b.specularMap:b.normalMap?c=b.normalMap:b.bumpMap&&(c=b.bumpMap),void 0!==c){var d=c.offset,e=c.repeat;a.offsetRepeat.value.set(d.x,d.y,e.x,e.y)}a.envMap.value=b.envMap,a.flipEnvMap.value=b.envMap instanceof THREE.WebGLRenderTargetCube?1:-1,Ra.gammaInput?a.reflectivity.value=b.reflectivity:a.reflectivity.value=b.reflectivity,a.refractionRatio.value=b.refractionRatio,a.combine.value=b.combine,a.useRefract.value=b.envMap&&b.envMap.mapping instanceof THREE.CubeRefractionMapping}function S(a,b){a.diffuse.value=b.color,
a.opacity.value=b.opacity}function T(a,b){a.dashSize.value=b.dashSize,a.totalSize.value=b.dashSize+b.gapSize,a.scale.value=b.scale}function U(a,b){a.psColor.value=b.color,a.opacity.value=b.opacity,a.size.value=b.size,a.scale.value=Ca.height/2,a.map.value=b.map}function V(a,b){a.fogColor.value=b.color,b instanceof THREE.Fog?(a.fogNear.value=b.near,a.fogFar.value=b.far):b instanceof THREE.FogExp2&&(a.fogDensity.value=b.density)}function W(a,b){a.shininess.value=b.shininess,Ra.gammaInput?(a.ambient.value.copyGammaToLinear(b.ambient),a.emissive.value.copyGammaToLinear(b.emissive),a.specular.value.copyGammaToLinear(b.specular)):(a.ambient.value=b.ambient,a.emissive.value=b.emissive,a.specular.value=b.specular),b.wrapAround&&a.wrapRGB.value.copy(b.wrapRGB)}function X(a,b){Ra.gammaInput?(a.ambient.value.copyGammaToLinear(b.ambient),a.emissive.value.copyGammaToLinear(b.emissive)):(a.ambient.value=b.ambient,a.emissive.value=b.emissive),b.wrapAround&&a.wrapRGB.value.copy(b.wrapRGB)}function Y(a,b){a.ambientLightColor.value=b.ambient,a.directionalLightColor.value=b.directional.colors,a.directionalLightDirection.value=b.directional.positions,a.pointLightColor.value=b.point.colors,a.pointLightPosition.value=b.point.positions,a.pointLightDistance.value=b.point.distances,a.spotLightColor.value=b.spot.colors,a.spotLightPosition.value=b.spot.positions,a.spotLightDistance.value=b.spot.distances,a.spotLightDirection.value=b.spot.directions,a.spotLightAngleCos.value=b.spot.anglesCos,a.spotLightExponent.value=b.spot.exponents,a.hemisphereLightSkyColor.value=b.hemi.skyColors,a.hemisphereLightGroundColor.value=b.hemi.groundColors,a.hemisphereLightDirection.value=b.hemi.positions}function Z(a,b){if(a.shadowMatrix)for(var c=0,d=0,e=b.length;d<e;d++){var f=b[d];f.castShadow&&(f instanceof THREE.SpotLight||f instanceof THREE.DirectionalLight&&!f.shadowCascade)&&(a.shadowMap.value[c]=f.shadowMap,a.shadowMapSize.value[c]=f.shadowMapSize,a.shadowMatrix.value[c]=f.shadowMatrix,a.shadowDarkness.value[c]=f.shadowDarkness,a.shadowBias.value[c]=f.shadowBias,c++)}}function $(a,b){La.uniformMatrix4fv(a.modelViewMatrix,!1,b._modelViewMatrix.elements),a.normalMatrix&&La.uniformMatrix3fv(a.normalMatrix,!1,b._normalMatrix.elements)}function _(){var a=$a;return a>=zb&&console.warn("WebGLRenderer: trying to use "+a+" texture units while this GPU supports only "+zb),$a+=1,a}function aa(a,b){var c,d,e,f,g,h,i,j,k,l,m;for(k=0,l=b.length;k<l;k++)if(f=a.uniforms[b[k][1]])if(c=b[k][0],e=c.type,d=c.value,"i"===e)La.uniform1i(f,d);else if("f"===e)La.uniform1f(f,d);else if("v2"===e)La.uniform2f(f,d.x,d.y);else if("v3"===e)La.uniform3f(f,d.x,d.y,d.z);else if("v4"===e)La.uniform4f(f,d.x,d.y,d.z,d.w);else if("c"===e)La.uniform3f(f,d.r,d.g,d.b);else if("iv1"===e)La.uniform1iv(f,d);else if("iv"===e)La.uniform3iv(f,d);else if("fv1"===e)La.uniform1fv(f,d);else if("fv"===e)La.uniform3fv(f,d);else if("v2v"===e){for(void 0===c._array&&(c._array=new Float32Array(2*d.length)),i=0,j=d.length;i<j;i++)m=2*i,c._array[m]=d[i].x,c._array[m+1]=d[i].y;La.uniform2fv(f,c._array)}else if("v3v"===e){for(void 0===c._array&&(c._array=new Float32Array(3*d.length)),i=0,j=d.length;i<j;i++)m=3*i,c._array[m]=d[i].x,c._array[m+1]=d[i].y,c._array[m+2]=d[i].z;La.uniform3fv(f,c._array)}else if("v4v"===e){for(void 0===c._array&&(c._array=new Float32Array(4*d.length)),i=0,j=d.length;i<j;i++)m=4*i,c._array[m]=d[i].x,c._array[m+1]=d[i].y,c._array[m+2]=d[i].z,c._array[m+3]=d[i].w;La.uniform4fv(f,c._array)}else if("m4"===e)void 0===c._array&&(c._array=new Float32Array(16)),d.flattenToArray(c._array),La.uniformMatrix4fv(f,!1,c._array);else if("m4v"===e){for(void 0===c._array&&(c._array=new Float32Array(16*d.length)),i=0,j=d.length;i<j;i++)d[i].flattenToArrayOffset(c._array,16*i);La.uniformMatrix4fv(f,!1,c._array)}else if("t"===e){if(g=d,h=_(),La.uniform1i(f,h),!g)continue;g.image instanceof Array&&6===g.image.length?qa(g,h):g instanceof THREE.WebGLRenderTargetCube?ra(g,h):Ra.setTexture(g,h)}else if("tv"===e){for(void 0===c._array&&(c._array=[]),i=0,j=c.value.length;i<j;i++)c._array[i]=_();for(La.uniform1iv(f,c._array),i=0,j=c.value.length;i<j;i++)g=c.value[i],h=c._array[i],g&&Ra.setTexture(g,h)}else console.warn("THREE.WebGLRenderer: Unknown uniform type: "+e)}function ba(a,b){a._modelViewMatrix.multiplyMatrices(b.matrixWorldInverse,a.matrixWorld),a._normalMatrix.getNormalMatrix(a._modelViewMatrix)}function ca(a,b,c,d){a[b]=c.r*c.r*d,a[b+1]=c.g*c.g*d,a[b+2]=c.b*c.b*d}function da(a,b,c,d){a[b]=c.r*d,a[b+1]=c.g*d,a[b+2]=c.b*d}function ea(a,b){var c,d,e,f,g,h,i,j,k,l=0,m=0,n=0,o=yb,p=o.directional.colors,q=o.directional.positions,r=o.point.colors,s=o.point.positions,t=o.point.distances,u=o.spot.colors,v=o.spot.positions,w=o.spot.distances,x=o.spot.directions,y=o.spot.anglesCos,z=o.spot.exponents,A=o.hemi.skyColors,B=o.hemi.groundColors,C=o.hemi.positions,D=0,E=0,F=0,G=0,H=0,I=0,J=0,K=0,L=0,M=0,N=0,O=0;for(c=0,d=b.length;c<d;c++)if(e=b[c],!e.onlyShadow)if(f=e.color,i=e.intensity,k=e.distance,e instanceof THREE.AmbientLight){if(!e.visible)continue;Ra.gammaInput?(l+=f.r*f.r,m+=f.g*f.g,n+=f.b*f.b):(l+=f.r,m+=f.g,n+=f.b)}else if(e instanceof THREE.DirectionalLight){if(H+=1,!e.visible)continue;if(wb.getPositionFromMatrix(e.matrixWorld),vb.getPositionFromMatrix(e.target.matrixWorld),wb.sub(vb),wb.normalize(),0===wb.x&&0===wb.y&&0===wb.z)continue;L=3*D,q[L]=wb.x,q[L+1]=wb.y,q[L+2]=wb.z,Ra.gammaInput?ca(p,L,f,i*i):da(p,L,f,i),D+=1}else if(e instanceof THREE.PointLight){if(I+=1,!e.visible)continue;M=3*E,Ra.gammaInput?ca(r,M,f,i*i):da(r,M,f,i),vb.getPositionFromMatrix(e.matrixWorld),s[M]=vb.x,s[M+1]=vb.y,s[M+2]=vb.z,t[E]=k,E+=1}else if(e instanceof THREE.SpotLight){if(J+=1,!e.visible)continue;N=3*F,Ra.gammaInput?ca(u,N,f,i*i):da(u,N,f,i),vb.getPositionFromMatrix(e.matrixWorld),v[N]=vb.x,v[N+1]=vb.y,v[N+2]=vb.z,w[F]=k,wb.copy(vb),vb.getPositionFromMatrix(e.target.matrixWorld),wb.sub(vb),wb.normalize(),x[N]=wb.x,x[N+1]=wb.y,x[N+2]=wb.z,y[F]=Math.cos(e.angle),z[F]=e.exponent,F+=1}else if(e instanceof THREE.HemisphereLight){if(K+=1,!e.visible)continue;if(wb.getPositionFromMatrix(e.matrixWorld),wb.normalize(),0===wb.x&&0===wb.y&&0===wb.z)continue;O=3*G,C[O]=wb.x,C[O+1]=wb.y,C[O+2]=wb.z,g=e.color,h=e.groundColor,Ra.gammaInput?(j=i*i,ca(A,O,g,j),ca(B,O,h,j)):(da(A,O,g,i),da(B,O,h,i)),G+=1}for(c=3*D,d=Math.max(p.length,3*H);c<d;c++)p[c]=0;for(c=3*E,d=Math.max(r.length,3*I);c<d;c++)r[c]=0;for(c=3*F,d=Math.max(u.length,3*J);c<d;c++)u[c]=0;for(c=3*G,d=Math.max(A.length,3*K);c<d;c++)A[c]=0;for(c=3*G,d=Math.max(B.length,3*K);c<d;c++)B[c]=0;o.directional.length=D,o.point.length=E,o.spot.length=F,o.hemi.length=G,o.ambient[0]=l,o.ambient[1]=m,o.ambient[2]=n}function fa(a){a!==kb&&(La.lineWidth(a),kb=a)}function ga(a,b,c){hb!==a&&(a?La.enable(La.POLYGON_OFFSET_FILL):La.disable(La.POLYGON_OFFSET_FILL),hb=a),!a||ib===b&&jb===c||(La.polygonOffset(b,c),ib=b,jb=c)}function ha(a){var b,c,d=[];for(var e in a)b=a[e],b!==!1&&(c="#define "+e+" "+b,d.push(c));return d.join("\n")}function ia(a,b,c,d,e,f,g,h){var i,j,k,l,m,n=[];a?n.push(a):(n.push(b),n.push(c));for(k in f)n.push(k),n.push(f[k]);for(i in g)n.push(i),n.push(g[i]);for(m=n.join(),i=0,j=Sa.length;i<j;i++){var o=Sa[i];if(o.code===m)return o.usedTimes++,o.program}var p="SHADOWMAP_TYPE_BASIC";g.shadowMapType===THREE.PCFShadowMap?p="SHADOWMAP_TYPE_PCF":g.shadowMapType===THREE.PCFSoftShadowMap&&(p="SHADOWMAP_TYPE_PCF_SOFT");var q=ha(f);l=La.createProgram();var r=["precision "+Da+" float;","precision "+Da+" int;",q,Db?"#define VERTEX_TEXTURES":"",Ra.gammaInput?"#define GAMMA_INPUT":"",Ra.gammaOutput?"#define GAMMA_OUTPUT":"",Ra.physicallyBasedShading?"#define PHYSICALLY_BASED_SHADING":"","#define MAX_DIR_LIGHTS "+g.maxDirLights,"#define MAX_POINT_LIGHTS "+g.maxPointLights,"#define MAX_SPOT_LIGHTS "+g.maxSpotLights,"#define MAX_HEMI_LIGHTS "+g.maxHemiLights,"#define MAX_SHADOWS "+g.maxShadows,"#define MAX_BONES "+g.maxBones,g.map?"#define USE_MAP":"",g.envMap?"#define USE_ENVMAP":"",g.lightMap?"#define USE_LIGHTMAP":"",g.bumpMap?"#define USE_BUMPMAP":"",g.normalMap?"#define USE_NORMALMAP":"",g.specularMap?"#define USE_SPECULARMAP":"",g.vertexColors?"#define USE_COLOR":"",g.skinning?"#define USE_SKINNING":"",g.useVertexTexture?"#define BONE_TEXTURE":"",g.boneTextureWidth?"#define N_BONE_PIXEL_X "+g.boneTextureWidth.toFixed(1):"",g.boneTextureHeight?"#define N_BONE_PIXEL_Y "+g.boneTextureHeight.toFixed(1):"",g.morphTargets?"#define USE_MORPHTARGETS":"",g.morphNormals?"#define USE_MORPHNORMALS":"",g.perPixel?"#define PHONG_PER_PIXEL":"",g.wrapAround?"#define WRAP_AROUND":"",g.doubleSided?"#define DOUBLE_SIDED":"",g.flipSided?"#define FLIP_SIDED":"",g.shadowMapEnabled?"#define USE_SHADOWMAP":"",g.shadowMapEnabled?"#define "+p:"",g.shadowMapDebug?"#define SHADOWMAP_DEBUG":"",g.shadowMapCascade?"#define SHADOWMAP_CASCADE":"",g.sizeAttenuation?"#define USE_SIZEATTENUATION":"","uniform mat4 modelMatrix;","uniform mat4 modelViewMatrix;","uniform mat4 projectionMatrix;","uniform mat4 viewMatrix;","uniform mat3 normalMatrix;","uniform vec3 cameraPosition;","attribute vec3 position;","attribute vec3 normal;","attribute vec2 uv;","attribute vec2 uv2;","#ifdef USE_COLOR","attribute vec3 color;","#endif","#ifdef USE_MORPHTARGETS","attribute vec3 morphTarget0;","attribute vec3 morphTarget1;","attribute vec3 morphTarget2;","attribute vec3 morphTarget3;","#ifdef USE_MORPHNORMALS","attribute vec3 morphNormal0;","attribute vec3 morphNormal1;","attribute vec3 morphNormal2;","attribute vec3 morphNormal3;","#else","attribute vec3 morphTarget4;","attribute vec3 morphTarget5;","attribute vec3 morphTarget6;","attribute vec3 morphTarget7;","#endif","#endif","#ifdef USE_SKINNING","attribute vec4 skinIndex;","attribute vec4 skinWeight;","#endif",""].join("\n"),s=["precision "+Da+" float;","precision "+Da+" int;",g.bumpMap||g.normalMap?"#extension GL_OES_standard_derivatives : enable":"",q,"#define MAX_DIR_LIGHTS "+g.maxDirLights,"#define MAX_POINT_LIGHTS "+g.maxPointLights,"#define MAX_SPOT_LIGHTS "+g.maxSpotLights,"#define MAX_HEMI_LIGHTS "+g.maxHemiLights,"#define MAX_SHADOWS "+g.maxShadows,g.alphaTest?"#define ALPHATEST "+g.alphaTest:"",Ra.gammaInput?"#define GAMMA_INPUT":"",Ra.gammaOutput?"#define GAMMA_OUTPUT":"",Ra.physicallyBasedShading?"#define PHYSICALLY_BASED_SHADING":"",g.useFog&&g.fog?"#define USE_FOG":"",g.useFog&&g.fogExp?"#define FOG_EXP2":"",g.map?"#define USE_MAP":"",g.envMap?"#define USE_ENVMAP":"",g.lightMap?"#define USE_LIGHTMAP":"",g.bumpMap?"#define USE_BUMPMAP":"",g.normalMap?"#define USE_NORMALMAP":"",g.specularMap?"#define USE_SPECULARMAP":"",g.vertexColors?"#define USE_COLOR":"",g.metal?"#define METAL":"",g.perPixel?"#define PHONG_PER_PIXEL":"",g.wrapAround?"#define WRAP_AROUND":"",g.doubleSided?"#define DOUBLE_SIDED":"",g.flipSided?"#define FLIP_SIDED":"",g.shadowMapEnabled?"#define USE_SHADOWMAP":"",g.shadowMapEnabled?"#define "+p:"",g.shadowMapDebug?"#define SHADOWMAP_DEBUG":"",g.shadowMapCascade?"#define SHADOWMAP_CASCADE":"","uniform mat4 viewMatrix;","uniform vec3 cameraPosition;",""].join("\n"),t=ma("vertex",r+c),u=ma("fragment",s+b);La.attachShader(l,t),La.attachShader(l,u),h&&La.bindAttribLocation(l,0,h),La.linkProgram(l),La.getProgramParameter(l,La.LINK_STATUS)||(console.error("Could not initialise shader\nVALIDATE_STATUS: "+La.getProgramParameter(l,La.VALIDATE_STATUS)+", gl error ["+La.getError()+"]"),console.error("Program Info Log: "+La.getProgramInfoLog(l))),La.deleteShader(u),La.deleteShader(t),l.uniforms={},l.attributes={};var v,w,x,y;v=["viewMatrix","modelViewMatrix","projectionMatrix","normalMatrix","modelMatrix","cameraPosition","morphTargetInfluences"],g.useVertexTexture?v.push("boneTexture"):v.push("boneGlobalMatrices");for(w in d)v.push(w);for(ja(l,v),v=["position","normal","uv","uv2","tangent","color","skinIndex","skinWeight","lineDistance"],y=0;y<g.maxMorphTargets;y++)v.push("morphTarget"+y);for(y=0;y<g.maxMorphNormals;y++)v.push("morphNormal"+y);for(x in e)v.push(x);return ka(l,v),l.id=Ta++,Sa.push({program:l,code:m,usedTimes:1}),Ra.info.memory.programs=Sa.length,l}function ja(a,b){var c,d,e;for(c=0,d=b.length;c<d;c++)e=b[c],a.uniforms[e]=La.getUniformLocation(a,e)}function ka(a,b){var c,d,e;for(c=0,d=b.length;c<d;c++)e=b[c],a.attributes[e]=La.getAttribLocation(a,e)}function la(a){for(var b=a.split("\n"),c=0,d=b.length;c<d;c++)b[c]=c+1+": "+b[c];return b.join("\n")}function ma(a,b){var c;return"fragment"===a?c=La.createShader(La.FRAGMENT_SHADER):"vertex"===a&&(c=La.createShader(La.VERTEX_SHADER)),La.shaderSource(c,b),La.compileShader(c),La.getShaderParameter(c,La.COMPILE_STATUS)?c:(console.error(La.getShaderInfoLog(c)),console.error(la(b)),null)}function na(a){return 0===(a&a-1)}function oa(a,b,c){c?(La.texParameteri(a,La.TEXTURE_WRAP_S,wa(b.wrapS)),La.texParameteri(a,La.TEXTURE_WRAP_T,wa(b.wrapT)),La.texParameteri(a,La.TEXTURE_MAG_FILTER,wa(b.magFilter)),La.texParameteri(a,La.TEXTURE_MIN_FILTER,wa(b.minFilter))):(La.texParameteri(a,La.TEXTURE_WRAP_S,La.CLAMP_TO_EDGE),La.texParameteri(a,La.TEXTURE_WRAP_T,La.CLAMP_TO_EDGE),La.texParameteri(a,La.TEXTURE_MAG_FILTER,va(b.magFilter)),La.texParameteri(a,La.TEXTURE_MIN_FILTER,va(b.minFilter))),Pa&&b.type!==THREE.FloatType&&(b.anisotropy>1||b.__oldAnisotropy)&&(La.texParameterf(a,Pa.TEXTURE_MAX_ANISOTROPY_EXT,Math.min(b.anisotropy,Cb)),b.__oldAnisotropy=b.anisotropy)}function pa(a,b){if(a.width<=b&&a.height<=b)return a;var c=Math.max(a.width,a.height),d=Math.floor(a.width*b/c),e=Math.floor(a.height*b/c),f=document.createElement("canvas");f.width=d,f.height=e;var g=f.getContext("2d");return g.drawImage(a,0,0,a.width,a.height,0,0,d,e),f}function qa(a,b){if(6===a.image.length)if(a.needsUpdate){a.image.__webglTextureCube||(a.addEventListener("dispose",Mb),a.image.__webglTextureCube=La.createTexture(),Ra.info.memory.textures++),La.activeTexture(La.TEXTURE0+b),La.bindTexture(La.TEXTURE_CUBE_MAP,a.image.__webglTextureCube),La.pixelStorei(La.UNPACK_FLIP_Y_WEBGL,a.flipY);for(var c=a instanceof THREE.CompressedTexture,d=[],e=0;e<6;e++)Ra.autoScaleCubemaps&&!c?d[e]=pa(a.image[e],Bb):d[e]=a.image[e];var f=d[0],g=na(f.width)&&na(f.height),h=wa(a.format),i=wa(a.type);oa(La.TEXTURE_CUBE_MAP,a,g);for(var e=0;e<6;e++)if(c)for(var j,k=d[e].mipmaps,l=0,m=k.length;l<m;l++)j=k[l],La.compressedTexImage2D(La.TEXTURE_CUBE_MAP_POSITIVE_X+e,l,h,j.width,j.height,0,j.data);else La.texImage2D(La.TEXTURE_CUBE_MAP_POSITIVE_X+e,0,h,h,i,d[e]);a.generateMipmaps&&g&&La.generateMipmap(La.TEXTURE_CUBE_MAP),a.needsUpdate=!1,a.onUpdate&&a.onUpdate()}else La.activeTexture(La.TEXTURE0+b),La.bindTexture(La.TEXTURE_CUBE_MAP,a.image.__webglTextureCube)}function ra(a,b){La.activeTexture(La.TEXTURE0+b),La.bindTexture(La.TEXTURE_CUBE_MAP,a.__webglTexture)}function sa(a,b,c){La.bindFramebuffer(La.FRAMEBUFFER,a),La.framebufferTexture2D(La.FRAMEBUFFER,La.COLOR_ATTACHMENT0,c,b.__webglTexture,0)}function ta(a,b){La.bindRenderbuffer(La.RENDERBUFFER,a),b.depthBuffer&&!b.stencilBuffer?(La.renderbufferStorage(La.RENDERBUFFER,La.DEPTH_COMPONENT16,b.width,b.height),La.framebufferRenderbuffer(La.FRAMEBUFFER,La.DEPTH_ATTACHMENT,La.RENDERBUFFER,a)):b.depthBuffer&&b.stencilBuffer?(La.renderbufferStorage(La.RENDERBUFFER,La.DEPTH_STENCIL,b.width,b.height),La.framebufferRenderbuffer(La.FRAMEBUFFER,La.DEPTH_STENCIL_ATTACHMENT,La.RENDERBUFFER,a)):La.renderbufferStorage(La.RENDERBUFFER,La.RGBA4,b.width,b.height)}function ua(a){a instanceof THREE.WebGLRenderTargetCube?(La.bindTexture(La.TEXTURE_CUBE_MAP,a.__webglTexture),La.generateMipmap(La.TEXTURE_CUBE_MAP),La.bindTexture(La.TEXTURE_CUBE_MAP,null)):(La.bindTexture(La.TEXTURE_2D,a.__webglTexture),La.generateMipmap(La.TEXTURE_2D),La.bindTexture(La.TEXTURE_2D,null))}function va(a){return a===THREE.NearestFilter||a===THREE.NearestMipMapNearestFilter||a===THREE.NearestMipMapLinearFilter?La.NEAREST:La.LINEAR}function wa(a){if(a===THREE.RepeatWrapping)return La.REPEAT;if(a===THREE.ClampToEdgeWrapping)return La.CLAMP_TO_EDGE;if(a===THREE.MirroredRepeatWrapping)return La.MIRRORED_REPEAT;if(a===THREE.NearestFilter)return La.NEAREST;if(a===THREE.NearestMipMapNearestFilter)return La.NEAREST_MIPMAP_NEAREST;if(a===THREE.NearestMipMapLinearFilter)return La.NEAREST_MIPMAP_LINEAR;if(a===THREE.LinearFilter)return La.LINEAR;if(a===THREE.LinearMipMapNearestFilter)return La.LINEAR_MIPMAP_NEAREST;if(a===THREE.LinearMipMapLinearFilter)return La.LINEAR_MIPMAP_LINEAR;if(a===THREE.UnsignedByteType)return La.UNSIGNED_BYTE;if(a===THREE.UnsignedShort4444Type)return La.UNSIGNED_SHORT_4_4_4_4;if(a===THREE.UnsignedShort5551Type)return La.UNSIGNED_SHORT_5_5_5_1;if(a===THREE.UnsignedShort565Type)return La.UNSIGNED_SHORT_5_6_5;if(a===THREE.ByteType)return La.BYTE;if(a===THREE.ShortType)return La.SHORT;if(a===THREE.UnsignedShortType)return La.UNSIGNED_SHORT;if(a===THREE.IntType)return La.INT;if(a===THREE.UnsignedIntType)return La.UNSIGNED_INT;if(a===THREE.FloatType)return La.FLOAT;if(a===THREE.AlphaFormat)return La.ALPHA;if(a===THREE.RGBFormat)return La.RGB;if(a===THREE.RGBAFormat)return La.RGBA;if(a===THREE.LuminanceFormat)return La.LUMINANCE;if(a===THREE.LuminanceAlphaFormat)return La.LUMINANCE_ALPHA;if(a===THREE.AddEquation)return La.FUNC_ADD;if(a===THREE.SubtractEquation)return La.FUNC_SUBTRACT;if(a===THREE.ReverseSubtractEquation)return La.FUNC_REVERSE_SUBTRACT;if(a===THREE.ZeroFactor)return La.ZERO;if(a===THREE.OneFactor)return La.ONE;if(a===THREE.SrcColorFactor)return La.SRC_COLOR;if(a===THREE.OneMinusSrcColorFactor)return La.ONE_MINUS_SRC_COLOR;if(a===THREE.SrcAlphaFactor)return La.SRC_ALPHA;if(a===THREE.OneMinusSrcAlphaFactor)return La.ONE_MINUS_SRC_ALPHA;if(a===THREE.DstAlphaFactor)return La.DST_ALPHA;if(a===THREE.OneMinusDstAlphaFactor)return La.ONE_MINUS_DST_ALPHA;if(a===THREE.DstColorFactor)return La.DST_COLOR;if(a===THREE.OneMinusDstColorFactor)return La.ONE_MINUS_DST_COLOR;if(a===THREE.SrcAlphaSaturateFactor)return La.SRC_ALPHA_SATURATE;if(void 0!==Qa){if(a===THREE.RGB_S3TC_DXT1_Format)return Qa.COMPRESSED_RGB_S3TC_DXT1_EXT;if(a===THREE.RGBA_S3TC_DXT1_Format)return Qa.COMPRESSED_RGBA_S3TC_DXT1_EXT;if(a===THREE.RGBA_S3TC_DXT3_Format)return Qa.COMPRESSED_RGBA_S3TC_DXT3_EXT;if(a===THREE.RGBA_S3TC_DXT5_Format)return Qa.COMPRESSED_RGBA_S3TC_DXT5_EXT}return 0}function xa(a){if(Eb&&a&&a.useVertexTexture)return 1024;var b=La.getParameter(La.MAX_VERTEX_UNIFORM_VECTORS),c=Math.floor((b-20)/4),d=c;return void 0!==a&&a instanceof THREE.SkinnedMesh&&(d=Math.min(a.bones.length,d),d<a.bones.length&&console.warn("WebGLRenderer: too many bones - "+a.bones.length+", this GPU supports just "+d+" (try OpenGL instead of ANGLE)")),d}function ya(a){for(var b=0,c=0,d=0,e=0,f=0,g=a.length;f<g;f++){var h=a[f];h.onlyShadow||(h instanceof THREE.DirectionalLight&&b++,h instanceof THREE.PointLight&&c++,h instanceof THREE.SpotLight&&d++,h instanceof THREE.HemisphereLight&&e++)}return{directional:b,point:c,spot:d,hemi:e}}function za(a){for(var b=0,c=0,d=a.length;c<d;c++){var e=a[c];e.castShadow&&(e instanceof THREE.SpotLight&&b++,e instanceof THREE.DirectionalLight&&!e.shadowCascade&&b++)}return b}function Aa(){try{var a={alpha:Ea,premultipliedAlpha:Fa,antialias:Ga,stencil:Ha,preserveDrawingBuffer:Ia};if(La=Ca.getContext("webgl",a)||Ca.getContext("experimental-webgl",a),null===La)throw"Error creating WebGL context."}catch(b){console.error(b)}Ma=La.getExtension("OES_texture_float"),Na=La.getExtension("OES_texture_float_linear"),Oa=La.getExtension("OES_standard_derivatives"),Pa=La.getExtension("EXT_texture_filter_anisotropic")||La.getExtension("MOZ_EXT_texture_filter_anisotropic")||La.getExtension("WEBKIT_EXT_texture_filter_anisotropic"),Qa=La.getExtension("WEBGL_compressed_texture_s3tc")||La.getExtension("MOZ_WEBGL_compressed_texture_s3tc")||La.getExtension("WEBKIT_WEBGL_compressed_texture_s3tc"),Ma||console.log("THREE.WebGLRenderer: Float textures not supported."),Oa||console.log("THREE.WebGLRenderer: Standard derivatives not supported."),Pa||console.log("THREE.WebGLRenderer: Anisotropic texture filtering not supported."),Qa||console.log("THREE.WebGLRenderer: S3TC compressed textures not supported."),void 0===La.getShaderPrecisionFormat&&(La.getShaderPrecisionFormat=function(){return{rangeMin:1,rangeMax:1,precision:1}})}function Ba(){La.clearColor(0,0,0,1),La.clearDepth(1),La.clearStencil(0),La.enable(La.DEPTH_TEST),La.depthFunc(La.LEQUAL),La.frontFace(La.CCW),La.cullFace(La.BACK),La.enable(La.CULL_FACE),La.enable(La.BLEND),La.blendEquation(La.FUNC_ADD),La.blendFunc(La.SRC_ALPHA,La.ONE_MINUS_SRC_ALPHA),La.clearColor(Ja.r,Ja.g,Ja.b,Ka)}console.log("THREE.WebGLRenderer",THREE.REVISION),a=a||{};var Ca=void 0!==a.canvas?a.canvas:document.createElement("canvas"),Da=void 0!==a.precision?a.precision:"highp",Ea=void 0===a.alpha||a.alpha,Fa=void 0===a.premultipliedAlpha||a.premultipliedAlpha,Ga=void 0!==a.antialias&&a.antialias,Ha=void 0===a.stencil||a.stencil,Ia=void 0!==a.preserveDrawingBuffer&&a.preserveDrawingBuffer,Ja=new THREE.Color(0),Ka=0;void 0!==a.clearColor&&(console.warn("DEPRECATED: clearColor in WebGLRenderer constructor parameters is being removed. Use .setClearColor() instead."),Ja.setHex(a.clearColor)),void 0!==a.clearAlpha&&(console.warn("DEPRECATED: clearAlpha in WebGLRenderer constructor parameters is being removed. Use .setClearColor() instead."),Ka=a.clearAlpha),this.domElement=Ca,this.context=null,this.devicePixelRatio=void 0!==a.devicePixelRatio?a.devicePixelRatio:void 0!==window.devicePixelRatio?window.devicePixelRatio:1,this.autoClear=!0,this.autoClearColor=!0,this.autoClearDepth=!0,this.autoClearStencil=!0,this.sortObjects=!0,this.autoUpdateObjects=!0,this.gammaInput=!1,this.gammaOutput=!1,this.physicallyBasedShading=!1,this.shadowMapEnabled=!1,this.shadowMapAutoUpdate=!0,this.shadowMapType=THREE.PCFShadowMap,this.shadowMapCullFace=THREE.CullFaceFront,this.shadowMapDebug=!1,this.shadowMapCascade=!1,this.maxMorphTargets=8,this.maxMorphNormals=4,this.autoScaleCubemaps=!0,this.renderPluginsPre=[],this.renderPluginsPost=[],this.info={memory:{programs:0,geometries:0,textures:0},render:{calls:0,vertices:0,faces:0,points:0}};var La,Ma,Na,Oa,Pa,Qa,Ra=this,Sa=[],Ta=0,Ua=null,Va=null,Wa=-1,Xa=null,Ya=null,Za=0,$a=0,_a=-1,ab=-1,bb=-1,cb=-1,db=-1,eb=-1,fb=-1,gb=-1,hb=null,ib=null,jb=null,kb=null,lb=0,mb=0,nb=0,ob=0,pb=0,qb=0,rb={},sb=new THREE.Frustum,tb=new THREE.Matrix4,ub=new THREE.Matrix4,vb=new THREE.Vector3,wb=new THREE.Vector3,xb=!0,yb={ambient:[0,0,0],directional:{length:0,colors:new Array,positions:new Array},point:{length:0,colors:new Array,positions:new Array,distances:new Array},spot:{length:0,colors:new Array,positions:new Array,distances:new Array,directions:new Array,anglesCos:new Array,exponents:new Array},hemi:{length:0,skyColors:new Array,groundColors:new Array,positions:new Array}};Aa(),Ba(),this.context=La;var zb=La.getParameter(La.MAX_TEXTURE_IMAGE_UNITS),Ab=La.getParameter(La.MAX_VERTEX_TEXTURE_IMAGE_UNITS),Bb=(La.getParameter(La.MAX_TEXTURE_SIZE),La.getParameter(La.MAX_CUBE_MAP_TEXTURE_SIZE)),Cb=Pa?La.getParameter(Pa.MAX_TEXTURE_MAX_ANISOTROPY_EXT):0,Db=Ab>0,Eb=Db&&Ma,Fb=(Qa?La.getParameter(La.COMPRESSED_TEXTURE_FORMATS):[],La.getShaderPrecisionFormat(La.VERTEX_SHADER,La.HIGH_FLOAT)),Gb=La.getShaderPrecisionFormat(La.VERTEX_SHADER,La.MEDIUM_FLOAT),Hb=(La.getShaderPrecisionFormat(La.VERTEX_SHADER,La.LOW_FLOAT),La.getShaderPrecisionFormat(La.FRAGMENT_SHADER,La.HIGH_FLOAT)),Ib=La.getShaderPrecisionFormat(La.FRAGMENT_SHADER,La.MEDIUM_FLOAT),Jb=(La.getShaderPrecisionFormat(La.FRAGMENT_SHADER,La.LOW_FLOAT),La.getShaderPrecisionFormat(La.VERTEX_SHADER,La.HIGH_INT),La.getShaderPrecisionFormat(La.VERTEX_SHADER,La.MEDIUM_INT),La.getShaderPrecisionFormat(La.VERTEX_SHADER,La.LOW_INT),La.getShaderPrecisionFormat(La.FRAGMENT_SHADER,La.HIGH_INT),La.getShaderPrecisionFormat(La.FRAGMENT_SHADER,La.MEDIUM_INT),La.getShaderPrecisionFormat(La.FRAGMENT_SHADER,La.LOW_INT),Fb.precision>0&&Hb.precision>0),Kb=Gb.precision>0&&Ib.precision>0;"highp"!==Da||Jb||(Kb?(Da="mediump",console.warn("WebGLRenderer: highp not supported, using mediump")):(Da="lowp",console.warn("WebGLRenderer: highp and mediump not supported, using lowp"))),"mediump"!==Da||Kb||(Da="lowp",console.warn("WebGLRenderer: mediump not supported, using lowp")),this.getContext=function(){return La},this.supportsVertexTextures=function(){return Db},this.supportsFloatTextures=function(){return Ma},this.supportsStandardDerivatives=function(){return Oa},this.supportsCompressedTextureS3TC=function(){return Qa},this.getMaxAnisotropy=function(){return Cb},this.getPrecision=function(){return Da},this.setSize=function(a,b,c){Ca.width=a*this.devicePixelRatio,Ca.height=b*this.devicePixelRatio,1!==this.devicePixelRatio&&c!==!1&&(Ca.style.width=a+"px",Ca.style.height=b+"px"),this.setViewport(0,0,Ca.width,Ca.height)},this.setViewport=function(a,b,c,d){lb=void 0!==a?a:0,mb=void 0!==b?b:0,nb=void 0!==c?c:Ca.width,ob=void 0!==d?d:Ca.height,La.viewport(lb,mb,nb,ob)},this.setScissor=function(a,b,c,d){La.scissor(a,b,c,d)},this.enableScissorTest=function(a){a?La.enable(La.SCISSOR_TEST):La.disable(La.SCISSOR_TEST)},this.setClearColor=function(a,b){Ja.set(a),Ka=void 0!==b?b:1,La.clearColor(Ja.r,Ja.g,Ja.b,Ka)},this.setClearColorHex=function(a,b){console.warn("DEPRECATED: .setClearColorHex() is being removed. Use .setClearColor() instead."),this.setClearColor(a,b)},this.getClearColor=function(){return Ja},this.getClearAlpha=function(){return Ka},this.clear=function(a,b,c){var d=0;(void 0===a||a)&&(d|=La.COLOR_BUFFER_BIT),(void 0===b||b)&&(d|=La.DEPTH_BUFFER_BIT),(void 0===c||c)&&(d|=La.STENCIL_BUFFER_BIT),La.clear(d)},this.clearTarget=function(a,b,c,d){this.setRenderTarget(a),this.clear(b,c,d)},this.addPostPlugin=function(a){a.init(this),this.renderPluginsPost.push(a)},this.addPrePlugin=function(a){a.init(this),this.renderPluginsPre.push(a)},this.updateShadowMap=function(a,b){Ua=null,bb=-1,fb=-1,gb=-1,Xa=-1,Wa=-1,xb=!0,_a=-1,ab=-1,this.shadowMapPlugin.update(a,b)};var Lb=function(a){var b=a.target;b.removeEventListener("dispose",Lb),Qb(b)},Mb=function(a){var b=a.target;b.removeEventListener("dispose",Mb),Rb(b),Ra.info.memory.textures--},Nb=function(a){var b=a.target;b.removeEventListener("dispose",Nb),Sb(b),Ra.info.memory.textures--},Ob=function(a){var b=a.target;b.removeEventListener("dispose",Ob),Tb(b)},Pb=function(a){if(void 0!==a.__webglVertexBuffer&&La.deleteBuffer(a.__webglVertexBuffer),void 0!==a.__webglNormalBuffer&&La.deleteBuffer(a.__webglNormalBuffer),void 0!==a.__webglTangentBuffer&&La.deleteBuffer(a.__webglTangentBuffer),void 0!==a.__webglColorBuffer&&La.deleteBuffer(a.__webglColorBuffer),void 0!==a.__webglUVBuffer&&La.deleteBuffer(a.__webglUVBuffer),void 0!==a.__webglUV2Buffer&&La.deleteBuffer(a.__webglUV2Buffer),void 0!==a.__webglSkinIndicesBuffer&&La.deleteBuffer(a.__webglSkinIndicesBuffer),void 0!==a.__webglSkinWeightsBuffer&&La.deleteBuffer(a.__webglSkinWeightsBuffer),void 0!==a.__webglFaceBuffer&&La.deleteBuffer(a.__webglFaceBuffer),void 0!==a.__webglLineBuffer&&La.deleteBuffer(a.__webglLineBuffer),void 0!==a.__webglLineDistanceBuffer&&La.deleteBuffer(a.__webglLineDistanceBuffer),void 0!==a.__webglCustomAttributesList)for(var b in a.__webglCustomAttributesList)La.deleteBuffer(a.__webglCustomAttributesList[b].buffer);Ra.info.memory.geometries--},Qb=function(a){if(a.__webglInit=void 0,a instanceof THREE.BufferGeometry){var b=a.attributes;for(var c in b)void 0!==b[c].buffer&&La.deleteBuffer(b[c].buffer);Ra.info.memory.geometries--}else if(void 0!==a.geometryGroups)for(var d in a.geometryGroups){var e=a.geometryGroups[d];if(void 0!==e.numMorphTargets)for(var f=0,g=e.numMorphTargets;f<g;f++)La.deleteBuffer(e.__webglMorphTargetsBuffers[f]);if(void 0!==e.numMorphNormals)for(var f=0,g=e.numMorphNormals;f<g;f++)La.deleteBuffer(e.__webglMorphNormalsBuffers[f]);Pb(e)}else Pb(a)},Rb=function(a){if(a.image&&a.image.__webglTextureCube)La.deleteTexture(a.image.__webglTextureCube);else{if(!a.__webglInit)return;a.__webglInit=!1,La.deleteTexture(a.__webglTexture)}},Sb=function(a){if(a&&a.__webglTexture)if(La.deleteTexture(a.__webglTexture),a instanceof THREE.WebGLRenderTargetCube)for(var b=0;b<6;b++)La.deleteFramebuffer(a.__webglFramebuffer[b]),La.deleteRenderbuffer(a.__webglRenderbuffer[b]);else La.deleteFramebuffer(a.__webglFramebuffer),La.deleteRenderbuffer(a.__webglRenderbuffer)},Tb=function(a){var b=a.program;if(void 0!==b){a.program=void 0;var c,d,e,f=!1;for(c=0,d=Sa.length;c<d;c++)if(e=Sa[c],e.program===b){e.usedTimes--,0===e.usedTimes&&(f=!0);break}if(f===!0){var g=[];for(c=0,d=Sa.length;c<d;c++)e=Sa[c],e.program!==b&&g.push(e);Sa=g,La.deleteProgram(b),Ra.info.memory.programs--}}};this.renderBufferImmediate=function(a,b,c){if(a.hasPositions&&!a.__webglVertexBuffer&&(a.__webglVertexBuffer=La.createBuffer()),a.hasNormals&&!a.__webglNormalBuffer&&(a.__webglNormalBuffer=La.createBuffer()),a.hasUvs&&!a.__webglUvBuffer&&(a.__webglUvBuffer=La.createBuffer()),a.hasColors&&!a.__webglColorBuffer&&(a.__webglColorBuffer=La.createBuffer()),a.hasPositions&&(La.bindBuffer(La.ARRAY_BUFFER,a.__webglVertexBuffer),La.bufferData(La.ARRAY_BUFFER,a.positionArray,La.DYNAMIC_DRAW),La.enableVertexAttribArray(b.attributes.position),La.vertexAttribPointer(b.attributes.position,3,La.FLOAT,!1,0,0)),a.hasNormals){if(La.bindBuffer(La.ARRAY_BUFFER,a.__webglNormalBuffer),c.shading===THREE.FlatShading){var d,e,f,g,h,i,j,k,l,m,n,o,p,q,r=3*a.count;for(q=0;q<r;q+=9)p=a.normalArray,g=p[q],j=p[q+1],m=p[q+2],h=p[q+3],k=p[q+4],n=p[q+5],i=p[q+6],l=p[q+7],o=p[q+8],d=(g+h+i)/3,e=(j+k+l)/3,f=(m+n+o)/3,p[q]=d,p[q+1]=e,p[q+2]=f,p[q+3]=d,p[q+4]=e,p[q+5]=f,p[q+6]=d,p[q+7]=e,p[q+8]=f}La.bufferData(La.ARRAY_BUFFER,a.normalArray,La.DYNAMIC_DRAW),La.enableVertexAttribArray(b.attributes.normal),La.vertexAttribPointer(b.attributes.normal,3,La.FLOAT,!1,0,0)}a.hasUvs&&c.map&&(La.bindBuffer(La.ARRAY_BUFFER,a.__webglUvBuffer),La.bufferData(La.ARRAY_BUFFER,a.uvArray,La.DYNAMIC_DRAW),La.enableVertexAttribArray(b.attributes.uv),La.vertexAttribPointer(b.attributes.uv,2,La.FLOAT,!1,0,0)),a.hasColors&&c.vertexColors!==THREE.NoColors&&(La.bindBuffer(La.ARRAY_BUFFER,a.__webglColorBuffer),La.bufferData(La.ARRAY_BUFFER,a.colorArray,La.DYNAMIC_DRAW),La.enableVertexAttribArray(b.attributes.color),La.vertexAttribPointer(b.attributes.color,3,La.FLOAT,!1,0,0)),La.drawArrays(La.TRIANGLES,0,a.count),a.count=0},this.renderBufferDirect=function(a,b,c,d,e,f){if(d.visible!==!1){var g,h,i,j,k=Q(a,b,c,d,f),l=k.attributes,m=e.attributes,n=!1,o=d.wireframe?1:0,p=16777215*e.id+2*k.id+o;if(p!==Xa&&(Xa=p,n=!0),n&&w(),f instanceof THREE.Mesh){var q=m.index;if(q){var r=e.offsets;r.length>1&&(n=!0);for(var s=0,t=r.length;s<t;s++){var u=r[s].index;if(n){for(h in l)i=l[h],g=m[h],i>=0&&(g?(j=g.itemSize,La.bindBuffer(La.ARRAY_BUFFER,g.buffer),v(i),La.vertexAttribPointer(i,j,La.FLOAT,!1,0,u*j*4)):d.defaultAttributeValues&&(2===d.defaultAttributeValues[h].length?La.vertexAttrib2fv(i,d.defaultAttributeValues[h]):3===d.defaultAttributeValues[h].length&&La.vertexAttrib3fv(i,d.defaultAttributeValues[h])));La.bindBuffer(La.ELEMENT_ARRAY_BUFFER,q.buffer)}La.drawElements(La.TRIANGLES,r[s].count,La.UNSIGNED_SHORT,2*r[s].start),Ra.info.render.calls++,Ra.info.render.vertices+=r[s].count,Ra.info.render.faces+=r[s].count/3}}else{if(n)for(h in l)"index"!==h&&(i=l[h],g=m[h],i>=0&&(g?(j=g.itemSize,La.bindBuffer(La.ARRAY_BUFFER,g.buffer),v(i),La.vertexAttribPointer(i,j,La.FLOAT,!1,0,0)):d.defaultAttributeValues&&d.defaultAttributeValues[h]&&(2===d.defaultAttributeValues[h].length?La.vertexAttrib2fv(i,d.defaultAttributeValues[h]):3===d.defaultAttributeValues[h].length&&La.vertexAttrib3fv(i,d.defaultAttributeValues[h]))));var x=e.attributes.position;La.drawArrays(La.TRIANGLES,0,x.numItems/3),Ra.info.render.calls++,Ra.info.render.vertices+=x.numItems/3,Ra.info.render.faces+=x.numItems/3/3}}else if(f instanceof THREE.ParticleSystem){if(n){for(h in l)i=l[h],g=m[h],i>=0&&(g?(j=g.itemSize,La.bindBuffer(La.ARRAY_BUFFER,g.buffer),v(i),La.vertexAttribPointer(i,j,La.FLOAT,!1,0,0)):d.defaultAttributeValues&&d.defaultAttributeValues[h]&&(2===d.defaultAttributeValues[h].length?La.vertexAttrib2fv(i,d.defaultAttributeValues[h]):3===d.defaultAttributeValues[h].length&&La.vertexAttrib3fv(i,d.defaultAttributeValues[h])));
var x=m.position;La.drawArrays(La.POINTS,0,x.numItems/3),Ra.info.render.calls++,Ra.info.render.points+=x.numItems/3}}else if(f instanceof THREE.Line&&n){for(h in l)i=l[h],g=m[h],i>=0&&(g?(j=g.itemSize,La.bindBuffer(La.ARRAY_BUFFER,g.buffer),v(i),La.vertexAttribPointer(i,j,La.FLOAT,!1,0,0)):d.defaultAttributeValues&&d.defaultAttributeValues[h]&&(2===d.defaultAttributeValues[h].length?La.vertexAttrib2fv(i,d.defaultAttributeValues[h]):3===d.defaultAttributeValues[h].length&&La.vertexAttrib3fv(i,d.defaultAttributeValues[h])));var y=f.type===THREE.LineStrip?La.LINE_STRIP:La.LINES;fa(d.linewidth);var x=m.position;La.drawArrays(y,0,x.numItems/3),Ra.info.render.calls++,Ra.info.render.points+=x.numItems}}},this.renderBuffer=function(a,b,c,d,e,f){if(d.visible!==!1){var g,h,i,j=Q(a,b,c,d,f),k=j.attributes,l=!1,m=d.wireframe?1:0,n=16777215*e.id+2*j.id+m;if(n!==Xa&&(Xa=n,l=!0),l&&w(),!d.morphTargets&&k.position>=0?l&&(La.bindBuffer(La.ARRAY_BUFFER,e.__webglVertexBuffer),v(k.position),La.vertexAttribPointer(k.position,3,La.FLOAT,!1,0,0)):f.morphTargetBase&&x(d,e,f),l){if(e.__webglCustomAttributesList)for(h=0,i=e.__webglCustomAttributesList.length;h<i;h++)g=e.__webglCustomAttributesList[h],k[g.buffer.belongsToAttribute]>=0&&(La.bindBuffer(La.ARRAY_BUFFER,g.buffer),v(k[g.buffer.belongsToAttribute]),La.vertexAttribPointer(k[g.buffer.belongsToAttribute],g.size,La.FLOAT,!1,0,0));k.color>=0&&(f.geometry.colors.length>0||f.geometry.faces.length>0?(La.bindBuffer(La.ARRAY_BUFFER,e.__webglColorBuffer),v(k.color),La.vertexAttribPointer(k.color,3,La.FLOAT,!1,0,0)):d.defaultAttributeValues&&La.vertexAttrib3fv(k.color,d.defaultAttributeValues.color)),k.normal>=0&&(La.bindBuffer(La.ARRAY_BUFFER,e.__webglNormalBuffer),v(k.normal),La.vertexAttribPointer(k.normal,3,La.FLOAT,!1,0,0)),k.tangent>=0&&(La.bindBuffer(La.ARRAY_BUFFER,e.__webglTangentBuffer),v(k.tangent),La.vertexAttribPointer(k.tangent,4,La.FLOAT,!1,0,0)),k.uv>=0&&(f.geometry.faceVertexUvs[0]?(La.bindBuffer(La.ARRAY_BUFFER,e.__webglUVBuffer),v(k.uv),La.vertexAttribPointer(k.uv,2,La.FLOAT,!1,0,0)):d.defaultAttributeValues&&La.vertexAttrib2fv(k.uv,d.defaultAttributeValues.uv)),k.uv2>=0&&(f.geometry.faceVertexUvs[1]?(La.bindBuffer(La.ARRAY_BUFFER,e.__webglUV2Buffer),v(k.uv2),La.vertexAttribPointer(k.uv2,2,La.FLOAT,!1,0,0)):d.defaultAttributeValues&&La.vertexAttrib2fv(k.uv2,d.defaultAttributeValues.uv2)),d.skinning&&k.skinIndex>=0&&k.skinWeight>=0&&(La.bindBuffer(La.ARRAY_BUFFER,e.__webglSkinIndicesBuffer),v(k.skinIndex),La.vertexAttribPointer(k.skinIndex,4,La.FLOAT,!1,0,0),La.bindBuffer(La.ARRAY_BUFFER,e.__webglSkinWeightsBuffer),v(k.skinWeight),La.vertexAttribPointer(k.skinWeight,4,La.FLOAT,!1,0,0)),k.lineDistance>=0&&(La.bindBuffer(La.ARRAY_BUFFER,e.__webglLineDistanceBuffer),v(k.lineDistance),La.vertexAttribPointer(k.lineDistance,1,La.FLOAT,!1,0,0))}if(f instanceof THREE.Mesh)d.wireframe?(fa(d.wireframeLinewidth),l&&La.bindBuffer(La.ELEMENT_ARRAY_BUFFER,e.__webglLineBuffer),La.drawElements(La.LINES,e.__webglLineCount,La.UNSIGNED_SHORT,0)):(l&&La.bindBuffer(La.ELEMENT_ARRAY_BUFFER,e.__webglFaceBuffer),La.drawElements(La.TRIANGLES,e.__webglFaceCount,La.UNSIGNED_SHORT,0)),Ra.info.render.calls++,Ra.info.render.vertices+=e.__webglFaceCount,Ra.info.render.faces+=e.__webglFaceCount/3;else if(f instanceof THREE.Line){var o=f.type===THREE.LineStrip?La.LINE_STRIP:La.LINES;fa(d.linewidth),La.drawArrays(o,0,e.__webglLineCount),Ra.info.render.calls++}else f instanceof THREE.ParticleSystem?(La.drawArrays(La.POINTS,0,e.__webglParticleCount),Ra.info.render.calls++,Ra.info.render.points+=e.__webglParticleCount):f instanceof THREE.Ribbon&&(La.drawArrays(La.TRIANGLE_STRIP,0,e.__webglVertexCount),Ra.info.render.calls++)}},this.render=function(a,b,c,d){if(b instanceof THREE.Camera==!1)return void console.error("THREE.WebGLRenderer.render: camera is not an instance of THREE.Camera.");var e,f,g,h,i,j=a.__lights,k=a.fog;for(Wa=-1,xb=!0,a.autoUpdate===!0&&a.updateMatrixWorld(),void 0===b.parent&&b.updateMatrixWorld(),b.matrixWorldInverse.getInverse(b.matrixWorld),tb.multiplyMatrices(b.projectionMatrix,b.matrixWorldInverse),sb.setFromMatrix(tb),this.autoUpdateObjects&&this.initWebGLObjects(a),A(this.renderPluginsPre,a,b),Ra.info.render.calls=0,Ra.info.render.vertices=0,Ra.info.render.faces=0,Ra.info.render.points=0,this.setRenderTarget(c),(this.autoClear||d)&&this.clear(this.autoClearColor,this.autoClearDepth,this.autoClearStencil),i=a.__webglObjects,e=0,f=i.length;e<f;e++)g=i[e],h=g.object,g.id=e,g.render=!1,h.visible&&((h instanceof THREE.Mesh||h instanceof THREE.ParticleSystem)&&h.frustumCulled&&!sb.intersectsObject(h)||(ba(h,b),E(g),g.render=!0,this.sortObjects===!0&&(null!==h.renderDepth?g.z=h.renderDepth:(vb.getPositionFromMatrix(h.matrixWorld),vb.applyProjection(tb),g.z=vb.z))));for(this.sortObjects&&i.sort(y),i=a.__webglObjectsImmediate,e=0,f=i.length;e<f;e++)g=i[e],h=g.object,h.visible&&(ba(h,b),D(g));if(a.overrideMaterial){var l=a.overrideMaterial;this.setBlending(l.blending,l.blendEquation,l.blendSrc,l.blendDst),this.setDepthTest(l.depthTest),this.setDepthWrite(l.depthWrite),ga(l.polygonOffset,l.polygonOffsetFactor,l.polygonOffsetUnits),B(a.__webglObjects,!1,"",b,j,k,!0,l),C(a.__webglObjectsImmediate,"",b,j,k,!1,l)}else{var l=null;this.setBlending(THREE.NoBlending),B(a.__webglObjects,!0,"opaque",b,j,k,!1,l),C(a.__webglObjectsImmediate,"opaque",b,j,k,!1,l),B(a.__webglObjects,!1,"transparent",b,j,k,!0,l),C(a.__webglObjectsImmediate,"transparent",b,j,k,!0,l)}A(this.renderPluginsPost,a,b),c&&c.generateMipmaps&&c.minFilter!==THREE.NearestFilter&&c.minFilter!==THREE.LinearFilter&&ua(c),this.setDepthTest(!0),this.setDepthWrite(!0)},this.renderImmediateObject=function(a,b,c,d,e){var f=Q(a,b,c,d,e);Xa=-1,Ra.setMaterialFaces(d),e.immediateRenderCallback?e.immediateRenderCallback(f,La,sb):e.render(function(a){Ra.renderBufferImmediate(a,f,d)})},this.initWebGLObjects=function(a){for(a.__webglObjects||(a.__webglObjects=[],a.__webglObjectsImmediate=[],a.__webglSprites=[],a.__webglFlares=[]);a.__objectsAdded.length;)G(a.__objectsAdded[0],a),a.__objectsAdded.splice(0,1);for(;a.__objectsRemoved.length;)M(a.__objectsRemoved[0],a),a.__objectsRemoved.splice(0,1);for(var b=0,c=a.__webglObjects.length;b<c;b++){var d=a.__webglObjects[b].object;void 0===d.__webglInit&&(void 0!==d.__webglActive&&M(d,a),G(d,a)),J(d)}},this.initMaterial=function(a,b,c,d){a.addEventListener("dispose",Ob);var e,f,g,h,i,j,k;a instanceof THREE.MeshDepthMaterial?k="depth":a instanceof THREE.MeshNormalMaterial?k="normal":a instanceof THREE.MeshBasicMaterial?k="basic":a instanceof THREE.MeshLambertMaterial?k="lambert":a instanceof THREE.MeshPhongMaterial?k="phong":a instanceof THREE.LineBasicMaterial?k="basic":a instanceof THREE.LineDashedMaterial?k="dashed":a instanceof THREE.ParticleBasicMaterial&&(k="particle_basic"),k&&P(a,THREE.ShaderLib[k]),h=ya(b),j=za(b),i=xa(d),g={map:!!a.map,envMap:!!a.envMap,lightMap:!!a.lightMap,bumpMap:!!a.bumpMap,normalMap:!!a.normalMap,specularMap:!!a.specularMap,vertexColors:a.vertexColors,fog:c,useFog:a.fog,fogExp:c instanceof THREE.FogExp2,sizeAttenuation:a.sizeAttenuation,skinning:a.skinning,maxBones:i,useVertexTexture:Eb&&d&&d.useVertexTexture,boneTextureWidth:d&&d.boneTextureWidth,boneTextureHeight:d&&d.boneTextureHeight,morphTargets:a.morphTargets,morphNormals:a.morphNormals,maxMorphTargets:this.maxMorphTargets,maxMorphNormals:this.maxMorphNormals,maxDirLights:h.directional,maxPointLights:h.point,maxSpotLights:h.spot,maxHemiLights:h.hemi,maxShadows:j,shadowMapEnabled:this.shadowMapEnabled&&d.receiveShadow,shadowMapType:this.shadowMapType,shadowMapDebug:this.shadowMapDebug,shadowMapCascade:this.shadowMapCascade,alphaTest:a.alphaTest,metal:a.metal,perPixel:a.perPixel,wrapAround:a.wrapAround,doubleSided:a.side===THREE.DoubleSide,flipSided:a.side===THREE.BackSide},a.program=ia(k,a.fragmentShader,a.vertexShader,a.uniforms,a.attributes,a.defines,g,a.index0AttributeName);var l=a.program.attributes;if(a.morphTargets){a.numSupportedMorphTargets=0;var m,n="morphTarget";for(f=0;f<this.maxMorphTargets;f++)m=n+f,l[m]>=0&&a.numSupportedMorphTargets++}if(a.morphNormals){a.numSupportedMorphNormals=0;var m,n="morphNormal";for(f=0;f<this.maxMorphNormals;f++)m=n+f,l[m]>=0&&a.numSupportedMorphNormals++}a.uniformsList=[];for(e in a.uniforms)a.uniformsList.push([a.uniforms[e],e])},this.setFaceCulling=function(a,b){a===THREE.CullFaceNone?La.disable(La.CULL_FACE):(b===THREE.FrontFaceDirectionCW?La.frontFace(La.CW):La.frontFace(La.CCW),a===THREE.CullFaceBack?La.cullFace(La.BACK):a===THREE.CullFaceFront?La.cullFace(La.FRONT):La.cullFace(La.FRONT_AND_BACK),La.enable(La.CULL_FACE))},this.setMaterialFaces=function(a){var b=a.side===THREE.DoubleSide,c=a.side===THREE.BackSide;_a!==b&&(b?La.disable(La.CULL_FACE):La.enable(La.CULL_FACE),_a=b),ab!==c&&(c?La.frontFace(La.CW):La.frontFace(La.CCW),ab=c)},this.setDepthTest=function(a){fb!==a&&(a?La.enable(La.DEPTH_TEST):La.disable(La.DEPTH_TEST),fb=a)},this.setDepthWrite=function(a){gb!==a&&(La.depthMask(a),gb=a)},this.setBlending=function(a,b,c,d){a!==bb&&(a===THREE.NoBlending?La.disable(La.BLEND):a===THREE.AdditiveBlending?(La.enable(La.BLEND),La.blendEquation(La.FUNC_ADD),La.blendFunc(La.SRC_ALPHA,La.ONE)):a===THREE.SubtractiveBlending?(La.enable(La.BLEND),La.blendEquation(La.FUNC_ADD),La.blendFunc(La.ZERO,La.ONE_MINUS_SRC_COLOR)):a===THREE.MultiplyBlending?(La.enable(La.BLEND),La.blendEquation(La.FUNC_ADD),La.blendFunc(La.ZERO,La.SRC_COLOR)):a===THREE.CustomBlending?La.enable(La.BLEND):(La.enable(La.BLEND),La.blendEquationSeparate(La.FUNC_ADD,La.FUNC_ADD),La.blendFuncSeparate(La.SRC_ALPHA,La.ONE_MINUS_SRC_ALPHA,La.ONE,La.ONE_MINUS_SRC_ALPHA)),bb=a),a===THREE.CustomBlending?(b!==cb&&(La.blendEquation(wa(b)),cb=b),c===db&&d===eb||(La.blendFunc(wa(c),wa(d)),db=c,eb=d)):(cb=null,db=null,eb=null)},this.setTexture=function(a,b){if(a.needsUpdate){a.__webglInit||(a.__webglInit=!0,a.addEventListener("dispose",Mb),a.__webglTexture=La.createTexture(),Ra.info.memory.textures++),La.activeTexture(La.TEXTURE0+b),La.bindTexture(La.TEXTURE_2D,a.__webglTexture),La.pixelStorei(La.UNPACK_FLIP_Y_WEBGL,a.flipY),La.pixelStorei(La.UNPACK_PREMULTIPLY_ALPHA_WEBGL,a.premultiplyAlpha),La.pixelStorei(La.UNPACK_ALIGNMENT,a.unpackAlignment);var c=a.image,d=na(c.width)&&na(c.height),e=wa(a.format),f=wa(a.type);oa(La.TEXTURE_2D,a,d);var g,h=a.mipmaps;if(a instanceof THREE.DataTexture)if(h.length>0&&d){for(var i=0,j=h.length;i<j;i++)g=h[i],La.texImage2D(La.TEXTURE_2D,i,e,g.width,g.height,0,e,f,g.data);a.generateMipmaps=!1}else La.texImage2D(La.TEXTURE_2D,0,e,c.width,c.height,0,e,f,c.data);else if(a instanceof THREE.CompressedTexture)for(var i=0,j=h.length;i<j;i++)g=h[i],La.compressedTexImage2D(La.TEXTURE_2D,i,e,g.width,g.height,0,g.data);else if(h.length>0&&d){for(var i=0,j=h.length;i<j;i++)g=h[i],La.texImage2D(La.TEXTURE_2D,i,e,e,f,g);a.generateMipmaps=!1}else La.texImage2D(La.TEXTURE_2D,0,e,e,f,a.image);a.generateMipmaps&&d&&La.generateMipmap(La.TEXTURE_2D),a.needsUpdate=!1,a.onUpdate&&a.onUpdate()}else La.activeTexture(La.TEXTURE0+b),La.bindTexture(La.TEXTURE_2D,a.__webglTexture)},this.setRenderTarget=function(a){var b=a instanceof THREE.WebGLRenderTargetCube;if(a&&!a.__webglFramebuffer){void 0===a.depthBuffer&&(a.depthBuffer=!0),void 0===a.stencilBuffer&&(a.stencilBuffer=!0),a.addEventListener("dispose",Nb),a.__webglTexture=La.createTexture(),Ra.info.memory.textures++;var c=na(a.width)&&na(a.height),d=wa(a.format),e=wa(a.type);if(b){a.__webglFramebuffer=[],a.__webglRenderbuffer=[],La.bindTexture(La.TEXTURE_CUBE_MAP,a.__webglTexture),oa(La.TEXTURE_CUBE_MAP,a,c);for(var f=0;f<6;f++)a.__webglFramebuffer[f]=La.createFramebuffer(),a.__webglRenderbuffer[f]=La.createRenderbuffer(),La.texImage2D(La.TEXTURE_CUBE_MAP_POSITIVE_X+f,0,d,a.width,a.height,0,d,e,null),sa(a.__webglFramebuffer[f],a,La.TEXTURE_CUBE_MAP_POSITIVE_X+f),ta(a.__webglRenderbuffer[f],a);c&&La.generateMipmap(La.TEXTURE_CUBE_MAP)}else a.__webglFramebuffer=La.createFramebuffer(),a.shareDepthFrom?a.__webglRenderbuffer=a.shareDepthFrom.__webglRenderbuffer:a.__webglRenderbuffer=La.createRenderbuffer(),La.bindTexture(La.TEXTURE_2D,a.__webglTexture),oa(La.TEXTURE_2D,a,c),La.texImage2D(La.TEXTURE_2D,0,d,a.width,a.height,0,d,e,null),sa(a.__webglFramebuffer,a,La.TEXTURE_2D),a.shareDepthFrom?a.depthBuffer&&!a.stencilBuffer?La.framebufferRenderbuffer(La.FRAMEBUFFER,La.DEPTH_ATTACHMENT,La.RENDERBUFFER,a.__webglRenderbuffer):a.depthBuffer&&a.stencilBuffer&&La.framebufferRenderbuffer(La.FRAMEBUFFER,La.DEPTH_STENCIL_ATTACHMENT,La.RENDERBUFFER,a.__webglRenderbuffer):ta(a.__webglRenderbuffer,a),c&&La.generateMipmap(La.TEXTURE_2D);b?La.bindTexture(La.TEXTURE_CUBE_MAP,null):La.bindTexture(La.TEXTURE_2D,null),La.bindRenderbuffer(La.RENDERBUFFER,null),La.bindFramebuffer(La.FRAMEBUFFER,null)}var g,h,i,j,k;a?(g=b?a.__webglFramebuffer[a.activeCubeFace]:a.__webglFramebuffer,h=a.width,i=a.height,j=0,k=0):(g=null,h=nb,i=ob,j=lb,k=mb),g!==Va&&(La.bindFramebuffer(La.FRAMEBUFFER,g),La.viewport(j,k,h,i),Va=g),pb=h,qb=i},this.shadowMapPlugin=new THREE.ShadowMapPlugin,this.addPrePlugin(this.shadowMapPlugin),this.addPostPlugin(new THREE.SpritePlugin),this.addPostPlugin(new THREE.LensFlarePlugin)},THREE.WebGLRenderTarget=function(a,b,c){this.width=a,this.height=b,c=c||{},this.wrapS=void 0!==c.wrapS?c.wrapS:THREE.ClampToEdgeWrapping,this.wrapT=void 0!==c.wrapT?c.wrapT:THREE.ClampToEdgeWrapping,this.magFilter=void 0!==c.magFilter?c.magFilter:THREE.LinearFilter,this.minFilter=void 0!==c.minFilter?c.minFilter:THREE.LinearMipMapLinearFilter,this.anisotropy=void 0!==c.anisotropy?c.anisotropy:1,this.offset=new THREE.Vector2(0,0),this.repeat=new THREE.Vector2(1,1),this.format=void 0!==c.format?c.format:THREE.RGBAFormat,this.type=void 0!==c.type?c.type:THREE.UnsignedByteType,this.depthBuffer=void 0===c.depthBuffer||c.depthBuffer,this.stencilBuffer=void 0===c.stencilBuffer||c.stencilBuffer,this.generateMipmaps=!0,this.shareDepthFrom=null},THREE.WebGLRenderTarget.prototype={constructor:THREE.WebGLRenderTarget,clone:function(){var a=new THREE.WebGLRenderTarget(this.width,this.height);return a.wrapS=this.wrapS,a.wrapT=this.wrapT,a.magFilter=this.magFilter,a.minFilter=this.minFilter,a.anisotropy=this.anisotropy,a.offset.copy(this.offset),a.repeat.copy(this.repeat),a.format=this.format,a.type=this.type,a.depthBuffer=this.depthBuffer,a.stencilBuffer=this.stencilBuffer,a.generateMipmaps=this.generateMipmaps,a.shareDepthFrom=this.shareDepthFrom,a},dispose:function(){this.dispatchEvent({type:"dispose"})}},THREE.EventDispatcher.prototype.apply(THREE.WebGLRenderTarget.prototype),THREE.WebGLRenderTargetCube=function(a,b,c){THREE.WebGLRenderTarget.call(this,a,b,c),this.activeCubeFace=0},THREE.WebGLRenderTargetCube.prototype=Object.create(THREE.WebGLRenderTarget.prototype),THREE.RenderableVertex=function(){this.positionWorld=new THREE.Vector3,this.positionScreen=new THREE.Vector4,this.visible=!0},THREE.RenderableVertex.prototype.copy=function(a){this.positionWorld.copy(a.positionWorld),this.positionScreen.copy(a.positionScreen)},THREE.RenderableFace3=function(){this.id=0,this.v1=new THREE.RenderableVertex,this.v2=new THREE.RenderableVertex,this.v3=new THREE.RenderableVertex,this.centroidModel=new THREE.Vector3,this.normalModel=new THREE.Vector3,this.normalModelView=new THREE.Vector3,this.vertexNormalsLength=0,this.vertexNormalsModel=[new THREE.Vector3,new THREE.Vector3,new THREE.Vector3],this.vertexNormalsModelView=[new THREE.Vector3,new THREE.Vector3,new THREE.Vector3],this.color=null,this.material=null,this.uvs=[[]],this.z=0},THREE.RenderableObject=function(){this.id=0,this.object=null,this.z=0},THREE.RenderableParticle=function(){this.id=0,this.object=null,this.x=0,this.y=0,this.z=0,this.rotation=null,this.scale=new THREE.Vector2,this.material=null},THREE.RenderableLine=function(){this.id=0,this.v1=new THREE.RenderableVertex,this.v2=new THREE.RenderableVertex,this.vertexColors=[new THREE.Color,new THREE.Color],this.material=null,this.z=0},THREE.GeometryUtils={merge:function(a,b,c){var d,e,f=a.vertices.length,g=(a.faceVertexUvs[0].length,b instanceof THREE.Mesh?b.geometry:b),h=a.vertices,i=g.vertices,j=a.faces,k=g.faces,l=a.faceVertexUvs[0],m=g.faceVertexUvs[0];void 0===c&&(c=0),b instanceof THREE.Mesh&&(b.matrixAutoUpdate&&b.updateMatrix(),d=b.matrix,e=(new THREE.Matrix3).getNormalMatrix(d));for(var n=0,o=i.length;n<o;n++){var p=i[n],q=p.clone();d&&q.applyMatrix4(d),h.push(q)}for(n=0,o=k.length;n<o;n++){var r,s,t,u=k[n],v=u.vertexNormals,w=u.vertexColors;r=new THREE.Face3(u.a+f,u.b+f,u.c+f),r.normal.copy(u.normal),e&&r.normal.applyMatrix3(e).normalize();for(var x=0,y=v.length;x<y;x++)s=v[x].clone(),e&&s.applyMatrix3(e).normalize(),r.vertexNormals.push(s);r.color.copy(u.color);for(var x=0,y=w.length;x<y;x++)t=w[x],r.vertexColors.push(t.clone());r.materialIndex=u.materialIndex+c,r.centroid.copy(u.centroid),d&&r.centroid.applyMatrix4(d),j.push(r)}for(n=0,o=m.length;n<o;n++){for(var z=m[n],A=[],x=0,y=z.length;x<y;x++)A.push(new THREE.Vector2(z[x].x,z[x].y));l.push(A)}},randomPointInTriangle:function(){var a=new THREE.Vector3;return function(b,c,d){var e=new THREE.Vector3,f=THREE.Math.random16(),g=THREE.Math.random16();f+g>1&&(f=1-f,g=1-g);var h=1-f-g;return e.copy(b),e.multiplyScalar(f),a.copy(c),a.multiplyScalar(g),e.add(a),a.copy(d),a.multiplyScalar(h),e.add(a),e}}(),randomPointInFace:function(a,b,c){var d,e,f;return d=b.vertices[a.a],e=b.vertices[a.b],f=b.vertices[a.c],THREE.GeometryUtils.randomPointInTriangle(d,e,f)},randomPointsInGeometry:function(a,b){function c(a){function b(c,d){if(d<c)return c;var e=c+Math.floor((d-c)/2);return m[e]>a?b(c,e-1):m[e]<a?b(e+1,d):e}var c=b(0,m.length-1);return c}var d,e,f,g,h,i=a.faces,j=a.vertices,k=i.length,l=0,m=[];for(e=0;e<k;e++)d=i[e],f=j[d.a],g=j[d.b],h=j[d.c],d._area=THREE.GeometryUtils.triangleArea(f,g,h),l+=d._area,m[e]=l;var n,o,p=[],q={};for(e=0;e<b;e++)n=THREE.Math.random16()*l,o=c(n),p[e]=THREE.GeometryUtils.randomPointInFace(i[o],a,!0),q[o]?q[o]+=1:q[o]=1;return p},triangleArea:function(){var a=new THREE.Vector3,b=new THREE.Vector3;return function(c,d,e){return a.subVectors(d,c),b.subVectors(e,c),a.cross(b),.5*a.length()}}(),center:function(a){a.computeBoundingBox();var b=a.boundingBox,c=new THREE.Vector3;return c.addVectors(b.min,b.max),c.multiplyScalar(-.5),a.applyMatrix((new THREE.Matrix4).makeTranslation(c.x,c.y,c.z)),a.computeBoundingBox(),c},triangulateQuads:function(a){var b,c,d,e,f=[],g=[];for(b=0,c=a.faceVertexUvs.length;b<c;b++)g[b]=[];for(b=0,c=a.faces.length;b<c;b++){var h=a.faces[b];for(f.push(h),d=0,e=a.faceVertexUvs.length;d<e;d++)g[d].push(a.faceVertexUvs[d][b])}a.faces=f,a.faceVertexUvs=g,a.computeCentroids(),a.computeFaceNormals(),a.computeVertexNormals(),a.hasTangents&&a.computeTangents()}},THREE.ImageUtils={crossOrigin:"anonymous",loadTexture:function(a,b,c,d){var e=new Image,f=new THREE.Texture(e,b),g=new THREE.ImageLoader;return g.crossOrigin=this.crossOrigin,g.load(a,function(a){f.image=a,f.needsUpdate=!0,c&&c(f)}),f.sourceFile=a,f},loadCompressedTexture:function(a,b,c,d){var e=new THREE.CompressedTexture;e.mapping=b;var f=new XMLHttpRequest;return f.onload=function(){var a=f.response,b=THREE.ImageUtils.parseDDS(a,!0);e.format=b.format,e.mipmaps=b.mipmaps,e.image.width=b.width,e.image.height=b.height,e.generateMipmaps=!1,e.needsUpdate=!0,c&&c(e)},f.onerror=d,f.open("GET",a,!0),f.responseType="arraybuffer",f.send(null),e},loadTextureCube:function(a,b,c,d){var e=[];e.loadCount=0;var f=new THREE.Texture;f.image=e,void 0!==b&&(f.mapping=b),f.flipY=!1;for(var g=0,h=a.length;g<h;++g){var i=new Image;e[g]=i,i.onload=function(){e.loadCount+=1,6===e.loadCount&&(f.needsUpdate=!0,c&&c(f))},i.onerror=d,i.crossOrigin=this.crossOrigin,i.src=a[g]}return f},loadCompressedTextureCube:function(a,b,c,d){var e=[];e.loadCount=0;var f=new THREE.CompressedTexture;f.image=e,void 0!==b&&(f.mapping=b),f.flipY=!1,f.generateMipmaps=!1;var g=function(a,b){return function(){var d=a.response,g=THREE.ImageUtils.parseDDS(d,!0);b.format=g.format,b.mipmaps=g.mipmaps,b.width=g.width,b.height=g.height,e.loadCount+=1,6===e.loadCount&&(f.format=g.format,f.needsUpdate=!0,c&&c(f))}};if(a instanceof Array)for(var h=0,i=a.length;h<i;++h){var j={};e[h]=j;var k=new XMLHttpRequest;k.onload=g(k,j),k.onerror=d;var l=a[h];k.open("GET",l,!0),k.responseType="arraybuffer",k.send(null)}else{var l=a,k=new XMLHttpRequest;k.onload=function(){var a=k.response,b=THREE.ImageUtils.parseDDS(a,!0);if(b.isCubemap){for(var d=b.mipmaps.length/b.mipmapCount,g=0;g<d;g++){e[g]={mipmaps:[]};for(var h=0;h<b.mipmapCount;h++)e[g].mipmaps.push(b.mipmaps[g*b.mipmapCount+h]),e[g].format=b.format,e[g].width=b.width,e[g].height=b.height}f.format=b.format,f.needsUpdate=!0,c&&c(f)}},k.onerror=d,k.open("GET",l,!0),k.responseType="arraybuffer",k.send(null)}return f},parseDDS:function(a,b){function c(a){return a.charCodeAt(0)+(a.charCodeAt(1)<<8)+(a.charCodeAt(2)<<16)+(a.charCodeAt(3)<<24)}function d(a){return String.fromCharCode(255&a,a>>8&255,a>>16&255,a>>24&255)}var e={mipmaps:[],width:0,height:0,format:null,mipmapCount:1},f=542327876,g=131072,h=512,i=4,j=c("DXT1"),k=c("DXT3"),l=c("DXT5"),m=31,n=0,o=1,p=2,q=3,r=4,s=7,t=20,u=21,v=28,w=new Int32Array(a,0,m);if(w[n]!==f)return console.error("ImageUtils.parseDDS(): Invalid magic number in DDS header"),e;if(!w[t]&i)return console.error("ImageUtils.parseDDS(): Unsupported format, must contain a FourCC code"),e;var x,y=w[u];switch(y){case j:x=8,e.format=THREE.RGB_S3TC_DXT1_Format;break;case k:x=16,e.format=THREE.RGBA_S3TC_DXT3_Format;break;case l:x=16,e.format=THREE.RGBA_S3TC_DXT5_Format;break;default:return console.error("ImageUtils.parseDDS(): Unsupported FourCC code: ",d(y)),e}e.mipmapCount=1,w[p]&g&&b!==!1&&(e.mipmapCount=Math.max(1,w[s])),e.isCubemap=!!(w[v]&h),e.width=w[r],e.height=w[q];for(var z=w[o]+4,A=e.width,B=e.height,C=e.isCubemap?6:1,D=0;D<C;D++){for(var E=0;E<e.mipmapCount;E++){var F=Math.max(4,A)/4*Math.max(4,B)/4*x,G=new Uint8Array(a,z,F),H={data:G,width:A,height:B};e.mipmaps.push(H),z+=F,A=Math.max(.5*A,1),B=Math.max(.5*B,1)}A=e.width,B=e.height}return e},getNormalMap:function(a,b){var c=function(a,b){return[a[1]*b[2]-a[2]*b[1],a[2]*b[0]-a[0]*b[2],a[0]*b[1]-a[1]*b[0]]},d=function(a,b){return[a[0]-b[0],a[1]-b[1],a[2]-b[2]]},e=function(a){var b=Math.sqrt(a[0]*a[0]+a[1]*a[1]+a[2]*a[2]);return[a[0]/b,a[1]/b,a[2]/b]};b=1|b;var f=a.width,g=a.height,h=document.createElement("canvas");h.width=f,h.height=g;var i=h.getContext("2d");i.drawImage(a,0,0);for(var j=i.getImageData(0,0,f,g).data,k=i.createImageData(f,g),l=k.data,m=0;m<f;m++)for(var n=0;n<g;n++){var o=n-1<0?0:n-1,p=n+1>g-1?g-1:n+1,q=m-1<0?0:m-1,r=m+1>f-1?f-1:m+1,s=[],t=[0,0,j[4*(n*f+m)]/255*b];s.push([-1,0,j[4*(n*f+q)]/255*b]),s.push([-1,-1,j[4*(o*f+q)]/255*b]),s.push([0,-1,j[4*(o*f+m)]/255*b]),s.push([1,-1,j[4*(o*f+r)]/255*b]),s.push([1,0,j[4*(n*f+r)]/255*b]),s.push([1,1,j[4*(p*f+r)]/255*b]),s.push([0,1,j[4*(p*f+m)]/255*b]),s.push([-1,1,j[4*(p*f+q)]/255*b]);for(var u=[],v=s.length,w=0;w<v;w++){var x=s[w],y=s[(w+1)%v];x=d(x,t),y=d(y,t),u.push(e(c(x,y)))}for(var z=[0,0,0],w=0;w<u.length;w++)z[0]+=u[w][0],z[1]+=u[w][1],z[2]+=u[w][2];z[0]/=u.length,z[1]/=u.length,z[2]/=u.length;var A=4*(n*f+m);l[A]=(z[0]+1)/2*255|0,l[A+1]=(z[1]+1)/2*255|0,l[A+2]=255*z[2]|0,l[A+3]=255}return i.putImageData(k,0,0),h},generateDataTexture:function(a,b,c){for(var d=a*b,e=new Uint8Array(3*d),f=Math.floor(255*c.r),g=Math.floor(255*c.g),h=Math.floor(255*c.b),i=0;i<d;i++)e[3*i]=f,e[3*i+1]=g,e[3*i+2]=h;var j=new THREE.DataTexture(e,a,b,THREE.RGBFormat);return j.needsUpdate=!0,j}},THREE.SceneUtils={createMultiMaterialObject:function(a,b){for(var c=new THREE.Object3D,d=0,e=b.length;d<e;d++)c.add(new THREE.Mesh(a,b[d]));return c},detach:function(a,b,c){a.applyMatrix(b.matrixWorld),b.remove(a),c.add(a)},attach:function(a,b,c){var d=new THREE.Matrix4;d.getInverse(c.matrixWorld),a.applyMatrix(d),b.remove(a),c.add(a)}},THREE.FontUtils={faces:{},face:"helvetiker",weight:"normal",style:"normal",size:150,divisions:10,getFace:function(){return this.faces[this.face][this.weight][this.style]},loadFace:function(a){var b=a.familyName.toLowerCase(),c=this;c.faces[b]=c.faces[b]||{},c.faces[b][a.cssFontWeight]=c.faces[b][a.cssFontWeight]||{},c.faces[b][a.cssFontWeight][a.cssFontStyle]=a;c.faces[b][a.cssFontWeight][a.cssFontStyle]=a;return a},drawText:function(a){var b,c=this.getFace(),d=this.size/c.resolution,e=0,f=String(a).split(""),g=f.length,h=[];for(b=0;b<g;b++){var i=new THREE.Path,j=this.extractGlyphPoints(f[b],c,d,e,i);e+=j.offset,h.push(j.path)}var k=e/2;return{paths:h,offset:k}},extractGlyphPoints:function(a,b,c,d,e){var f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,u,v,w,x,y=[],z=b.glyphs[a]||b.glyphs["?"];if(z){if(z.o)for(i=z._cachedOutline||(z._cachedOutline=z.o.split(" ")),k=i.length,l=c,m=c,f=0;f<k;)switch(j=i[f++]){case"m":n=i[f++]*l+d,o=i[f++]*m,e.moveTo(n,o);break;case"l":n=i[f++]*l+d,o=i[f++]*m,e.lineTo(n,o);break;case"q":if(p=i[f++]*l+d,q=i[f++]*m,t=i[f++]*l+d,u=i[f++]*m,e.quadraticCurveTo(t,u,p,q),x=y[y.length-1])for(r=x.x,s=x.y,g=1,h=this.divisions;g<=h;g++){var A=g/h;THREE.Shape.Utils.b2(A,r,t,p),THREE.Shape.Utils.b2(A,s,u,q)}break;case"b":if(p=i[f++]*l+d,q=i[f++]*m,t=i[f++]*l+d,u=i[f++]*-m,v=i[f++]*l+d,w=i[f++]*-m,e.bezierCurveTo(p,q,t,u,v,w),x=y[y.length-1])for(r=x.x,s=x.y,g=1,h=this.divisions;g<=h;g++){var A=g/h;THREE.Shape.Utils.b3(A,r,t,v,p),THREE.Shape.Utils.b3(A,s,u,w,q)}}return{offset:z.ha*c,path:e}}}},THREE.FontUtils.generateShapes=function(a,b){b=b||{};var c=void 0!==b.size?b.size:100,d=void 0!==b.curveSegments?b.curveSegments:4,e=void 0!==b.font?b.font:"helvetiker",f=void 0!==b.weight?b.weight:"normal",g=void 0!==b.style?b.style:"normal";THREE.FontUtils.size=c,THREE.FontUtils.divisions=d,THREE.FontUtils.face=e,THREE.FontUtils.weight=f,THREE.FontUtils.style=g;for(var h=THREE.FontUtils.drawText(a),i=h.paths,j=[],k=0,l=i.length;k<l;k++)Array.prototype.push.apply(j,i[k].toShapes());return j},function(a){var b=1e-10,c=function(a,b){var c=a.length;if(c<3)return null;var f,g,h,i=[],j=[],k=[];if(d(a)>0)for(g=0;g<c;g++)j[g]=g;else for(g=0;g<c;g++)j[g]=c-1-g;var l=c,m=2*l;for(g=l-1;l>2;){if(m--<=0)return console.log("Warning, unable to triangulate polygon!"),b?k:i;if(f=g,l<=f&&(f=0),g=f+1,l<=g&&(g=0),h=g+1,l<=h&&(h=0),e(a,f,g,h,l,j)){var n,o,p,q,r;for(n=j[f],o=j[g],p=j[h],i.push([a[n],a[o],a[p]]),k.push([j[f],j[g],j[h]]),q=g,r=g+1;r<l;q++,r++)j[q]=j[r];l--,m=2*l}}return b?k:i},d=function(a){for(var b=a.length,c=0,d=b-1,e=0;e<b;d=e++)c+=a[d].x*a[e].y-a[e].x*a[d].y;return.5*c},e=function(a,c,d,e,f,g){var h,i,j,k,l,m,n,o,p;if(i=a[g[c]].x,j=a[g[c]].y,k=a[g[d]].x,l=a[g[d]].y,m=a[g[e]].x,n=a[g[e]].y,b>(k-i)*(n-j)-(l-j)*(m-i))return!1;var q,r,s,t,u,v,w,x,y,z,A,B,C,D,E;for(q=m-k,r=n-l,s=i-m,t=j-n,u=k-i,v=l-j,h=0;h<f;h++)if(h!==c&&h!==d&&h!==e&&(o=a[g[h]].x,p=a[g[h]].y,w=o-i,x=p-j,y=o-k,z=p-l,A=o-m,B=p-n,E=q*z-r*y,C=u*x-v*w,D=s*B-t*A,E>=-b&&D>=-b&&C>=-b))return!1;return!0};return a.Triangulate=c,a.Triangulate.area=d,a}(THREE.FontUtils),self._typeface_js={faces:THREE.FontUtils.faces,loadFace:THREE.FontUtils.loadFace},THREE.typeface_js=self._typeface_js,THREE.Curve=function(){},THREE.Curve.prototype.getPoint=function(a){return console.log("Warning, getPoint() not implemented!"),null},THREE.Curve.prototype.getPointAt=function(a){var b=this.getUtoTmapping(a);return this.getPoint(b)},THREE.Curve.prototype.getPoints=function(a){a||(a=5);var b,c=[];for(b=0;b<=a;b++)c.push(this.getPoint(b/a));return c},THREE.Curve.prototype.getSpacedPoints=function(a){a||(a=5);var b,c=[];for(b=0;b<=a;b++)c.push(this.getPointAt(b/a));return c},THREE.Curve.prototype.getLength=function(){var a=this.getLengths();return a[a.length-1]},THREE.Curve.prototype.getLengths=function(a){if(a||(a=this.__arcLengthDivisions?this.__arcLengthDivisions:200),this.cacheArcLengths&&this.cacheArcLengths.length==a+1&&!this.needsUpdate)return this.cacheArcLengths;this.needsUpdate=!1;var b,c,d=[],e=this.getPoint(0),f=0;for(d.push(0),c=1;c<=a;c++)b=this.getPoint(c/a),f+=b.distanceTo(e),d.push(f),e=b;return this.cacheArcLengths=d,d},THREE.Curve.prototype.updateArcLengths=function(){this.needsUpdate=!0,this.getLengths()},THREE.Curve.prototype.getUtoTmapping=function(a,b){var c,d=this.getLengths(),e=0,f=d.length;c=b?b:a*d[f-1];for(var g,h=0,i=f-1;h<=i;)if(e=Math.floor(h+(i-h)/2),g=d[e]-c,g<0)h=e+1;else{if(!(g>0)){i=e;break}i=e-1}if(e=i,d[e]==c){var j=e/(f-1);return j}var k=d[e],l=d[e+1],m=l-k,n=(c-k)/m,j=(e+n)/(f-1);return j},THREE.Curve.prototype.getTangent=function(a){var b=1e-4,c=a-b,d=a+b;c<0&&(c=0),d>1&&(d=1);var e=this.getPoint(c),f=this.getPoint(d),g=f.clone().sub(e);return g.normalize()},THREE.Curve.prototype.getTangentAt=function(a){var b=this.getUtoTmapping(a);return this.getTangent(b)},THREE.Curve.Utils={tangentQuadraticBezier:function(a,b,c,d){return 2*(1-a)*(c-b)+2*a*(d-c)},tangentCubicBezier:function(a,b,c,d,e){return-3*b*(1-a)*(1-a)+3*c*(1-a)*(1-a)-6*a*c*(1-a)+6*a*d*(1-a)-3*a*a*d+3*a*a*e},tangentSpline:function(a,b,c,d,e){var f=6*a*a-6*a,g=3*a*a-4*a+1,h=-6*a*a+6*a,i=3*a*a-2*a;return f+g+h+i},interpolate:function(a,b,c,d,e){var f=.5*(c-a),g=.5*(d-b),h=e*e,i=e*h;return(2*b-2*c+f+g)*i+(-3*b+3*c-2*f-g)*h+f*e+b}},THREE.Curve.create=function(a,b){return a.prototype=Object.create(THREE.Curve.prototype),a.prototype.getPoint=b,a},THREE.CurvePath=function(){this.curves=[],this.bends=[],this.autoClose=!1},THREE.CurvePath.prototype=Object.create(THREE.Curve.prototype),THREE.CurvePath.prototype.add=function(a){this.curves.push(a)},THREE.CurvePath.prototype.checkConnection=function(){},THREE.CurvePath.prototype.closePath=function(){var a=this.curves[0].getPoint(0),b=this.curves[this.curves.length-1].getPoint(1);a.equals(b)||this.curves.push(new THREE.LineCurve(b,a))},THREE.CurvePath.prototype.getPoint=function(a){for(var b,c,d=a*this.getLength(),e=this.getCurveLengths(),f=0;f<e.length;){if(e[f]>=d){b=e[f]-d,c=this.curves[f];var g=1-b/c.getLength();return c.getPointAt(g)}f++}return null},THREE.CurvePath.prototype.getLength=function(){var a=this.getCurveLengths();return a[a.length-1]},THREE.CurvePath.prototype.getCurveLengths=function(){if(this.cacheLengths&&this.cacheLengths.length==this.curves.length)return this.cacheLengths;var a,b=[],c=0,d=this.curves.length;for(a=0;a<d;a++)c+=this.curves[a].getLength(),b.push(c);return this.cacheLengths=b,b},THREE.CurvePath.prototype.getBoundingBox=function(){var a,b,c,d,e,f,g=this.getPoints();a=b=Number.NEGATIVE_INFINITY,d=e=Number.POSITIVE_INFINITY;var h,i,j,k,l=g[0]instanceof THREE.Vector3;for(k=l?new THREE.Vector3:new THREE.Vector2,i=0,j=g.length;i<j;i++)h=g[i],h.x>a?a=h.x:h.x<d&&(d=h.x),h.y>b?b=h.y:h.y<e&&(e=h.y),l&&(h.z>c?c=h.z:h.z<f&&(f=h.z)),k.add(h);var m={minX:d,minY:e,maxX:a,maxY:b,centroid:k.divideScalar(j)};return l&&(m.maxZ=c,m.minZ=f),m},THREE.CurvePath.prototype.createPointsGeometry=function(a){var b=this.getPoints(a,!0);return this.createGeometry(b)},THREE.CurvePath.prototype.createSpacedPointsGeometry=function(a){var b=this.getSpacedPoints(a,!0);return this.createGeometry(b)},THREE.CurvePath.prototype.createGeometry=function(a){for(var b=new THREE.Geometry,c=0;c<a.length;c++)b.vertices.push(new THREE.Vector3(a[c].x,a[c].y,a[c].z||0));return b},THREE.CurvePath.prototype.addWrapPath=function(a){this.bends.push(a)},THREE.CurvePath.prototype.getTransformedPoints=function(a,b){var c,d,e=this.getPoints(a);for(b||(b=this.bends),c=0,d=b.length;c<d;c++)e=this.getWrapPoints(e,b[c]);return e},THREE.CurvePath.prototype.getTransformedSpacedPoints=function(a,b){var c,d,e=this.getSpacedPoints(a);for(b||(b=this.bends),c=0,d=b.length;c<d;c++)e=this.getWrapPoints(e,b[c]);return e},THREE.CurvePath.prototype.getWrapPoints=function(a,b){var c,d,e,f,g,h,i=this.getBoundingBox();for(c=0,d=a.length;c<d;c++){e=a[c],f=e.x,g=e.y,h=f/i.maxX,h=b.getUtoTmapping(h,f);var j=b.getPoint(h),k=b.getNormalVector(h).multiplyScalar(g);e.x=j.x+k.x,e.y=j.y+k.y}return a},THREE.Gyroscope=function(){THREE.Object3D.call(this)},THREE.Gyroscope.prototype=Object.create(THREE.Object3D.prototype),THREE.Gyroscope.prototype.updateMatrixWorld=function(a){this.matrixAutoUpdate&&this.updateMatrix(),
(this.matrixWorldNeedsUpdate||a)&&(this.parent?(this.matrixWorld.multiplyMatrices(this.parent.matrixWorld,this.matrix),this.matrixWorld.decompose(this.translationWorld,this.quaternionWorld,this.scaleWorld),this.matrix.decompose(this.translationObject,this.quaternionObject,this.scaleObject),this.matrixWorld.compose(this.translationWorld,this.quaternionObject,this.scaleWorld)):this.matrixWorld.copy(this.matrix),this.matrixWorldNeedsUpdate=!1,a=!0);for(var b=0,c=this.children.length;b<c;b++)this.children[b].updateMatrixWorld(a)},THREE.Gyroscope.prototype.translationWorld=new THREE.Vector3,THREE.Gyroscope.prototype.translationObject=new THREE.Vector3,THREE.Gyroscope.prototype.quaternionWorld=new THREE.Quaternion,THREE.Gyroscope.prototype.quaternionObject=new THREE.Quaternion,THREE.Gyroscope.prototype.scaleWorld=new THREE.Vector3,THREE.Gyroscope.prototype.scaleObject=new THREE.Vector3,THREE.Path=function(a){THREE.CurvePath.call(this),this.actions=[],a&&this.fromPoints(a)},THREE.Path.prototype=Object.create(THREE.CurvePath.prototype),THREE.PathActions={MOVE_TO:"moveTo",LINE_TO:"lineTo",QUADRATIC_CURVE_TO:"quadraticCurveTo",BEZIER_CURVE_TO:"bezierCurveTo",CSPLINE_THRU:"splineThru",ARC:"arc",ELLIPSE:"ellipse"},THREE.Path.prototype.fromPoints=function(a){this.moveTo(a[0].x,a[0].y);for(var b=1,c=a.length;b<c;b++)this.lineTo(a[b].x,a[b].y)},THREE.Path.prototype.moveTo=function(a,b){var c=Array.prototype.slice.call(arguments);this.actions.push({action:THREE.PathActions.MOVE_TO,args:c})},THREE.Path.prototype.lineTo=function(a,b){var c=Array.prototype.slice.call(arguments),d=this.actions[this.actions.length-1].args,e=d[d.length-2],f=d[d.length-1],g=new THREE.LineCurve(new THREE.Vector2(e,f),new THREE.Vector2(a,b));this.curves.push(g),this.actions.push({action:THREE.PathActions.LINE_TO,args:c})},THREE.Path.prototype.quadraticCurveTo=function(a,b,c,d){var e=Array.prototype.slice.call(arguments),f=this.actions[this.actions.length-1].args,g=f[f.length-2],h=f[f.length-1],i=new THREE.QuadraticBezierCurve(new THREE.Vector2(g,h),new THREE.Vector2(a,b),new THREE.Vector2(c,d));this.curves.push(i),this.actions.push({action:THREE.PathActions.QUADRATIC_CURVE_TO,args:e})},THREE.Path.prototype.bezierCurveTo=function(a,b,c,d,e,f){var g=Array.prototype.slice.call(arguments),h=this.actions[this.actions.length-1].args,i=h[h.length-2],j=h[h.length-1],k=new THREE.CubicBezierCurve(new THREE.Vector2(i,j),new THREE.Vector2(a,b),new THREE.Vector2(c,d),new THREE.Vector2(e,f));this.curves.push(k),this.actions.push({action:THREE.PathActions.BEZIER_CURVE_TO,args:g})},THREE.Path.prototype.splineThru=function(a){var b=Array.prototype.slice.call(arguments),c=this.actions[this.actions.length-1].args,d=c[c.length-2],e=c[c.length-1],f=[new THREE.Vector2(d,e)];Array.prototype.push.apply(f,a);var g=new THREE.SplineCurve(f);this.curves.push(g),this.actions.push({action:THREE.PathActions.CSPLINE_THRU,args:b})},THREE.Path.prototype.arc=function(a,b,c,d,e,f){var g=this.actions[this.actions.length-1].args,h=g[g.length-2],i=g[g.length-1];this.absarc(a+h,b+i,c,d,e,f)},THREE.Path.prototype.absarc=function(a,b,c,d,e,f){this.absellipse(a,b,c,c,d,e,f)},THREE.Path.prototype.ellipse=function(a,b,c,d,e,f,g){var h=this.actions[this.actions.length-1].args,i=h[h.length-2],j=h[h.length-1];this.absellipse(a+i,b+j,c,d,e,f,g)},THREE.Path.prototype.absellipse=function(a,b,c,d,e,f,g){var h=Array.prototype.slice.call(arguments),i=new THREE.EllipseCurve(a,b,c,d,e,f,g);this.curves.push(i);var j=i.getPoint(g?1:0);h.push(j.x),h.push(j.y),this.actions.push({action:THREE.PathActions.ELLIPSE,args:h})},THREE.Path.prototype.getSpacedPoints=function(a,b){a||(a=40);for(var c=[],d=0;d<a;d++)c.push(this.getPoint(d/a));return c},THREE.Path.prototype.getPoints=function(a,b){if(this.useSpacedPoints)return console.log("tata"),this.getSpacedPoints(a,b);a=a||12;var c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,u=[];for(c=0,d=this.actions.length;c<d;c++)switch(e=this.actions[c],f=e.action,g=e.args,f){case THREE.PathActions.MOVE_TO:u.push(new THREE.Vector2(g[0],g[1]));break;case THREE.PathActions.LINE_TO:u.push(new THREE.Vector2(g[0],g[1]));break;case THREE.PathActions.QUADRATIC_CURVE_TO:for(h=g[2],i=g[3],l=g[0],m=g[1],u.length>0?(p=u[u.length-1],n=p.x,o=p.y):(p=this.actions[c-1].args,n=p[p.length-2],o=p[p.length-1]),q=1;q<=a;q++)r=q/a,s=THREE.Shape.Utils.b2(r,n,l,h),t=THREE.Shape.Utils.b2(r,o,m,i),u.push(new THREE.Vector2(s,t));break;case THREE.PathActions.BEZIER_CURVE_TO:for(h=g[4],i=g[5],l=g[0],m=g[1],j=g[2],k=g[3],u.length>0?(p=u[u.length-1],n=p.x,o=p.y):(p=this.actions[c-1].args,n=p[p.length-2],o=p[p.length-1]),q=1;q<=a;q++)r=q/a,s=THREE.Shape.Utils.b3(r,n,l,j,h),t=THREE.Shape.Utils.b3(r,o,m,k,i),u.push(new THREE.Vector2(s,t));break;case THREE.PathActions.CSPLINE_THRU:p=this.actions[c-1].args;var v=new THREE.Vector2(p[p.length-2],p[p.length-1]),w=[v],x=a*g[0].length;w=w.concat(g[0]);var y=new THREE.SplineCurve(w);for(q=1;q<=x;q++)u.push(y.getPointAt(q/x));break;case THREE.PathActions.ARC:var z,A=g[0],B=g[1],C=g[2],D=g[3],E=g[4],F=!!g[5],G=E-D,H=2*a;for(q=1;q<=H;q++)r=q/H,F||(r=1-r),z=D+r*G,s=A+C*Math.cos(z),t=B+C*Math.sin(z),u.push(new THREE.Vector2(s,t));break;case THREE.PathActions.ELLIPSE:var z,A=g[0],B=g[1],I=g[2],J=g[3],D=g[4],E=g[5],F=!!g[6],G=E-D,H=2*a;for(q=1;q<=H;q++)r=q/H,F||(r=1-r),z=D+r*G,s=A+I*Math.cos(z),t=B+J*Math.sin(z),u.push(new THREE.Vector2(s,t))}var K=u[u.length-1],L=1e-10;return Math.abs(K.x-u[0].x)<L&&Math.abs(K.y-u[0].y)<L&&u.splice(u.length-1,1),b&&u.push(u[0]),u},THREE.Path.prototype.toShapes=function(a){var b,c,d,e,f,g=[],h=new THREE.Path;for(b=0,c=this.actions.length;b<c;b++)d=this.actions[b],f=d.args,e=d.action,e==THREE.PathActions.MOVE_TO&&0!=h.actions.length&&(g.push(h),h=new THREE.Path),h[e].apply(h,f);if(0!=h.actions.length&&g.push(h),0==g.length)return[];var i,j,k,l=[];if(1==g.length)return j=g[0],k=new THREE.Shape,k.actions=j.actions,k.curves=j.curves,l.push(k),l;var m=!THREE.Shape.Utils.isClockWise(g[0].getPoints());if(m=a?!m:m)for(k=new THREE.Shape,b=0,c=g.length;b<c;b++)j=g[b],i=THREE.Shape.Utils.isClockWise(j.getPoints()),i=a?!i:i,i?(k.actions=j.actions,k.curves=j.curves,l.push(k),k=new THREE.Shape):k.holes.push(j);else{for(k=void 0,b=0,c=g.length;b<c;b++)j=g[b],i=THREE.Shape.Utils.isClockWise(j.getPoints()),i=a?!i:i,i?(k&&l.push(k),k=new THREE.Shape,k.actions=j.actions,k.curves=j.curves):k.holes.push(j);l.push(k)}return l},THREE.Shape=function(){THREE.Path.apply(this,arguments),this.holes=[]},THREE.Shape.prototype=Object.create(THREE.Path.prototype),THREE.Shape.prototype.extrude=function(a){var b=new THREE.ExtrudeGeometry(this,a);return b},THREE.Shape.prototype.makeGeometry=function(a){var b=new THREE.ShapeGeometry(this,a);return b},THREE.Shape.prototype.getPointsHoles=function(a){var b,c=this.holes.length,d=[];for(b=0;b<c;b++)d[b]=this.holes[b].getTransformedPoints(a,this.bends);return d},THREE.Shape.prototype.getSpacedPointsHoles=function(a){var b,c=this.holes.length,d=[];for(b=0;b<c;b++)d[b]=this.holes[b].getTransformedSpacedPoints(a,this.bends);return d},THREE.Shape.prototype.extractAllPoints=function(a){return{shape:this.getTransformedPoints(a),holes:this.getPointsHoles(a)}},THREE.Shape.prototype.extractPoints=function(a){return this.useSpacedPoints?this.extractAllSpacedPoints(a):this.extractAllPoints(a)},THREE.Shape.prototype.extractAllSpacedPoints=function(a){return{shape:this.getTransformedSpacedPoints(a),holes:this.getSpacedPointsHoles(a)}},THREE.Shape.Utils={removeHoles:function(a,b){var c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s=a.concat(),t=s.concat(),u=[];for(g=0;g<b.length;g++){for(i=b[g],Array.prototype.push.apply(t,i),j=Number.POSITIVE_INFINITY,h=0;h<i.length;h++){m=i[h];var v=[];for(l=0;l<s.length;l++)n=s[l],k=m.distanceToSquared(n),v.push(k),k<j&&(j=k,e=h,f=l)}c=f-1>=0?f-1:s.length-1,d=e-1>=0?e-1:i.length-1;var w=[i[e],s[f],s[c]],x=THREE.FontUtils.Triangulate.area(w),y=[i[e],i[d],s[f]],z=THREE.FontUtils.Triangulate.area(y),A=1,B=-1,C=f,D=e;f+=A,e+=B,f<0&&(f+=s.length),f%=s.length,e<0&&(e+=i.length),e%=i.length,c=f-1>=0?f-1:s.length-1,d=e-1>=0?e-1:i.length-1,w=[i[e],s[f],s[c]];var E=THREE.FontUtils.Triangulate.area(w);y=[i[e],i[d],s[f]];var F=THREE.FontUtils.Triangulate.area(y);x+z>E+F&&(f=C,e=D,f<0&&(f+=s.length),f%=s.length,e<0&&(e+=i.length),e%=i.length,c=f-1>=0?f-1:s.length-1,d=e-1>=0?e-1:i.length-1),o=s.slice(0,f),p=s.slice(f),q=i.slice(e),r=i.slice(0,e);var G=[i[e],s[f],s[c]],H=[i[e],i[d],s[f]];u.push(G),u.push(H),s=o.concat(q).concat(r).concat(p)}return{shape:s,isolatedPts:u,allpoints:t}},triangulateShape:function(a,b){var c,d,e,f,g,h,i=THREE.Shape.Utils.removeHoles(a,b),j=i.shape,k=i.allpoints,l=i.isolatedPts,m=THREE.FontUtils.Triangulate(j,!1),n={};for(c=0,d=k.length;c<d;c++)g=k[c].x+":"+k[c].y,void 0!==n[g]&&console.log("Duplicate point",g),n[g]=c;for(c=0,d=m.length;c<d;c++)for(f=m[c],e=0;e<3;e++)g=f[e].x+":"+f[e].y,h=n[g],void 0!==h&&(f[e]=h);for(c=0,d=l.length;c<d;c++)for(f=l[c],e=0;e<3;e++)g=f[e].x+":"+f[e].y,h=n[g],void 0!==h&&(f[e]=h);return m.concat(l)},isClockWise:function(a){return THREE.FontUtils.Triangulate.area(a)<0},b2p0:function(a,b){var c=1-a;return c*c*b},b2p1:function(a,b){return 2*(1-a)*a*b},b2p2:function(a,b){return a*a*b},b2:function(a,b,c,d){return this.b2p0(a,b)+this.b2p1(a,c)+this.b2p2(a,d)},b3p0:function(a,b){var c=1-a;return c*c*c*b},b3p1:function(a,b){var c=1-a;return 3*c*c*a*b},b3p2:function(a,b){var c=1-a;return 3*c*a*a*b},b3p3:function(a,b){return a*a*a*b},b3:function(a,b,c,d,e){return this.b3p0(a,b)+this.b3p1(a,c)+this.b3p2(a,d)+this.b3p3(a,e)}},THREE.LineCurve=function(a,b){this.v1=a,this.v2=b},THREE.LineCurve.prototype=Object.create(THREE.Curve.prototype),THREE.LineCurve.prototype.getPoint=function(a){var b=this.v2.clone().sub(this.v1);return b.multiplyScalar(a).add(this.v1),b},THREE.LineCurve.prototype.getPointAt=function(a){return this.getPoint(a)},THREE.LineCurve.prototype.getTangent=function(a){var b=this.v2.clone().sub(this.v1);return b.normalize()},THREE.QuadraticBezierCurve=function(a,b,c){this.v0=a,this.v1=b,this.v2=c},THREE.QuadraticBezierCurve.prototype=Object.create(THREE.Curve.prototype),THREE.QuadraticBezierCurve.prototype.getPoint=function(a){var b,c;return b=THREE.Shape.Utils.b2(a,this.v0.x,this.v1.x,this.v2.x),c=THREE.Shape.Utils.b2(a,this.v0.y,this.v1.y,this.v2.y),new THREE.Vector2(b,c)},THREE.QuadraticBezierCurve.prototype.getTangent=function(a){var b,c;b=THREE.Curve.Utils.tangentQuadraticBezier(a,this.v0.x,this.v1.x,this.v2.x),c=THREE.Curve.Utils.tangentQuadraticBezier(a,this.v0.y,this.v1.y,this.v2.y);var d=new THREE.Vector2(b,c);return d.normalize(),d},THREE.CubicBezierCurve=function(a,b,c,d){this.v0=a,this.v1=b,this.v2=c,this.v3=d},THREE.CubicBezierCurve.prototype=Object.create(THREE.Curve.prototype),THREE.CubicBezierCurve.prototype.getPoint=function(a){var b,c;return b=THREE.Shape.Utils.b3(a,this.v0.x,this.v1.x,this.v2.x,this.v3.x),c=THREE.Shape.Utils.b3(a,this.v0.y,this.v1.y,this.v2.y,this.v3.y),new THREE.Vector2(b,c)},THREE.CubicBezierCurve.prototype.getTangent=function(a){var b,c;b=THREE.Curve.Utils.tangentCubicBezier(a,this.v0.x,this.v1.x,this.v2.x,this.v3.x),c=THREE.Curve.Utils.tangentCubicBezier(a,this.v0.y,this.v1.y,this.v2.y,this.v3.y);var d=new THREE.Vector2(b,c);return d.normalize(),d},THREE.SplineCurve=function(a){this.points=void 0==a?[]:a},THREE.SplineCurve.prototype=Object.create(THREE.Curve.prototype),THREE.SplineCurve.prototype.getPoint=function(a){var b,c,d,e=new THREE.Vector2,f=[],g=this.points;return b=(g.length-1)*a,c=Math.floor(b),d=b-c,f[0]=0==c?c:c-1,f[1]=c,f[2]=c>g.length-2?g.length-1:c+1,f[3]=c>g.length-3?g.length-1:c+2,e.x=THREE.Curve.Utils.interpolate(g[f[0]].x,g[f[1]].x,g[f[2]].x,g[f[3]].x,d),e.y=THREE.Curve.Utils.interpolate(g[f[0]].y,g[f[1]].y,g[f[2]].y,g[f[3]].y,d),e},THREE.EllipseCurve=function(a,b,c,d,e,f,g){this.aX=a,this.aY=b,this.xRadius=c,this.yRadius=d,this.aStartAngle=e,this.aEndAngle=f,this.aClockwise=g},THREE.EllipseCurve.prototype=Object.create(THREE.Curve.prototype),THREE.EllipseCurve.prototype.getPoint=function(a){var b=this.aEndAngle-this.aStartAngle;this.aClockwise||(a=1-a);var c=this.aStartAngle+a*b,d=this.aX+this.xRadius*Math.cos(c),e=this.aY+this.yRadius*Math.sin(c);return new THREE.Vector2(d,e)},THREE.ArcCurve=function(a,b,c,d,e,f){THREE.EllipseCurve.call(this,a,b,c,c,d,e,f)},THREE.ArcCurve.prototype=Object.create(THREE.EllipseCurve.prototype),THREE.LineCurve3=THREE.Curve.create(function(a,b){this.v1=a,this.v2=b},function(a){var b=new THREE.Vector3;return b.subVectors(this.v2,this.v1),b.multiplyScalar(a),b.add(this.v1),b}),THREE.QuadraticBezierCurve3=THREE.Curve.create(function(a,b,c){this.v0=a,this.v1=b,this.v2=c},function(a){var b,c,d;return b=THREE.Shape.Utils.b2(a,this.v0.x,this.v1.x,this.v2.x),c=THREE.Shape.Utils.b2(a,this.v0.y,this.v1.y,this.v2.y),d=THREE.Shape.Utils.b2(a,this.v0.z,this.v1.z,this.v2.z),new THREE.Vector3(b,c,d)}),THREE.CubicBezierCurve3=THREE.Curve.create(function(a,b,c,d){this.v0=a,this.v1=b,this.v2=c,this.v3=d},function(a){var b,c,d;return b=THREE.Shape.Utils.b3(a,this.v0.x,this.v1.x,this.v2.x,this.v3.x),c=THREE.Shape.Utils.b3(a,this.v0.y,this.v1.y,this.v2.y,this.v3.y),d=THREE.Shape.Utils.b3(a,this.v0.z,this.v1.z,this.v2.z,this.v3.z),new THREE.Vector3(b,c,d)}),THREE.SplineCurve3=THREE.Curve.create(function(a){this.points=void 0==a?[]:a},function(a){var b,c,d,e=new THREE.Vector3,f=[],g=this.points;b=(g.length-1)*a,c=Math.floor(b),d=b-c,f[0]=0==c?c:c-1,f[1]=c,f[2]=c>g.length-2?g.length-1:c+1,f[3]=c>g.length-3?g.length-1:c+2;var h=g[f[0]],i=g[f[1]],j=g[f[2]],k=g[f[3]];return e.x=THREE.Curve.Utils.interpolate(h.x,i.x,j.x,k.x,d),e.y=THREE.Curve.Utils.interpolate(h.y,i.y,j.y,k.y,d),e.z=THREE.Curve.Utils.interpolate(h.z,i.z,j.z,k.z,d),e}),THREE.ClosedSplineCurve3=THREE.Curve.create(function(a){this.points=void 0==a?[]:a},function(a){var b,c,d,e=new THREE.Vector3,f=[],g=this.points;return b=(g.length-0)*a,c=Math.floor(b),d=b-c,c+=c>0?0:(Math.floor(Math.abs(c)/g.length)+1)*g.length,f[0]=(c-1)%g.length,f[1]=c%g.length,f[2]=(c+1)%g.length,f[3]=(c+2)%g.length,e.x=THREE.Curve.Utils.interpolate(g[f[0]].x,g[f[1]].x,g[f[2]].x,g[f[3]].x,d),e.y=THREE.Curve.Utils.interpolate(g[f[0]].y,g[f[1]].y,g[f[2]].y,g[f[3]].y,d),e.z=THREE.Curve.Utils.interpolate(g[f[0]].z,g[f[1]].z,g[f[2]].z,g[f[3]].z,d),e}),THREE.AnimationHandler=function(){var a=[],b={},c={};c.update=function(b){for(var c=0;c<a.length;c++)a[c].update(b)},c.addToUpdate=function(b){a.indexOf(b)===-1&&a.push(b)},c.removeFromUpdate=function(b){var c=a.indexOf(b);c!==-1&&a.splice(c,1)},c.add=function(a){void 0!==b[a.name]&&console.log("THREE.AnimationHandler.add: Warning! "+a.name+" already exists in library. Overwriting."),b[a.name]=a,e(a)},c.get=function(a){if("string"==typeof a)return b[a]?b[a]:(console.log("THREE.AnimationHandler.get: Couldn't find animation "+a),null)},c.parse=function(a){var b=[];if(a instanceof THREE.SkinnedMesh)for(var c=0;c<a.bones.length;c++)b.push(a.bones[c]);else d(a,b);return b};var d=function(a,b){b.push(a);for(var c=0;c<a.children.length;c++)d(a.children[c],b)},e=function(a){if(a.initialized!==!0){for(var b=0;b<a.hierarchy.length;b++){for(var c=0;c<a.hierarchy[b].keys.length;c++)if(a.hierarchy[b].keys[c].time<0&&(a.hierarchy[b].keys[c].time=0),void 0!==a.hierarchy[b].keys[c].rot&&!(a.hierarchy[b].keys[c].rot instanceof THREE.Quaternion)){var d=a.hierarchy[b].keys[c].rot;a.hierarchy[b].keys[c].rot=new THREE.Quaternion(d[0],d[1],d[2],d[3])}if(a.hierarchy[b].keys.length&&void 0!==a.hierarchy[b].keys[0].morphTargets){for(var e={},c=0;c<a.hierarchy[b].keys.length;c++)for(var f=0;f<a.hierarchy[b].keys[c].morphTargets.length;f++){var g=a.hierarchy[b].keys[c].morphTargets[f];e[g]=-1}a.hierarchy[b].usedMorphTargets=e;for(var c=0;c<a.hierarchy[b].keys.length;c++){var h={};for(var g in e){for(var f=0;f<a.hierarchy[b].keys[c].morphTargets.length;f++)if(a.hierarchy[b].keys[c].morphTargets[f]===g){h[g]=a.hierarchy[b].keys[c].morphTargetsInfluences[f];break}f===a.hierarchy[b].keys[c].morphTargets.length&&(h[g]=0)}a.hierarchy[b].keys[c].morphTargetsInfluences=h}}for(var c=1;c<a.hierarchy[b].keys.length;c++)a.hierarchy[b].keys[c].time===a.hierarchy[b].keys[c-1].time&&(a.hierarchy[b].keys.splice(c,1),c--);for(var c=0;c<a.hierarchy[b].keys.length;c++)a.hierarchy[b].keys[c].index=c}var i=parseInt(a.length*a.fps,10);a.JIT={},a.JIT.hierarchy=[];for(var b=0;b<a.hierarchy.length;b++)a.JIT.hierarchy.push(new Array(i));a.initialized=!0}};return c.LINEAR=0,c.CATMULLROM=1,c.CATMULLROM_FORWARD=2,c}(),THREE.Animation=function(a,b,c){this.root=a,this.data=THREE.AnimationHandler.get(b),this.hierarchy=THREE.AnimationHandler.parse(a),this.currentTime=0,this.timeScale=1,this.isPlaying=!1,this.isPaused=!0,this.loop=!0,this.interpolationType=void 0!==c?c:THREE.AnimationHandler.LINEAR,this.points=[],this.target=new THREE.Vector3},THREE.Animation.prototype.play=function(a,b){if(this.isPlaying===!1){this.isPlaying=!0,this.loop=void 0===a||a,this.currentTime=void 0!==b?b:0;var c,d,e=this.hierarchy.length;for(c=0;c<e;c++){d=this.hierarchy[c],d.matrixAutoUpdate=!0,void 0===d.animationCache&&(d.animationCache={},d.animationCache.prevKey={pos:0,rot:0,scl:0},d.animationCache.nextKey={pos:0,rot:0,scl:0},d.animationCache.originalMatrix=d instanceof THREE.Bone?d.skinMatrix:d.matrix);var f=d.animationCache.prevKey,g=d.animationCache.nextKey;f.pos=this.data.hierarchy[c].keys[0],f.rot=this.data.hierarchy[c].keys[0],f.scl=this.data.hierarchy[c].keys[0],g.pos=this.getNextKeyWith("pos",c,1),g.rot=this.getNextKeyWith("rot",c,1),g.scl=this.getNextKeyWith("scl",c,1)}this.update(0)}this.isPaused=!1,THREE.AnimationHandler.addToUpdate(this)},THREE.Animation.prototype.pause=function(){this.isPaused===!0?THREE.AnimationHandler.addToUpdate(this):THREE.AnimationHandler.removeFromUpdate(this),this.isPaused=!this.isPaused},THREE.Animation.prototype.stop=function(){this.isPlaying=!1,this.isPaused=!1,THREE.AnimationHandler.removeFromUpdate(this)},THREE.Animation.prototype.update=function(a){if(this.isPlaying!==!1){var b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q=["pos","rot","scl"];this.data.JIT.hierarchy;this.currentTime+=a*this.timeScale,m=this.currentTime,l=this.currentTime=this.currentTime%this.data.length,k=parseInt(Math.min(l*this.data.fps,this.data.length*this.data.fps),10);for(var r=0,s=this.hierarchy.length;r<s;r++){i=this.hierarchy[r],j=i.animationCache;for(var t=0;t<3;t++){if(b=q[t],g=j.prevKey[b],h=j.nextKey[b],h.time<=m){if(l<m){if(!this.loop)return void this.stop();for(g=this.data.hierarchy[r].keys[0],h=this.getNextKeyWith(b,r,1);h.time<l;)g=h,h=this.getNextKeyWith(b,r,h.index+1)}else do g=h,h=this.getNextKeyWith(b,r,h.index+1);while(h.time<l);j.prevKey[b]=g,j.nextKey[b]=h}i.matrixAutoUpdate=!0,i.matrixWorldNeedsUpdate=!0,c=(l-g.time)/(h.time-g.time),e=g[b],f=h[b],(c<0||c>1)&&(console.log("THREE.Animation.update: Warning! Scale out of bounds:"+c+" on bone "+r),c=c<0?0:1),"pos"===b?(d=i.position,this.interpolationType===THREE.AnimationHandler.LINEAR?(d.x=e[0]+(f[0]-e[0])*c,d.y=e[1]+(f[1]-e[1])*c,d.z=e[2]+(f[2]-e[2])*c):this.interpolationType!==THREE.AnimationHandler.CATMULLROM&&this.interpolationType!==THREE.AnimationHandler.CATMULLROM_FORWARD||(this.points[0]=this.getPrevKeyWith("pos",r,g.index-1).pos,this.points[1]=e,this.points[2]=f,this.points[3]=this.getNextKeyWith("pos",r,h.index+1).pos,c=.33*c+.33,n=this.interpolateCatmullRom(this.points,c),d.x=n[0],d.y=n[1],d.z=n[2],this.interpolationType===THREE.AnimationHandler.CATMULLROM_FORWARD&&(o=this.interpolateCatmullRom(this.points,1.01*c),this.target.set(o[0],o[1],o[2]),this.target.sub(d),this.target.y=0,this.target.normalize(),p=Math.atan2(this.target.x,this.target.z),i.rotation.set(0,p,0)))):"rot"===b?THREE.Quaternion.slerp(e,f,i.quaternion,c):"scl"===b&&(d=i.scale,d.x=e[0]+(f[0]-e[0])*c,d.y=e[1]+(f[1]-e[1])*c,d.z=e[2]+(f[2]-e[2])*c)}}}},THREE.Animation.prototype.interpolateCatmullRom=function(a,b){var c,d,e,f,g,h,i,j,k,l=[],m=[];return c=(a.length-1)*b,d=Math.floor(c),e=c-d,l[0]=0===d?d:d-1,l[1]=d,l[2]=d>a.length-2?d:d+1,l[3]=d>a.length-3?d:d+2,h=a[l[0]],i=a[l[1]],j=a[l[2]],k=a[l[3]],f=e*e,g=e*f,m[0]=this.interpolate(h[0],i[0],j[0],k[0],e,f,g),m[1]=this.interpolate(h[1],i[1],j[1],k[1],e,f,g),m[2]=this.interpolate(h[2],i[2],j[2],k[2],e,f,g),m},THREE.Animation.prototype.interpolate=function(a,b,c,d,e,f,g){var h=.5*(c-a),i=.5*(d-b);return(2*(b-c)+h+i)*g+(-3*(b-c)-2*h-i)*f+h*e+b},THREE.Animation.prototype.getNextKeyWith=function(a,b,c){var d=this.data.hierarchy[b].keys;for(this.interpolationType===THREE.AnimationHandler.CATMULLROM||this.interpolationType===THREE.AnimationHandler.CATMULLROM_FORWARD?c=c<d.length-1?c:d.length-1:c%=d.length;c<d.length;c++)if(void 0!==d[c][a])return d[c];return this.data.hierarchy[b].keys[0]},THREE.Animation.prototype.getPrevKeyWith=function(a,b,c){var d=this.data.hierarchy[b].keys;for(c=this.interpolationType===THREE.AnimationHandler.CATMULLROM||this.interpolationType===THREE.AnimationHandler.CATMULLROM_FORWARD?c>0?c:0:c>=0?c:c+d.length;c>=0;c--)if(void 0!==d[c][a])return d[c];return this.data.hierarchy[b].keys[d.length-1]},THREE.KeyFrameAnimation=function(a,b,c){this.root=a,this.data=THREE.AnimationHandler.get(b),this.hierarchy=THREE.AnimationHandler.parse(a),this.currentTime=0,this.timeScale=.001,this.isPlaying=!1,this.isPaused=!0,this.loop=!0,this.JITCompile=void 0===c||c;for(var d=0,e=this.hierarchy.length;d<e;d++){var f=this.data.hierarchy[d].keys,g=this.data.hierarchy[d].sids,h=this.hierarchy[d];if(f.length&&g){for(var i=0;i<g.length;i++){var j=g[i],k=this.getNextKeyWith(j,d,0);k&&k.apply(j)}h.matrixAutoUpdate=!1,this.data.hierarchy[d].node.updateMatrix(),h.matrixWorldNeedsUpdate=!0}}},THREE.KeyFrameAnimation.prototype.play=function(a,b){if(!this.isPlaying){this.isPlaying=!0,this.loop=void 0===a||a,this.currentTime=void 0!==b?b:0,this.startTimeMs=b,this.startTime=1e7,this.endTime=-this.startTime;var c,d,e,f=this.hierarchy.length;for(c=0;c<f;c++){d=this.hierarchy[c],e=this.data.hierarchy[c],void 0===e.animationCache&&(e.animationCache={},e.animationCache.prevKey=null,e.animationCache.nextKey=null,e.animationCache.originalMatrix=d instanceof THREE.Bone?d.skinMatrix:d.matrix);var g=this.data.hierarchy[c].keys;g.length&&(e.animationCache.prevKey=g[0],e.animationCache.nextKey=g[1],this.startTime=Math.min(g[0].time,this.startTime),this.endTime=Math.max(g[g.length-1].time,this.endTime))}this.update(0)}this.isPaused=!1,THREE.AnimationHandler.addToUpdate(this)},THREE.KeyFrameAnimation.prototype.pause=function(){this.isPaused?THREE.AnimationHandler.addToUpdate(this):THREE.AnimationHandler.removeFromUpdate(this),this.isPaused=!this.isPaused},THREE.KeyFrameAnimation.prototype.stop=function(){this.isPlaying=!1,this.isPaused=!1,THREE.AnimationHandler.removeFromUpdate(this);for(var a=0;a<this.data.hierarchy.length;a++){var b=this.hierarchy[a],c=this.data.hierarchy[a];if(void 0!==c.animationCache){var d=c.animationCache.originalMatrix;b instanceof THREE.Bone?(d.copy(b.skinMatrix),b.skinMatrix=d):(d.copy(b.matrix),b.matrix=d),delete c.animationCache}}},THREE.KeyFrameAnimation.prototype.update=function(a){if(this.isPlaying){var b,c,d,e,f,g,h,i,j=this.data.JIT.hierarchy;if(this.currentTime+=a*this.timeScale,h=this.currentTime,g=this.currentTime=this.currentTime%this.data.length,g<this.startTimeMs&&(g=this.currentTime=this.startTimeMs+g),f=parseInt(Math.min(g*this.data.fps,this.data.length*this.data.fps),10),i=g<h,i&&!this.loop){for(var k=0,l=this.hierarchy.length;k<l;k++){var m=this.data.hierarchy[k].keys,n=this.data.hierarchy[k].sids,o=m.length-1,p=this.hierarchy[k];if(m.length){for(var q=0;q<n.length;q++){var r=n[q],s=this.getPrevKeyWith(r,k,o);s&&s.apply(r)}this.data.hierarchy[k].node.updateMatrix(),p.matrixWorldNeedsUpdate=!0}}return void this.stop()}if(!(g<this.startTime)){for(var k=0,l=this.hierarchy.length;k<l;k++){d=this.hierarchy[k],e=this.data.hierarchy[k];var m=e.keys,t=e.animationCache;if(this.JITCompile&&void 0!==j[k][f])d instanceof THREE.Bone?(d.skinMatrix=j[k][f],d.matrixWorldNeedsUpdate=!1):(d.matrix=j[k][f],d.matrixWorldNeedsUpdate=!0);else if(m.length){if(this.JITCompile&&t&&(d instanceof THREE.Bone?d.skinMatrix=t.originalMatrix:d.matrix=t.originalMatrix),b=t.prevKey,c=t.nextKey,b&&c){if(c.time<=h){if(i&&this.loop)for(b=m[0],c=m[1];c.time<g;)b=c,c=m[b.index+1];else if(!i)for(var u=m.length-1;c.time<g&&c.index!==u;)b=c,c=m[b.index+1];t.prevKey=b,t.nextKey=c}c.time>=g?b.interpolate(c,g):b.interpolate(c,c.time)}this.data.hierarchy[k].node.updateMatrix(),d.matrixWorldNeedsUpdate=!0}}if(this.JITCompile&&void 0===j[0][f]){this.hierarchy[0].updateMatrixWorld(!0);for(var k=0;k<this.hierarchy.length;k++)this.hierarchy[k]instanceof THREE.Bone?j[k][f]=this.hierarchy[k].skinMatrix.clone():j[k][f]=this.hierarchy[k].matrix.clone()}}}},THREE.KeyFrameAnimation.prototype.getNextKeyWith=function(a,b,c){var d=this.data.hierarchy[b].keys;for(c%=d.length;c<d.length;c++)if(d[c].hasTarget(a))return d[c];return d[0]},THREE.KeyFrameAnimation.prototype.getPrevKeyWith=function(a,b,c){var d=this.data.hierarchy[b].keys;for(c=c>=0?c:c+d.length;c>=0;c--)if(d[c].hasTarget(a))return d[c];return d[d.length-1]},THREE.CubeCamera=function(a,b,c){THREE.Object3D.call(this);var d=90,e=1,f=new THREE.PerspectiveCamera(d,e,a,b);f.up.set(0,-1,0),f.lookAt(new THREE.Vector3(1,0,0)),this.add(f);var g=new THREE.PerspectiveCamera(d,e,a,b);g.up.set(0,-1,0),g.lookAt(new THREE.Vector3((-1),0,0)),this.add(g);var h=new THREE.PerspectiveCamera(d,e,a,b);h.up.set(0,0,1),h.lookAt(new THREE.Vector3(0,1,0)),this.add(h);var i=new THREE.PerspectiveCamera(d,e,a,b);i.up.set(0,0,-1),i.lookAt(new THREE.Vector3(0,(-1),0)),this.add(i);var j=new THREE.PerspectiveCamera(d,e,a,b);j.up.set(0,-1,0),j.lookAt(new THREE.Vector3(0,0,1)),this.add(j);var k=new THREE.PerspectiveCamera(d,e,a,b);k.up.set(0,-1,0),k.lookAt(new THREE.Vector3(0,0,(-1))),this.add(k),this.renderTarget=new THREE.WebGLRenderTargetCube(c,c,{format:THREE.RGBFormat,magFilter:THREE.LinearFilter,minFilter:THREE.LinearFilter}),this.updateCubeMap=function(a,b){var c=this.renderTarget,d=c.generateMipmaps;c.generateMipmaps=!1,c.activeCubeFace=0,a.render(b,f,c),c.activeCubeFace=1,a.render(b,g,c),c.activeCubeFace=2,a.render(b,h,c),c.activeCubeFace=3,a.render(b,i,c),c.activeCubeFace=4,a.render(b,j,c),c.generateMipmaps=d,c.activeCubeFace=5,a.render(b,k,c)}},THREE.CubeCamera.prototype=Object.create(THREE.Object3D.prototype),THREE.CombinedCamera=function(a,b,c,d,e,f,g){THREE.Camera.call(this),this.fov=c,this.left=-a/2,this.right=a/2,this.top=b/2,this.bottom=-b/2,this.cameraO=new THREE.OrthographicCamera(a/-2,a/2,b/2,b/-2,f,g),this.cameraP=new THREE.PerspectiveCamera(c,a/b,d,e),this.zoom=1,this.toPerspective()},THREE.CombinedCamera.prototype=Object.create(THREE.Camera.prototype),THREE.CombinedCamera.prototype.toPerspective=function(){this.near=this.cameraP.near,this.far=this.cameraP.far,this.cameraP.fov=this.fov/this.zoom,this.cameraP.updateProjectionMatrix(),this.projectionMatrix=this.cameraP.projectionMatrix,this.inPerspectiveMode=!0,this.inOrthographicMode=!1},THREE.CombinedCamera.prototype.toOrthographic=function(){var a=this.fov,b=this.cameraP.aspect,c=this.cameraP.near,d=this.cameraP.far,e=(c+d)/2,f=Math.tan(a/2)*e,g=2*f,h=g*b,i=h/2;f/=this.zoom,i/=this.zoom,this.cameraO.left=-i,this.cameraO.right=i,this.cameraO.top=f,this.cameraO.bottom=-f,this.cameraO.updateProjectionMatrix(),this.near=this.cameraO.near,this.far=this.cameraO.far,this.projectionMatrix=this.cameraO.projectionMatrix,this.inPerspectiveMode=!1,this.inOrthographicMode=!0},THREE.CombinedCamera.prototype.setSize=function(a,b){this.cameraP.aspect=a/b,this.left=-a/2,this.right=a/2,this.top=b/2,this.bottom=-b/2},THREE.CombinedCamera.prototype.setFov=function(a){this.fov=a,this.inPerspectiveMode?this.toPerspective():this.toOrthographic()},THREE.CombinedCamera.prototype.updateProjectionMatrix=function(){this.inPerspectiveMode?this.toPerspective():(this.toPerspective(),this.toOrthographic())},THREE.CombinedCamera.prototype.setLens=function(a,b){void 0===b&&(b=24);var c=2*THREE.Math.radToDeg(Math.atan(b/(2*a)));return this.setFov(c),c},THREE.CombinedCamera.prototype.setZoom=function(a){this.zoom=a,this.inPerspectiveMode?this.toPerspective():this.toOrthographic()},THREE.CombinedCamera.prototype.toFrontView=function(){this.rotation.x=0,this.rotation.y=0,this.rotation.z=0,this.rotationAutoUpdate=!1},THREE.CombinedCamera.prototype.toBackView=function(){this.rotation.x=0,this.rotation.y=Math.PI,this.rotation.z=0,this.rotationAutoUpdate=!1},THREE.CombinedCamera.prototype.toLeftView=function(){this.rotation.x=0,this.rotation.y=-Math.PI/2,this.rotation.z=0,this.rotationAutoUpdate=!1},THREE.CombinedCamera.prototype.toRightView=function(){this.rotation.x=0,this.rotation.y=Math.PI/2,this.rotation.z=0,this.rotationAutoUpdate=!1},THREE.CombinedCamera.prototype.toTopView=function(){this.rotation.x=-Math.PI/2,this.rotation.y=0,this.rotation.z=0,this.rotationAutoUpdate=!1},THREE.CombinedCamera.prototype.toBottomView=function(){this.rotation.x=Math.PI/2,this.rotation.y=0,this.rotation.z=0,this.rotationAutoUpdate=!1},THREE.CircleGeometry=function(a,b,c,d){THREE.Geometry.call(this),a=a||50,c=void 0!==c?c:0,d=void 0!==d?d:2*Math.PI,b=void 0!==b?Math.max(3,b):8;var e,f=[],g=new THREE.Vector3,h=new THREE.Vector2(.5,.5);for(this.vertices.push(g),f.push(h),e=0;e<=b;e++){var i=new THREE.Vector3,j=c+e/b*d;i.x=a*Math.cos(j),i.y=a*Math.sin(j),this.vertices.push(i),f.push(new THREE.Vector2((i.x/a+1)/2,(i.y/a+1)/2))}var k=new THREE.Vector3(0,0,1);for(e=1;e<=b;e++){var l=e,m=e+1,n=0;this.faces.push(new THREE.Face3(l,m,n,[k,k,k])),this.faceVertexUvs[0].push([f[e],f[e+1],h])}this.computeCentroids(),this.computeFaceNormals(),this.boundingSphere=new THREE.Sphere(new THREE.Vector3,a)},THREE.CircleGeometry.prototype=Object.create(THREE.Geometry.prototype),THREE.CubeGeometry=function(a,b,c,d,e,f){function g(a,b,c,d,e,f,g,i){var j,k,l,m=h.widthSegments,n=h.heightSegments,o=e/2,p=f/2,q=h.vertices.length;"x"===a&&"y"===b||"y"===a&&"x"===b?j="z":"x"===a&&"z"===b||"z"===a&&"x"===b?(j="y",n=h.depthSegments):("z"===a&&"y"===b||"y"===a&&"z"===b)&&(j="x",m=h.depthSegments);var r=m+1,s=n+1,t=e/m,u=f/n,v=new THREE.Vector3;for(v[j]=g>0?1:-1,l=0;l<s;l++)for(k=0;k<r;k++){var w=new THREE.Vector3;w[a]=(k*t-o)*c,w[b]=(l*u-p)*d,w[j]=g,h.vertices.push(w)}for(l=0;l<n;l++)for(k=0;k<m;k++){var x=k+r*l,y=k+r*(l+1),z=k+1+r*(l+1),A=k+1+r*l,B=new THREE.Vector2(k/m,1-l/n),C=new THREE.Vector2(k/m,1-(l+1)/n),D=new THREE.Vector2((k+1)/m,1-(l+1)/n),E=new THREE.Vector2((k+1)/m,1-l/n),F=new THREE.Face3(x+q,y+q,A+q);F.normal.copy(v),F.vertexNormals.push(v.clone(),v.clone(),v.clone()),F.materialIndex=i,h.faces.push(F),h.faceVertexUvs[0].push([B,C,E]),F=new THREE.Face3(y+q,z+q,A+q),F.normal.copy(v),F.vertexNormals.push(v.clone(),v.clone(),v.clone()),F.materialIndex=i,h.faces.push(F),h.faceVertexUvs[0].push([C.clone(),D,E.clone()])}}THREE.Geometry.call(this);var h=this;this.width=a,this.height=b,this.depth=c,this.widthSegments=d||1,this.heightSegments=e||1,this.depthSegments=f||1;var i=this.width/2,j=this.height/2,k=this.depth/2;g("z","y",-1,-1,this.depth,this.height,i,0),g("z","y",1,-1,this.depth,this.height,-i,1),g("x","z",1,1,this.width,this.depth,j,2),g("x","z",1,-1,this.width,this.depth,-j,3),g("x","y",1,-1,this.width,this.height,k,4),g("x","y",-1,-1,this.width,this.height,-k,5),this.computeCentroids(),this.mergeVertices()},THREE.CubeGeometry.prototype=Object.create(THREE.Geometry.prototype),THREE.CylinderGeometry=function(a,b,c,d,e,f){THREE.Geometry.call(this),this.radiusTop=a=void 0!==a?a:20,this.radiusBottom=b=void 0!==b?b:20,this.height=c=void 0!==c?c:100,this.radialSegments=d=d||8,this.heightSegments=e=e||1,this.openEnded=f=void 0!==f&&f;var g,h,i=c/2,j=[],k=[];for(h=0;h<=e;h++){var l=[],m=[],n=h/e,o=n*(b-a)+a;for(g=0;g<=d;g++){var p=g/d,q=new THREE.Vector3;q.x=o*Math.sin(p*Math.PI*2),q.y=-n*c+i,q.z=o*Math.cos(p*Math.PI*2),this.vertices.push(q),l.push(this.vertices.length-1),m.push(new THREE.Vector2(p,1-n))}j.push(l),k.push(m)}var r,s,t=(b-a)/c;for(g=0;g<d;g++)for(0!==a?(r=this.vertices[j[0][g]].clone(),s=this.vertices[j[0][g+1]].clone()):(r=this.vertices[j[1][g]].clone(),
s=this.vertices[j[1][g+1]].clone()),r.setY(Math.sqrt(r.x*r.x+r.z*r.z)*t).normalize(),s.setY(Math.sqrt(s.x*s.x+s.z*s.z)*t).normalize(),h=0;h<e;h++){var u=j[h][g],v=j[h+1][g],w=j[h+1][g+1],x=j[h][g+1],y=r.clone(),z=r.clone(),A=s.clone(),B=s.clone(),C=k[h][g].clone(),D=k[h+1][g].clone(),E=k[h+1][g+1].clone(),F=k[h][g+1].clone();this.faces.push(new THREE.Face3(u,v,x,[y,z,B])),this.faceVertexUvs[0].push([C,D,F]),this.faces.push(new THREE.Face3(v,w,x,[z,A,B])),this.faceVertexUvs[0].push([D,E,F])}if(f===!1&&a>0)for(this.vertices.push(new THREE.Vector3(0,i,0)),g=0;g<d;g++){var u=j[0][g],v=j[0][g+1],w=this.vertices.length-1,y=new THREE.Vector3(0,1,0),z=new THREE.Vector3(0,1,0),A=new THREE.Vector3(0,1,0),C=k[0][g].clone(),D=k[0][g+1].clone(),E=new THREE.Vector2(D.u,0);this.faces.push(new THREE.Face3(u,v,w,[y,z,A])),this.faceVertexUvs[0].push([C,D,E])}if(f===!1&&b>0)for(this.vertices.push(new THREE.Vector3(0,(-i),0)),g=0;g<d;g++){var u=j[h][g+1],v=j[h][g],w=this.vertices.length-1,y=new THREE.Vector3(0,(-1),0),z=new THREE.Vector3(0,(-1),0),A=new THREE.Vector3(0,(-1),0),C=k[h][g+1].clone(),D=k[h][g].clone(),E=new THREE.Vector2(D.u,1);this.faces.push(new THREE.Face3(u,v,w,[y,z,A])),this.faceVertexUvs[0].push([C,D,E])}this.computeCentroids(),this.computeFaceNormals()},THREE.CylinderGeometry.prototype=Object.create(THREE.Geometry.prototype),THREE.ExtrudeGeometry=function(a,b){return"undefined"==typeof a?void(a=[]):(THREE.Geometry.call(this),a=a instanceof Array?a:[a],this.shapebb=a[a.length-1].getBoundingBox(),this.addShapeList(a,b),this.computeCentroids(),void this.computeFaceNormals())},THREE.ExtrudeGeometry.prototype=Object.create(THREE.Geometry.prototype),THREE.ExtrudeGeometry.prototype.addShapeList=function(a,b){for(var c=a.length,d=0;d<c;d++){var e=a[d];this.addShape(e,b)}},THREE.ExtrudeGeometry.prototype.addShape=function(a,b){function c(a,b,c){return b||console.log("die"),b.clone().multiplyScalar(c).add(a)}function d(a,b,c){return f(a,b,c)}function e(a,b,c){var d=Math.atan2(b.y-a.y,b.x-a.x),e=Math.atan2(c.y-a.y,c.x-a.x);d>e&&(e+=2*Math.PI);var f=(d+e)/2,g=-Math.cos(f),h=-Math.sin(f),i=new THREE.Vector2(g,h);return i}function f(a,b,c){var d,f,g,h,i,j,k=THREE.ExtrudeGeometry.__v1,l=THREE.ExtrudeGeometry.__v2,m=THREE.ExtrudeGeometry.__v3,n=THREE.ExtrudeGeometry.__v4,o=THREE.ExtrudeGeometry.__v5,p=THREE.ExtrudeGeometry.__v6;return k.set(a.x-b.x,a.y-b.y),l.set(a.x-c.x,a.y-c.y),d=k.normalize(),f=l.normalize(),m.set(-d.y,d.x),n.set(f.y,-f.x),o.copy(a).add(m),p.copy(a).add(n),o.equals(p)?n.clone():(o.copy(b).add(m),p.copy(c).add(n),g=d.dot(n),h=p.sub(o).dot(n),0===g&&(console.log("Either infinite or no solutions!"),0===h?console.log("Its finite solutions."):console.log("Too bad, no solutions.")),i=h/g,i<0?e(a,b,c):(j=d.multiplyScalar(i).add(o),j.sub(a).clone()))}function g(){if(v){var a=0,b=U*a;for(X=0;X<V;X++)T=M[X],k(T[2]+b,T[1]+b,T[0]+b,!0);for(a=x+2*u,b=U*a,X=0;X<V;X++)T=M[X],k(T[0]+b,T[1]+b,T[2]+b,!1)}else{for(X=0;X<V;X++)T=M[X],k(T[2],T[1],T[0],!0);for(X=0;X<V;X++)T=M[X],k(T[0]+U*x,T[1]+U*x,T[2]+U*x,!1)}}function h(){var a=0;for(i(N,a),a+=N.length,E=0,F=K.length;E<F;E++)D=K[E],i(D,a),a+=D.length}function i(a,b){var c,d;for(X=a.length;--X>=0;){c=X,d=X-1,d<0&&(d=a.length-1);var e=0,f=x+2*u;for(e=0;e<f;e++){var g=U*e,h=U*(e+1),i=b+c+g,j=b+d+g,k=b+d+h,m=b+c+h;l(i,j,k,m,a,e,f,c,d)}}}function j(a,b,c){G.vertices.push(new THREE.Vector3(a,b,c))}function k(c,d,e,f){c+=H,d+=H,e+=H,G.faces.push(new THREE.Face3(c,d,e,null,null,A));var g=f?C.generateBottomUV(G,a,b,c,d,e):C.generateTopUV(G,a,b,c,d,e);G.faceVertexUvs[0].push(g)}function l(c,d,e,f,g,h,i,j,k){c+=H,d+=H,e+=H,f+=H,G.faces.push(new THREE.Face3(c,d,f,null,null,B)),G.faces.push(new THREE.Face3(d,e,f,null,null,B));var l=C.generateSideWallUV(G,a,g,b,c,d,e,f,h,i,j,k);G.faceVertexUvs[0].push([l[0],l[1],l[3]]),G.faceVertexUvs[0].push([l[1],l[2],l[3]])}var m,n,o,p,q,r=void 0!==b.amount?b.amount:100,s=void 0!==b.bevelThickness?b.bevelThickness:6,t=void 0!==b.bevelSize?b.bevelSize:s-2,u=void 0!==b.bevelSegments?b.bevelSegments:3,v=void 0===b.bevelEnabled||b.bevelEnabled,w=void 0!==b.curveSegments?b.curveSegments:12,x=void 0!==b.steps?b.steps:1,y=b.extrudePath,z=!1,A=b.material,B=b.extrudeMaterial,C=void 0!==b.UVGenerator?b.UVGenerator:THREE.ExtrudeGeometry.WorldUVGenerator;this.shapebb;y&&(m=y.getSpacedPoints(x),z=!0,v=!1,n=void 0!==b.frames?b.frames:new THREE.TubeGeometry.FrenetFrames(y,x,(!1)),o=new THREE.Vector3,p=new THREE.Vector3,q=new THREE.Vector3),v||(u=0,s=0,t=0);var D,E,F,G=this,H=this.vertices.length,I=a.extractPoints(w),J=I.shape,K=I.holes,L=!THREE.Shape.Utils.isClockWise(J);if(L){for(J=J.reverse(),E=0,F=K.length;E<F;E++)D=K[E],THREE.Shape.Utils.isClockWise(D)&&(K[E]=D.reverse());L=!1}var M=THREE.Shape.Utils.triangulateShape(J,K),N=J;for(E=0,F=K.length;E<F;E++)D=K[E],J=J.concat(D);for(var O,P,Q,R,S,T,U=J.length,V=M.length,W=(N.length,180/Math.PI,[]),X=0,Y=N.length,Z=Y-1,$=X+1;X<Y;X++,Z++,$++){Z===Y&&(Z=0),$===Y&&($=0);N[X],N[Z],N[$];W[X]=d(N[X],N[Z],N[$])}var _,aa=[],ba=W.concat();for(E=0,F=K.length;E<F;E++){for(D=K[E],_=[],X=0,Y=D.length,Z=Y-1,$=X+1;X<Y;X++,Z++,$++)Z===Y&&(Z=0),$===Y&&($=0),_[X]=d(D[X],D[Z],D[$]);aa.push(_),ba=ba.concat(_)}for(O=0;O<u;O++){for(Q=O/u,R=s*(1-Q),P=t*Math.sin(Q*Math.PI/2),X=0,Y=N.length;X<Y;X++)S=c(N[X],W[X],P),j(S.x,S.y,-R);for(E=0,F=K.length;E<F;E++)for(D=K[E],_=aa[E],X=0,Y=D.length;X<Y;X++)S=c(D[X],_[X],P),j(S.x,S.y,-R)}for(P=t,X=0;X<U;X++)S=v?c(J[X],ba[X],P):J[X],z?(p.copy(n.normals[0]).multiplyScalar(S.x),o.copy(n.binormals[0]).multiplyScalar(S.y),q.copy(m[0]).add(p).add(o),j(q.x,q.y,q.z)):j(S.x,S.y,0);var ca;for(ca=1;ca<=x;ca++)for(X=0;X<U;X++)S=v?c(J[X],ba[X],P):J[X],z?(p.copy(n.normals[ca]).multiplyScalar(S.x),o.copy(n.binormals[ca]).multiplyScalar(S.y),q.copy(m[ca]).add(p).add(o),j(q.x,q.y,q.z)):j(S.x,S.y,r/x*ca);for(O=u-1;O>=0;O--){for(Q=O/u,R=s*(1-Q),P=t*Math.sin(Q*Math.PI/2),X=0,Y=N.length;X<Y;X++)S=c(N[X],W[X],P),j(S.x,S.y,r+R);for(E=0,F=K.length;E<F;E++)for(D=K[E],_=aa[E],X=0,Y=D.length;X<Y;X++)S=c(D[X],_[X],P),z?j(S.x,S.y+m[x-1].y,m[x-1].x+R):j(S.x,S.y,r+R)}g(),h()},THREE.ExtrudeGeometry.WorldUVGenerator={generateTopUV:function(a,b,c,d,e,f){var g=a.vertices[d].x,h=a.vertices[d].y,i=a.vertices[e].x,j=a.vertices[e].y,k=a.vertices[f].x,l=a.vertices[f].y;return[new THREE.Vector2(g,h),new THREE.Vector2(i,j),new THREE.Vector2(k,l)]},generateBottomUV:function(a,b,c,d,e,f){return this.generateTopUV(a,b,c,d,e,f)},generateSideWallUV:function(a,b,c,d,e,f,g,h,i,j,k,l){var m=a.vertices[e].x,n=a.vertices[e].y,o=a.vertices[e].z,p=a.vertices[f].x,q=a.vertices[f].y,r=a.vertices[f].z,s=a.vertices[g].x,t=a.vertices[g].y,u=a.vertices[g].z,v=a.vertices[h].x,w=a.vertices[h].y,x=a.vertices[h].z;return Math.abs(n-q)<.01?[new THREE.Vector2(m,1-o),new THREE.Vector2(p,1-r),new THREE.Vector2(s,1-u),new THREE.Vector2(v,1-x)]:[new THREE.Vector2(n,1-o),new THREE.Vector2(q,1-r),new THREE.Vector2(t,1-u),new THREE.Vector2(w,1-x)]}},THREE.ExtrudeGeometry.__v1=new THREE.Vector2,THREE.ExtrudeGeometry.__v2=new THREE.Vector2,THREE.ExtrudeGeometry.__v3=new THREE.Vector2,THREE.ExtrudeGeometry.__v4=new THREE.Vector2,THREE.ExtrudeGeometry.__v5=new THREE.Vector2,THREE.ExtrudeGeometry.__v6=new THREE.Vector2,THREE.ShapeGeometry=function(a,b){THREE.Geometry.call(this),a instanceof Array==!1&&(a=[a]),this.shapebb=a[a.length-1].getBoundingBox(),this.addShapeList(a,b),this.computeCentroids(),this.computeFaceNormals()},THREE.ShapeGeometry.prototype=Object.create(THREE.Geometry.prototype),THREE.ShapeGeometry.prototype.addShapeList=function(a,b){for(var c=0,d=a.length;c<d;c++)this.addShape(a[c],b);return this},THREE.ShapeGeometry.prototype.addShape=function(a,b){void 0===b&&(b={});var c,d,e,f=void 0!==b.curveSegments?b.curveSegments:12,g=b.material,h=void 0===b.UVGenerator?THREE.ExtrudeGeometry.WorldUVGenerator:b.UVGenerator,i=(this.shapebb,this.vertices.length),j=a.extractPoints(f),k=j.shape,l=j.holes,m=!THREE.Shape.Utils.isClockWise(k);if(m){for(k=k.reverse(),c=0,d=l.length;c<d;c++)e=l[c],THREE.Shape.Utils.isClockWise(e)&&(l[c]=e.reverse());m=!1}var n=THREE.Shape.Utils.triangulateShape(k,l),o=k;for(c=0,d=l.length;c<d;c++)e=l[c],k=k.concat(e);var p,q,r=k.length,s=n.length;o.length;for(c=0;c<r;c++)p=k[c],this.vertices.push(new THREE.Vector3(p.x,p.y,0));for(c=0;c<s;c++){q=n[c];var t=q[0]+i,u=q[1]+i,v=q[2]+i;this.faces.push(new THREE.Face3(t,u,v,null,null,g)),this.faceVertexUvs[0].push(h.generateBottomUV(this,a,b,t,u,v))}},THREE.LatheGeometry=function(a,b,c,d){THREE.Geometry.call(this),b=b||12,c=c||0,d=d||2*Math.PI;for(var e=1/(a.length-1),f=1/b,g=0,h=b;g<=h;g++)for(var i=c+g*f*d,j=Math.cos(i),k=Math.sin(i),l=0,m=a.length;l<m;l++){var n=a[l],o=new THREE.Vector3;o.x=j*n.x-k*n.y,o.y=k*n.x+j*n.y,o.z=n.z,this.vertices.push(o)}for(var p=a.length,g=0,h=b;g<h;g++)for(var l=0,m=a.length-1;l<m;l++){var q=l+p*g,r=q,s=q+p,j=q+1+p,t=q+1,u=g*f,v=l*e,w=u+f,x=v+e;this.faces.push(new THREE.Face3(r,s,t)),this.faceVertexUvs[0].push([new THREE.Vector2(u,v),new THREE.Vector2(w,v),new THREE.Vector2(u,x)]),this.faces.push(new THREE.Face3(s,j,t)),this.faceVertexUvs[0].push([new THREE.Vector2(w,v),new THREE.Vector2(w,x),new THREE.Vector2(u,x)])}this.mergeVertices(),this.computeCentroids(),this.computeFaceNormals(),this.computeVertexNormals()},THREE.LatheGeometry.prototype=Object.create(THREE.Geometry.prototype),THREE.PlaneGeometry=function(a,b,c,d){THREE.Geometry.call(this),this.width=a,this.height=b,this.widthSegments=c||1,this.heightSegments=d||1;var e,f,g=a/2,h=b/2,i=this.widthSegments,j=this.heightSegments,k=i+1,l=j+1,m=this.width/i,n=this.height/j,o=new THREE.Vector3(0,0,1);for(f=0;f<l;f++)for(e=0;e<k;e++){var p=e*m-g,q=f*n-h;this.vertices.push(new THREE.Vector3(p,(-q),0))}for(f=0;f<j;f++)for(e=0;e<i;e++){var r=e+k*f,s=e+k*(f+1),t=e+1+k*(f+1),u=e+1+k*f,v=new THREE.Vector2(e/i,1-f/j),w=new THREE.Vector2(e/i,1-(f+1)/j),x=new THREE.Vector2((e+1)/i,1-(f+1)/j),y=new THREE.Vector2((e+1)/i,1-f/j),z=new THREE.Face3(r,s,u);z.normal.copy(o),z.vertexNormals.push(o.clone(),o.clone(),o.clone()),this.faces.push(z),this.faceVertexUvs[0].push([v,w,y]),z=new THREE.Face3(s,t,u),z.normal.copy(o),z.vertexNormals.push(o.clone(),o.clone(),o.clone()),this.faces.push(z),this.faceVertexUvs[0].push([w.clone(),x,y.clone()])}this.computeCentroids()},THREE.PlaneGeometry.prototype=Object.create(THREE.Geometry.prototype),THREE.RingGeometry=function(a,b,c,d,e,f){THREE.Geometry.call(this),a=a||0,b=b||50,e=void 0!==e?e:0,f=void 0!==f?f:2*Math.PI,c=void 0!==c?Math.max(3,c):8,d=void 0!==d?Math.max(3,d):8;var g,h,i=[],j=a,k=(b-a)/d;for(g=0;g<=d;g++){for(h=0;h<=c;h++){var l=new THREE.Vector3,m=e+h/c*f;l.x=j*Math.cos(m),l.y=j*Math.sin(m),this.vertices.push(l),i.push(new THREE.Vector2((l.x/j+1)/2,-(l.y/j+1)/2+1))}j+=k}var n=new THREE.Vector3(0,0,1);for(g=0;g<d;g++){var o=g*c;for(h=0;h<=c;h++){var m=h+o,p=m+g,q=m+c+g,r=m+c+1+g;this.faces.push(new THREE.Face3(p,q,r,[n,n,n])),this.faceVertexUvs[0].push([i[p],i[q],i[r]]),p=m+g,q=m+c+1+g,r=m+1+g,this.faces.push(new THREE.Face3(p,q,r,[n,n,n])),this.faceVertexUvs[0].push([i[p],i[q],i[r]])}}this.computeCentroids(),this.computeFaceNormals(),this.boundingSphere=new THREE.Sphere(new THREE.Vector3,j)},THREE.RingGeometry.prototype=Object.create(THREE.Geometry.prototype),THREE.SphereGeometry=function(a,b,c,d,e,f,g){THREE.Geometry.call(this),this.radius=a=a||50,this.widthSegments=b=Math.max(3,Math.floor(b)||8),this.heightSegments=c=Math.max(2,Math.floor(c)||6),this.phiStart=d=void 0!==d?d:0,this.phiLength=e=void 0!==e?e:2*Math.PI,this.thetaStart=f=void 0!==f?f:0,this.thetaLength=g=void 0!==g?g:Math.PI;var h,i,j=[],k=[];for(i=0;i<=c;i++){var l=[],m=[];for(h=0;h<=b;h++){var n=h/b,o=i/c,p=new THREE.Vector3;p.x=-a*Math.cos(d+n*e)*Math.sin(f+o*g),p.y=a*Math.cos(f+o*g),p.z=a*Math.sin(d+n*e)*Math.sin(f+o*g),this.vertices.push(p),l.push(this.vertices.length-1),m.push(new THREE.Vector2(n,1-o))}j.push(l),k.push(m)}for(i=0;i<this.heightSegments;i++)for(h=0;h<this.widthSegments;h++){var q=j[i][h+1],r=j[i][h],s=j[i+1][h],t=j[i+1][h+1],u=this.vertices[q].clone().normalize(),v=this.vertices[r].clone().normalize(),w=this.vertices[s].clone().normalize(),x=this.vertices[t].clone().normalize(),y=k[i][h+1].clone(),z=k[i][h].clone(),A=k[i+1][h].clone(),B=k[i+1][h+1].clone();Math.abs(this.vertices[q].y)===this.radius?(this.faces.push(new THREE.Face3(q,s,t,[u,w,x])),this.faceVertexUvs[0].push([y,A,B])):Math.abs(this.vertices[s].y)===this.radius?(this.faces.push(new THREE.Face3(q,r,s,[u,v,w])),this.faceVertexUvs[0].push([y,z,A])):(this.faces.push(new THREE.Face3(q,r,t,[u,v,x])),this.faceVertexUvs[0].push([y,z,B]),this.faces.push(new THREE.Face3(r,s,t,[v,w,x])),this.faceVertexUvs[0].push([z.clone(),A,B.clone()]))}this.computeCentroids(),this.computeFaceNormals(),this.boundingSphere=new THREE.Sphere(new THREE.Vector3,a)},THREE.SphereGeometry.prototype=Object.create(THREE.Geometry.prototype),THREE.TextGeometry=function(a,b){b=b||{};var c=THREE.FontUtils.generateShapes(a,b);b.amount=void 0!==b.height?b.height:50,void 0===b.bevelThickness&&(b.bevelThickness=10),void 0===b.bevelSize&&(b.bevelSize=8),void 0===b.bevelEnabled&&(b.bevelEnabled=!1),THREE.ExtrudeGeometry.call(this,c,b)},THREE.TextGeometry.prototype=Object.create(THREE.ExtrudeGeometry.prototype),THREE.TorusGeometry=function(a,b,c,d,e){THREE.Geometry.call(this);this.radius=a||100,this.tube=b||40,this.radialSegments=c||8,this.tubularSegments=d||6,this.arc=e||2*Math.PI;for(var f=new THREE.Vector3,g=[],h=[],i=0;i<=this.radialSegments;i++)for(var j=0;j<=this.tubularSegments;j++){var k=j/this.tubularSegments*this.arc,l=i/this.radialSegments*Math.PI*2;f.x=this.radius*Math.cos(k),f.y=this.radius*Math.sin(k);var m=new THREE.Vector3;m.x=(this.radius+this.tube*Math.cos(l))*Math.cos(k),m.y=(this.radius+this.tube*Math.cos(l))*Math.sin(k),m.z=this.tube*Math.sin(l),this.vertices.push(m),g.push(new THREE.Vector2(j/this.tubularSegments,i/this.radialSegments)),h.push(m.clone().sub(f).normalize())}for(var i=1;i<=this.radialSegments;i++)for(var j=1;j<=this.tubularSegments;j++){var n=(this.tubularSegments+1)*i+j-1,o=(this.tubularSegments+1)*(i-1)+j-1,p=(this.tubularSegments+1)*(i-1)+j,q=(this.tubularSegments+1)*i+j,r=new THREE.Face3(n,o,q,[h[n],h[o],h[q]]);r.normal.add(h[n]),r.normal.add(h[o]),r.normal.add(h[q]),r.normal.normalize(),this.faces.push(r),this.faceVertexUvs[0].push([g[n].clone(),g[o].clone(),g[q].clone()]),r=new THREE.Face3(o,p,q,[h[o],h[p],h[q]]),r.normal.add(h[o]),r.normal.add(h[p]),r.normal.add(h[q]),r.normal.normalize(),this.faces.push(r),this.faceVertexUvs[0].push([g[o].clone(),g[p].clone(),g[q].clone()])}this.computeCentroids()},THREE.TorusGeometry.prototype=Object.create(THREE.Geometry.prototype),THREE.TorusKnotGeometry=function(a,b,c,d,e,f,g){function h(a,b,c,d,e){var f=Math.cos(a),g=Math.sin(a),h=b/c*a,i=Math.cos(h),j=d*(2+i)*.5*f,k=d*(2+i)*g*.5,l=e*d*Math.sin(h)*.5;return new THREE.Vector3(j,k,l)}THREE.Geometry.call(this);var i=this;this.radius=a||100,this.tube=b||40,this.radialSegments=c||64,this.tubularSegments=d||8,this.p=e||2,this.q=f||3,this.heightScale=g||1,this.grid=new Array(this.radialSegments);for(var j=new THREE.Vector3,k=new THREE.Vector3,l=new THREE.Vector3,m=0;m<this.radialSegments;++m){this.grid[m]=new Array(this.tubularSegments);var n=m/this.radialSegments*2*this.p*Math.PI,o=h(n,this.q,this.p,this.radius,this.heightScale),p=h(n+.01,this.q,this.p,this.radius,this.heightScale);j.subVectors(p,o),k.addVectors(p,o),l.crossVectors(j,k),k.crossVectors(l,j),l.normalize(),k.normalize();for(var q=0;q<this.tubularSegments;++q){var r=q/this.tubularSegments*2*Math.PI,s=-this.tube*Math.cos(r),t=this.tube*Math.sin(r),u=new THREE.Vector3;u.x=o.x+s*k.x+t*l.x,u.y=o.y+s*k.y+t*l.y,u.z=o.z+s*k.z+t*l.z,this.grid[m][q]=i.vertices.push(u)-1}}for(var m=0;m<this.radialSegments;++m)for(var q=0;q<this.tubularSegments;++q){var v=(m+1)%this.radialSegments,w=(q+1)%this.tubularSegments,x=this.grid[m][q],y=this.grid[v][q],z=this.grid[v][w],A=this.grid[m][w],B=new THREE.Vector2(m/this.radialSegments,q/this.tubularSegments),C=new THREE.Vector2((m+1)/this.radialSegments,q/this.tubularSegments),D=new THREE.Vector2((m+1)/this.radialSegments,(q+1)/this.tubularSegments),E=new THREE.Vector2(m/this.radialSegments,(q+1)/this.tubularSegments);this.faces.push(new THREE.Face3(x,y,A)),this.faceVertexUvs[0].push([B,C,E]),this.faces.push(new THREE.Face3(y,z,A)),this.faceVertexUvs[0].push([C.clone(),D,E.clone()])}this.computeCentroids(),this.computeFaceNormals(),this.computeVertexNormals()},THREE.TorusKnotGeometry.prototype=Object.create(THREE.Geometry.prototype),THREE.TubeGeometry=function(a,b,c,d,e){function f(a,b,c){return A.vertices.push(new THREE.Vector3(a,b,c))-1}THREE.Geometry.call(this),this.path=a,this.segments=b||64,this.radius=c||1,this.radialSegments=d||8,this.closed=e||!1,this.grid=[];var g,h,i,j,k,l,m,n,o,p,q,r,s,t,u,v,w,x,y,z,A=this,B=this.segments+1,C=new THREE.Vector3,D=new THREE.TubeGeometry.FrenetFrames(this.path,this.segments,this.closed),E=D.tangents,F=D.normals,G=D.binormals;for(this.tangents=E,this.normals=F,this.binormals=G,o=0;o<B;o++)for(this.grid[o]=[],j=o/(B-1),n=a.getPointAt(j),g=E[o],h=F[o],i=G[o],p=0;p<this.radialSegments;p++)k=p/this.radialSegments*2*Math.PI,l=-this.radius*Math.cos(k),m=this.radius*Math.sin(k),C.copy(n),C.x+=l*h.x+m*i.x,C.y+=l*h.y+m*i.y,C.z+=l*h.z+m*i.z,this.grid[o][p]=f(C.x,C.y,C.z);for(o=0;o<this.segments;o++)for(p=0;p<this.radialSegments;p++)q=this.closed?(o+1)%this.segments:o+1,r=(p+1)%this.radialSegments,s=this.grid[o][p],t=this.grid[q][p],u=this.grid[q][r],v=this.grid[o][r],w=new THREE.Vector2(o/this.segments,p/this.radialSegments),x=new THREE.Vector2((o+1)/this.segments,p/this.radialSegments),y=new THREE.Vector2((o+1)/this.segments,(p+1)/this.radialSegments),z=new THREE.Vector2(o/this.segments,(p+1)/this.radialSegments),this.faces.push(new THREE.Face3(s,t,v)),this.faceVertexUvs[0].push([w,x,z]),this.faces.push(new THREE.Face3(t,u,v)),this.faceVertexUvs[0].push([x.clone(),y,z.clone()]);this.computeCentroids(),this.computeFaceNormals(),this.computeVertexNormals()},THREE.TubeGeometry.prototype=Object.create(THREE.Geometry.prototype),THREE.TubeGeometry.FrenetFrames=function(a,b,c){function d(){n[0]=new THREE.Vector3,o[0]=new THREE.Vector3,f=Number.MAX_VALUE,g=Math.abs(m[0].x),h=Math.abs(m[0].y),i=Math.abs(m[0].z),g<=f&&(f=g,l.set(1,0,0)),h<=f&&(f=h,l.set(0,1,0)),i<=f&&l.set(0,0,1),p.crossVectors(m[0],l).normalize(),n[0].crossVectors(m[0],p),o[0].crossVectors(m[0],n[0])}var e,f,g,h,i,j,k,l=(new THREE.Vector3,new THREE.Vector3),m=(new THREE.Vector3,[]),n=[],o=[],p=new THREE.Vector3,q=new THREE.Matrix4,r=b+1,s=1e-4;for(this.tangents=m,this.normals=n,this.binormals=o,j=0;j<r;j++)k=j/(r-1),m[j]=a.getTangentAt(k),m[j].normalize();for(d(),j=1;j<r;j++)n[j]=n[j-1].clone(),o[j]=o[j-1].clone(),p.crossVectors(m[j-1],m[j]),p.length()>s&&(p.normalize(),e=Math.acos(THREE.Math.clamp(m[j-1].dot(m[j]),-1,1)),n[j].applyMatrix4(q.makeRotationAxis(p,e))),o[j].crossVectors(m[j],n[j]);if(c)for(e=Math.acos(THREE.Math.clamp(n[0].dot(n[r-1]),-1,1)),e/=r-1,m[0].dot(p.crossVectors(n[0],n[r-1]))>0&&(e=-e),j=1;j<r;j++)n[j].applyMatrix4(q.makeRotationAxis(m[j],e*j)),o[j].crossVectors(m[j],n[j])},THREE.PolyhedronGeometry=function(a,b,c,d){function e(a){var b=a.normalize().clone();b.index=k.vertices.push(b)-1;var c=h(a)/2/Math.PI+.5,d=i(a)/Math.PI+.5;return b.uv=new THREE.Vector2(c,1-d),b}function f(a,b,c){var d=new THREE.Face3(a.index,b.index,c.index,[a.clone(),b.clone(),c.clone()]);d.centroid.add(a).add(b).add(c).divideScalar(3),k.faces.push(d);var e=h(d.centroid);k.faceVertexUvs[0].push([j(a.uv,a,e),j(b.uv,b,e),j(c.uv,c,e)])}function g(a,b){for(var c=Math.pow(2,b),d=(Math.pow(4,b),e(k.vertices[a.a])),g=e(k.vertices[a.b]),h=e(k.vertices[a.c]),i=[],j=0;j<=c;j++){i[j]=[];for(var l=e(d.clone().lerp(h,j/c)),m=e(g.clone().lerp(h,j/c)),n=c-j,o=0;o<=n;o++)0==o&&j==c?i[j][o]=l:i[j][o]=e(l.clone().lerp(m,o/n))}for(var j=0;j<c;j++)for(var o=0;o<2*(c-j)-1;o++){var p=Math.floor(o/2);o%2==0?f(i[j][p+1],i[j+1][p],i[j][p]):f(i[j][p+1],i[j+1][p+1],i[j+1][p])}}function h(a){return Math.atan2(a.z,-a.x)}function i(a){return Math.atan2(-a.y,Math.sqrt(a.x*a.x+a.z*a.z))}function j(a,b,c){return c<0&&1===a.x&&(a=new THREE.Vector2(a.x-1,a.y)),0===b.x&&0===b.z&&(a=new THREE.Vector2(c/2/Math.PI+.5,a.y)),a.clone()}THREE.Geometry.call(this),c=c||1,d=d||0;for(var k=this,l=0,m=a.length;l<m;l++)e(new THREE.Vector3(a[l][0],a[l][1],a[l][2]));for(var n=this.vertices,o=[],l=0,m=b.length;l<m;l++){var p=n[b[l][0]],q=n[b[l][1]],r=n[b[l][2]];o[l]=new THREE.Face3(p.index,q.index,r.index,[p.clone(),q.clone(),r.clone()])}for(var l=0,m=o.length;l<m;l++)g(o[l],d);for(var l=0,m=this.faceVertexUvs[0].length;l<m;l++){var s=this.faceVertexUvs[0][l],t=s[0].x,u=s[1].x,v=s[2].x,w=Math.max(t,Math.max(u,v)),x=Math.min(t,Math.min(u,v));w>.9&&x<.1&&(t<.2&&(s[0].x+=1),u<.2&&(s[1].x+=1),v<.2&&(s[2].x+=1))}for(var l=0,m=this.vertices.length;l<m;l++)this.vertices[l].multiplyScalar(c);this.mergeVertices(),this.computeCentroids(),this.computeFaceNormals(),this.boundingSphere=new THREE.Sphere(new THREE.Vector3,c)},THREE.PolyhedronGeometry.prototype=Object.create(THREE.Geometry.prototype),THREE.IcosahedronGeometry=function(a,b){this.radius=a,this.detail=b;var c=(1+Math.sqrt(5))/2,d=[[-1,c,0],[1,c,0],[-1,-c,0],[1,-c,0],[0,-1,c],[0,1,c],[0,-1,-c],[0,1,-c],[c,0,-1],[c,0,1],[-c,0,-1],[-c,0,1]],e=[[0,11,5],[0,5,1],[0,1,7],[0,7,10],[0,10,11],[1,5,9],[5,11,4],[11,10,2],[10,7,6],[7,1,8],[3,9,4],[3,4,2],[3,2,6],[3,6,8],[3,8,9],[4,9,5],[2,4,11],[6,2,10],[8,6,7],[9,8,1]];THREE.PolyhedronGeometry.call(this,d,e,a,b)},THREE.IcosahedronGeometry.prototype=Object.create(THREE.Geometry.prototype),THREE.OctahedronGeometry=function(a,b){var c=[[1,0,0],[-1,0,0],[0,1,0],[0,-1,0],[0,0,1],[0,0,-1]],d=[[0,2,4],[0,4,3],[0,3,5],[0,5,2],[1,2,5],[1,5,3],[1,3,4],[1,4,2]];THREE.PolyhedronGeometry.call(this,c,d,a,b)},THREE.OctahedronGeometry.prototype=Object.create(THREE.Geometry.prototype),THREE.TetrahedronGeometry=function(a,b){var c=[[1,1,1],[-1,-1,1],[-1,1,-1],[1,-1,-1]],d=[[2,1,0],[0,3,2],[1,3,0],[2,3,1]];THREE.PolyhedronGeometry.call(this,c,d,a,b)},THREE.TetrahedronGeometry.prototype=Object.create(THREE.Geometry.prototype),THREE.ParametricGeometry=function(a,b,c){THREE.Geometry.call(this);var d,e,f,g,h,i=this.vertices,j=this.faces,k=this.faceVertexUvs[0],l=b+1;for(d=0;d<=c;d++)for(h=d/c,e=0;e<=b;e++)g=e/b,f=a(g,h),i.push(f);var m,n,o,p,q,r,s,t;for(d=0;d<c;d++)for(e=0;e<b;e++)m=d*l+e,n=d*l+e+1,o=(d+1)*l+e+1,p=(d+1)*l+e,q=new THREE.Vector2(e/b,d/c),r=new THREE.Vector2((e+1)/b,d/c),s=new THREE.Vector2((e+1)/b,(d+1)/c),t=new THREE.Vector2(e/b,(d+1)/c),j.push(new THREE.Face3(m,n,p)),k.push([q,r,t]),j.push(new THREE.Face3(n,o,p)),k.push([r.clone(),s,t.clone()]);this.computeCentroids(),this.computeFaceNormals(),this.computeVertexNormals()},THREE.ParametricGeometry.prototype=Object.create(THREE.Geometry.prototype),THREE.AxisHelper=function(a){a=a||1;var b=new THREE.Geometry;b.vertices.push(new THREE.Vector3,new THREE.Vector3(a,0,0),new THREE.Vector3,new THREE.Vector3(0,a,0),new THREE.Vector3,new THREE.Vector3(0,0,a)),b.colors.push(new THREE.Color(16711680),new THREE.Color(16755200),new THREE.Color(65280),new THREE.Color(11206400),new THREE.Color(255),new THREE.Color(43775));var c=new THREE.LineBasicMaterial({vertexColors:THREE.VertexColors});THREE.Line.call(this,b,c,THREE.LinePieces)},THREE.AxisHelper.prototype=Object.create(THREE.Line.prototype),THREE.ArrowHelper=function(a,b,c,d){THREE.Object3D.call(this),void 0===d&&(d=16776960),void 0===c&&(c=1),this.position=b;var e=new THREE.Geometry;e.vertices.push(new THREE.Vector3(0,0,0)),e.vertices.push(new THREE.Vector3(0,1,0)),this.line=new THREE.Line(e,new THREE.LineBasicMaterial({color:d})),this.line.matrixAutoUpdate=!1,this.add(this.line);var f=new THREE.CylinderGeometry(0,.05,.25,5,1);f.applyMatrix((new THREE.Matrix4).makeTranslation(0,.875,0)),this.cone=new THREE.Mesh(f,new THREE.MeshBasicMaterial({color:d})),this.cone.matrixAutoUpdate=!1,this.add(this.cone),this.setDirection(a),this.setLength(c)},THREE.ArrowHelper.prototype=Object.create(THREE.Object3D.prototype),THREE.ArrowHelper.prototype.setDirection=function(){var a,b=new THREE.Vector3;return function(c){c.y>.99999?this.quaternion.set(0,0,0,1):c.y<-.99999?this.quaternion.set(1,0,0,0):(b.set(c.z,0,-c.x).normalize(),a=Math.acos(c.y),this.quaternion.setFromAxisAngle(b,a))}}(),THREE.ArrowHelper.prototype.setLength=function(a){this.scale.set(a,a,a)},THREE.ArrowHelper.prototype.setColor=function(a){this.line.material.color.setHex(a),this.cone.material.color.setHex(a)},THREE.BoxHelper=function(a){var b=[new THREE.Vector3(1,1,1),new THREE.Vector3((-1),1,1),new THREE.Vector3((-1),(-1),1),new THREE.Vector3(1,(-1),1),new THREE.Vector3(1,1,(-1)),new THREE.Vector3((-1),1,(-1)),new THREE.Vector3((-1),(-1),(-1)),new THREE.Vector3(1,(-1),(-1))];this.vertices=b;var c=new THREE.Geometry;c.vertices.push(b[0],b[1],b[1],b[2],b[2],b[3],b[3],b[0],b[4],b[5],b[5],b[6],b[6],b[7],b[7],b[4],b[0],b[4],b[1],b[5],b[2],b[6],b[3],b[7]),THREE.Line.call(this,c,new THREE.LineBasicMaterial({color:16776960}),THREE.LinePieces),void 0!==a&&this.update(a)},THREE.BoxHelper.prototype=Object.create(THREE.Line.prototype),THREE.BoxHelper.prototype.update=function(a){var b=a.geometry;null===b.boundingBox&&b.computeBoundingBox();var c=b.boundingBox.min,d=b.boundingBox.max,e=this.vertices;e[0].set(d.x,d.y,d.z),e[1].set(c.x,d.y,d.z),e[2].set(c.x,c.y,d.z),e[3].set(d.x,c.y,d.z),e[4].set(d.x,d.y,c.z),e[5].set(c.x,d.y,c.z),e[6].set(c.x,c.y,c.z),e[7].set(d.x,c.y,c.z),this.geometry.computeBoundingSphere(),this.geometry.verticesNeedUpdate=!0,this.matrixAutoUpdate=!1,this.matrixWorld=a.matrixWorld},THREE.BoundingBoxHelper=function(a,b){var c=b||8947848;this.object=a,this.box=new THREE.Box3,THREE.Mesh.call(this,new THREE.CubeGeometry(1,1,1),new THREE.MeshBasicMaterial({color:c,wireframe:!0}))},THREE.BoundingBoxHelper.prototype=Object.create(THREE.Mesh.prototype),THREE.BoundingBoxHelper.prototype.update=function(){this.box.setFromObject(this.object),this.box.size(this.scale),this.box.center(this.position)},THREE.CameraHelper=function(a){function b(a,b,d){c(a,d),c(b,d)}function c(a,b){d.vertices.push(new THREE.Vector3),d.colors.push(new THREE.Color(b)),void 0===f[a]&&(f[a]=[]),f[a].push(d.vertices.length-1)}var d=new THREE.Geometry,e=new THREE.LineBasicMaterial({color:16777215,vertexColors:THREE.FaceColors}),f={},g=16755200,h=16711680,i=43775,j=16777215,k=3355443;b("n1","n2",g),b("n2","n4",g),b("n4","n3",g),b("n3","n1",g),b("f1","f2",g),b("f2","f4",g),b("f4","f3",g),b("f3","f1",g),b("n1","f1",g),b("n2","f2",g),b("n3","f3",g),b("n4","f4",g),b("p","n1",h),b("p","n2",h),b("p","n3",h),b("p","n4",h),b("u1","u2",i),b("u2","u3",i),b("u3","u1",i),b("c","t",j),b("p","c",k),b("cn1","cn2",k),b("cn3","cn4",k),b("cf1","cf2",k),b("cf3","cf4",k),THREE.Line.call(this,d,e,THREE.LinePieces),this.camera=a,this.matrixWorld=a.matrixWorld,this.matrixAutoUpdate=!1,this.pointMap=f,this.update()},THREE.CameraHelper.prototype=Object.create(THREE.Line.prototype),THREE.CameraHelper.prototype.update=function(){var a=new THREE.Vector3,b=new THREE.Camera,c=new THREE.Projector;return function(){function d(d,f,g,h){a.set(f,g,h),c.unprojectVector(a,b);var i=e.pointMap[d];if(void 0!==i)for(var j=0,k=i.length;j<k;j++)e.geometry.vertices[i[j]].copy(a)}var e=this,f=1,g=1;b.projectionMatrix.copy(this.camera.projectionMatrix),d("c",0,0,-1),d("t",0,0,1),d("n1",-f,-g,-1),d("n2",f,-g,-1),d("n3",-f,g,-1),d("n4",f,g,-1),d("f1",-f,-g,1),d("f2",f,-g,1),d("f3",-f,g,1),d("f4",f,g,1),d("u1",.7*f,1.1*g,-1),d("u2",.7*-f,1.1*g,-1),d("u3",0,2*g,-1),d("cf1",-f,0,1),d("cf2",f,0,1),d("cf3",0,-g,1),d("cf4",0,g,1),d("cn1",-f,0,-1),d("cn2",f,0,-1),d("cn3",0,-g,-1),d("cn4",0,g,-1),this.geometry.verticesNeedUpdate=!0}}(),THREE.DirectionalLightHelper=function(a,b){THREE.Object3D.call(this),this.light=a,this.light.updateMatrixWorld(),this.matrixWorld=a.matrixWorld,this.matrixAutoUpdate=!1;var c=new THREE.PlaneGeometry(b,b),d=new THREE.MeshBasicMaterial({wireframe:!0,fog:!1});d.color.copy(this.light.color).multiplyScalar(this.light.intensity),this.lightPlane=new THREE.Mesh(c,d),this.add(this.lightPlane),c=new THREE.Geometry,c.vertices.push(new THREE.Vector3),c.vertices.push(new THREE.Vector3),c.computeLineDistances(),d=new THREE.LineBasicMaterial({fog:!1}),d.color.copy(this.light.color).multiplyScalar(this.light.intensity),this.targetLine=new THREE.Line(c,d),this.add(this.targetLine),this.update()},THREE.DirectionalLightHelper.prototype=Object.create(THREE.Object3D.prototype),THREE.DirectionalLightHelper.prototype.update=function(){var a=new THREE.Vector3;return function(){a.getPositionFromMatrix(this.light.matrixWorld).negate(),this.lightPlane.lookAt(a),this.lightPlane.material.color.copy(this.light.color).multiplyScalar(this.light.intensity),this.targetLine.geometry.vertices[1].copy(a),this.targetLine.geometry.verticesNeedUpdate=!0,this.targetLine.material.color.copy(this.lightPlane.material.color)}}(),THREE.FaceNormalsHelper=function(a,b,c,d){this.object=a,this.size=b||1;for(var e=c||16776960,f=d||1,g=new THREE.Geometry,h=this.object.geometry.faces,i=0,j=h.length;i<j;i++)g.vertices.push(new THREE.Vector3),g.vertices.push(new THREE.Vector3);THREE.Line.call(this,g,new THREE.LineBasicMaterial({color:e,linewidth:f}),THREE.LinePieces),this.matrixAutoUpdate=!1,this.normalMatrix=new THREE.Matrix3,this.update()},THREE.FaceNormalsHelper.prototype=Object.create(THREE.Line.prototype),THREE.FaceNormalsHelper.prototype.update=function(a){var b=new THREE.Vector3;return function(a){this.object.updateMatrixWorld(!0),this.normalMatrix.getNormalMatrix(this.object.matrixWorld);for(var c=this.geometry.vertices,d=this.object.geometry.faces,e=this.object.matrixWorld,f=0,g=d.length;f<g;f++){var h=d[f];b.copy(h.normal).applyMatrix3(this.normalMatrix).normalize().multiplyScalar(this.size);var i=2*f;c[i].copy(h.centroid).applyMatrix4(e),c[i+1].addVectors(c[i],b)}return this.geometry.verticesNeedUpdate=!0,this}}(),THREE.GridHelper=function(a,b){var c=new THREE.Geometry,d=new THREE.LineBasicMaterial({vertexColors:THREE.VertexColors});this.color1=new THREE.Color(4473924),this.color2=new THREE.Color(8947848);for(var e=-a;e<=a;e+=b){c.vertices.push(new THREE.Vector3((-a),0,e),new THREE.Vector3(a,0,e),new THREE.Vector3(e,0,(-a)),new THREE.Vector3(e,0,a));var f=0===e?this.color1:this.color2;c.colors.push(f,f,f,f)}THREE.Line.call(this,c,d,THREE.LinePieces)},THREE.GridHelper.prototype=Object.create(THREE.Line.prototype),THREE.GridHelper.prototype.setColors=function(a,b){this.color1.set(a),this.color2.set(b),this.geometry.colorsNeedUpdate=!0},THREE.HemisphereLightHelper=function(a,b,c,d){THREE.Object3D.call(this),this.light=a,this.light.updateMatrixWorld(),this.matrixWorld=a.matrixWorld,this.matrixAutoUpdate=!1,this.colors=[new THREE.Color,new THREE.Color];var e=new THREE.SphereGeometry(b,4,2);e.applyMatrix((new THREE.Matrix4).makeRotationX(-Math.PI/2));for(var f=0,g=8;f<g;f++)e.faces[f].color=this.colors[f<4?0:1];var h=new THREE.MeshBasicMaterial({vertexColors:THREE.FaceColors,wireframe:!0});this.lightSphere=new THREE.Mesh(e,h),this.add(this.lightSphere),this.update()},THREE.HemisphereLightHelper.prototype=Object.create(THREE.Object3D.prototype),THREE.HemisphereLightHelper.prototype.update=function(){var a=new THREE.Vector3;return function(){this.colors[0].copy(this.light.color).multiplyScalar(this.light.intensity),this.colors[1].copy(this.light.groundColor).multiplyScalar(this.light.intensity),this.lightSphere.lookAt(a.getPositionFromMatrix(this.light.matrixWorld).negate()),this.lightSphere.geometry.colorsNeedUpdate=!0}}(),THREE.PointLightHelper=function(a,b){this.light=a,this.light.updateMatrixWorld();var c=new THREE.SphereGeometry(b,4,2),d=new THREE.MeshBasicMaterial({wireframe:!0,fog:!1});d.color.copy(this.light.color).multiplyScalar(this.light.intensity),THREE.Mesh.call(this,c,d),this.matrixWorld=this.light.matrixWorld,this.matrixAutoUpdate=!1},THREE.PointLightHelper.prototype=Object.create(THREE.Mesh.prototype),THREE.PointLightHelper.prototype.update=function(){this.material.color.copy(this.light.color).multiplyScalar(this.light.intensity);
},THREE.SpotLightHelper=function(a){THREE.Object3D.call(this),this.light=a,this.light.updateMatrixWorld(),this.matrixWorld=a.matrixWorld,this.matrixAutoUpdate=!1;var b=new THREE.CylinderGeometry(0,1,1,8,1,(!0));b.applyMatrix((new THREE.Matrix4).makeTranslation(0,-.5,0)),b.applyMatrix((new THREE.Matrix4).makeRotationX(-Math.PI/2));var c=new THREE.MeshBasicMaterial({wireframe:!0,fog:!1});this.cone=new THREE.Mesh(b,c),this.add(this.cone),this.update()},THREE.SpotLightHelper.prototype=Object.create(THREE.Object3D.prototype),THREE.SpotLightHelper.prototype.update=function(){var a=new THREE.Vector3,b=new THREE.Vector3;return function(){var c=this.light.distance?this.light.distance:1e4,d=c*Math.tan(this.light.angle);this.cone.scale.set(d,d,c),a.getPositionFromMatrix(this.light.matrixWorld),b.getPositionFromMatrix(this.light.target.matrixWorld),this.cone.lookAt(b.sub(a)),this.cone.material.color.copy(this.light.color).multiplyScalar(this.light.intensity)}}(),THREE.VertexNormalsHelper=function(a,b,c,d){this.object=a,this.size=b||1;for(var e=c||16711680,f=d||1,g=new THREE.Geometry,h=(a.geometry.vertices,a.geometry.faces),i=0,j=h.length;i<j;i++)for(var k=h[i],l=0,m=k.vertexNormals.length;l<m;l++)g.vertices.push(new THREE.Vector3),g.vertices.push(new THREE.Vector3);THREE.Line.call(this,g,new THREE.LineBasicMaterial({color:e,linewidth:f}),THREE.LinePieces),this.matrixAutoUpdate=!1,this.normalMatrix=new THREE.Matrix3,this.update()},THREE.VertexNormalsHelper.prototype=Object.create(THREE.Line.prototype),THREE.VertexNormalsHelper.prototype.update=function(a){var b=new THREE.Vector3;return function(a){var c=["a","b","c","d"];this.object.updateMatrixWorld(!0),this.normalMatrix.getNormalMatrix(this.object.matrixWorld);for(var d=this.geometry.vertices,e=this.object.geometry.vertices,f=this.object.geometry.faces,g=this.object.matrixWorld,h=0,i=0,j=f.length;i<j;i++)for(var k=f[i],l=0,m=k.vertexNormals.length;l<m;l++){var n=k[c[l]],o=e[n],p=k.vertexNormals[l];d[h].copy(o).applyMatrix4(g),b.copy(p).applyMatrix3(this.normalMatrix).normalize().multiplyScalar(this.size),b.add(d[h]),h+=1,d[h].copy(b),h+=1}return this.geometry.verticesNeedUpdate=!0,this}}(),THREE.VertexTangentsHelper=function(a,b,c,d){this.object=a,this.size=b||1;for(var e=c||255,f=d||1,g=new THREE.Geometry,h=(a.geometry.vertices,a.geometry.faces),i=0,j=h.length;i<j;i++)for(var k=h[i],l=0,m=k.vertexTangents.length;l<m;l++)g.vertices.push(new THREE.Vector3),g.vertices.push(new THREE.Vector3);THREE.Line.call(this,g,new THREE.LineBasicMaterial({color:e,linewidth:f}),THREE.LinePieces),this.matrixAutoUpdate=!1,this.update()},THREE.VertexTangentsHelper.prototype=Object.create(THREE.Line.prototype),THREE.VertexTangentsHelper.prototype.update=function(a){var b=new THREE.Vector3;return function(a){var c=["a","b","c","d"];this.object.updateMatrixWorld(!0);for(var d=this.geometry.vertices,e=this.object.geometry.vertices,f=this.object.geometry.faces,g=this.object.matrixWorld,h=0,i=0,j=f.length;i<j;i++)for(var k=f[i],l=0,m=k.vertexTangents.length;l<m;l++){var n=k[c[l]],o=e[n],p=k.vertexTangents[l];d[h].copy(o).applyMatrix4(g),b.copy(p).transformDirection(g).multiplyScalar(this.size),b.add(d[h]),h+=1,d[h].copy(b),h+=1}return this.geometry.verticesNeedUpdate=!0,this}}(),THREE.WireframeHelper=function(a){for(var b=[0,0],c={},d=function(a,b){return a-b},e=["a","b","c","d"],f=new THREE.Geometry,g=a.geometry.vertices,h=a.geometry.faces,i=0,j=h.length;i<j;i++)for(var k=h[i],l=0;l<3;l++){b[0]=k[e[l]],b[1]=k[e[(l+1)%3]],b.sort(d);var m=b.toString();void 0===c[m]&&(f.vertices.push(g[b[0]]),f.vertices.push(g[b[1]]),c[m]=!0)}THREE.Line.call(this,f,new THREE.LineBasicMaterial({color:16777215}),THREE.LinePieces),this.matrixAutoUpdate=!1,this.matrixWorld=a.matrixWorld},THREE.WireframeHelper.prototype=Object.create(THREE.Line.prototype),THREE.ImmediateRenderObject=function(){THREE.Object3D.call(this),this.render=function(a){}},THREE.ImmediateRenderObject.prototype=Object.create(THREE.Object3D.prototype),THREE.LensFlare=function(a,b,c,d,e){THREE.Object3D.call(this),this.lensFlares=[],this.positionScreen=new THREE.Vector3,this.customUpdateCallback=void 0,void 0!==a&&this.add(a,b,c,d,e)},THREE.LensFlare.prototype=Object.create(THREE.Object3D.prototype),THREE.LensFlare.prototype.add=function(a,b,c,d,e,f){void 0===b&&(b=-1),void 0===c&&(c=0),void 0===f&&(f=1),void 0===e&&(e=new THREE.Color(16777215)),void 0===d&&(d=THREE.NormalBlending),c=Math.min(c,Math.max(0,c)),this.lensFlares.push({texture:a,size:b,distance:c,x:0,y:0,z:0,scale:1,rotation:1,opacity:f,color:e,blending:d})},THREE.LensFlare.prototype.updateLensFlares=function(){var a,b,c=this.lensFlares.length,d=2*-this.positionScreen.x,e=2*-this.positionScreen.y;for(a=0;a<c;a++)b=this.lensFlares[a],b.x=this.positionScreen.x+d*b.distance,b.y=this.positionScreen.y+e*b.distance,b.wantedRotation=b.x*Math.PI*.25,b.rotation+=.25*(b.wantedRotation-b.rotation)},THREE.MorphBlendMesh=function(a,b){THREE.Mesh.call(this,a,b),this.animationsMap={},this.animationsList=[];var c=this.geometry.morphTargets.length,d="__default",e=0,f=c-1,g=c/1;this.createAnimation(d,e,f,g),this.setAnimationWeight(d,1)},THREE.MorphBlendMesh.prototype=Object.create(THREE.Mesh.prototype),THREE.MorphBlendMesh.prototype.createAnimation=function(a,b,c,d){var e={startFrame:b,endFrame:c,length:c-b+1,fps:d,duration:(c-b)/d,lastFrame:0,currentFrame:0,active:!1,time:0,direction:1,weight:1,directionBackwards:!1,mirroredLoop:!1};this.animationsMap[a]=e,this.animationsList.push(e)},THREE.MorphBlendMesh.prototype.autoCreateAnimations=function(a){for(var b,c=/([a-z]+)(\d+)/,d={},e=this.geometry,f=0,g=e.morphTargets.length;f<g;f++){var h=e.morphTargets[f],i=h.name.match(c);if(i&&i.length>1){var j=i[1];i[2];d[j]||(d[j]={start:1/0,end:-(1/0)});var k=d[j];f<k.start&&(k.start=f),f>k.end&&(k.end=f),b||(b=j)}}for(var j in d){var k=d[j];this.createAnimation(j,k.start,k.end,a)}this.firstAnimation=b},THREE.MorphBlendMesh.prototype.setAnimationDirectionForward=function(a){var b=this.animationsMap[a];b&&(b.direction=1,b.directionBackwards=!1)},THREE.MorphBlendMesh.prototype.setAnimationDirectionBackward=function(a){var b=this.animationsMap[a];b&&(b.direction=-1,b.directionBackwards=!0)},THREE.MorphBlendMesh.prototype.setAnimationFPS=function(a,b){var c=this.animationsMap[a];c&&(c.fps=b,c.duration=(c.end-c.start)/c.fps)},THREE.MorphBlendMesh.prototype.setAnimationDuration=function(a,b){var c=this.animationsMap[a];c&&(c.duration=b,c.fps=(c.end-c.start)/c.duration)},THREE.MorphBlendMesh.prototype.setAnimationWeight=function(a,b){var c=this.animationsMap[a];c&&(c.weight=b)},THREE.MorphBlendMesh.prototype.setAnimationTime=function(a,b){var c=this.animationsMap[a];c&&(c.time=b)},THREE.MorphBlendMesh.prototype.getAnimationTime=function(a){var b=0,c=this.animationsMap[a];return c&&(b=c.time),b},THREE.MorphBlendMesh.prototype.getAnimationDuration=function(a){var b=-1,c=this.animationsMap[a];return c&&(b=c.duration),b},THREE.MorphBlendMesh.prototype.playAnimation=function(a){var b=this.animationsMap[a];b?(b.time=0,b.active=!0):console.warn("animation["+a+"] undefined")},THREE.MorphBlendMesh.prototype.stopAnimation=function(a){var b=this.animationsMap[a];b&&(b.active=!1)},THREE.MorphBlendMesh.prototype.update=function(a){for(var b=0,c=this.animationsList.length;b<c;b++){var d=this.animationsList[b];if(d.active){var e=d.duration/d.length;d.time+=d.direction*a,d.mirroredLoop?(d.time>d.duration||d.time<0)&&(d.direction*=-1,d.time>d.duration&&(d.time=d.duration,d.directionBackwards=!0),d.time<0&&(d.time=0,d.directionBackwards=!1)):(d.time=d.time%d.duration,d.time<0&&(d.time+=d.duration));var f=d.startFrame+THREE.Math.clamp(Math.floor(d.time/e),0,d.length-1),g=d.weight;f!==d.currentFrame&&(this.morphTargetInfluences[d.lastFrame]=0,this.morphTargetInfluences[d.currentFrame]=1*g,this.morphTargetInfluences[f]=0,d.lastFrame=d.currentFrame,d.currentFrame=f);var h=d.time%e/e;d.directionBackwards&&(h=1-h),this.morphTargetInfluences[d.currentFrame]=h*g,this.morphTargetInfluences[d.lastFrame]=(1-h)*g}}},THREE.LensFlarePlugin=function(){function a(a,c){var d=b.createProgram(),e=b.createShader(b.FRAGMENT_SHADER),f=b.createShader(b.VERTEX_SHADER),g="precision "+c+" float;\n";return b.shaderSource(e,g+a.fragmentShader),b.shaderSource(f,g+a.vertexShader),b.compileShader(e),b.compileShader(f),b.attachShader(d,e),b.attachShader(d,f),b.linkProgram(d),d}var b,c,d,e={};this.init=function(f){b=f.context,c=f,d=f.getPrecision(),e.vertices=new Float32Array(16),e.faces=new Uint16Array(6);var g=0;e.vertices[g++]=-1,e.vertices[g++]=-1,e.vertices[g++]=0,e.vertices[g++]=0,e.vertices[g++]=1,e.vertices[g++]=-1,e.vertices[g++]=1,e.vertices[g++]=0,e.vertices[g++]=1,e.vertices[g++]=1,e.vertices[g++]=1,e.vertices[g++]=1,e.vertices[g++]=-1,e.vertices[g++]=1,e.vertices[g++]=0,e.vertices[g++]=1,g=0,e.faces[g++]=0,e.faces[g++]=1,e.faces[g++]=2,e.faces[g++]=0,e.faces[g++]=2,e.faces[g++]=3,e.vertexBuffer=b.createBuffer(),e.elementBuffer=b.createBuffer(),b.bindBuffer(b.ARRAY_BUFFER,e.vertexBuffer),b.bufferData(b.ARRAY_BUFFER,e.vertices,b.STATIC_DRAW),b.bindBuffer(b.ELEMENT_ARRAY_BUFFER,e.elementBuffer),b.bufferData(b.ELEMENT_ARRAY_BUFFER,e.faces,b.STATIC_DRAW),e.tempTexture=b.createTexture(),e.occlusionTexture=b.createTexture(),b.bindTexture(b.TEXTURE_2D,e.tempTexture),b.texImage2D(b.TEXTURE_2D,0,b.RGB,16,16,0,b.RGB,b.UNSIGNED_BYTE,null),b.texParameteri(b.TEXTURE_2D,b.TEXTURE_WRAP_S,b.CLAMP_TO_EDGE),b.texParameteri(b.TEXTURE_2D,b.TEXTURE_WRAP_T,b.CLAMP_TO_EDGE),b.texParameteri(b.TEXTURE_2D,b.TEXTURE_MAG_FILTER,b.NEAREST),b.texParameteri(b.TEXTURE_2D,b.TEXTURE_MIN_FILTER,b.NEAREST),b.bindTexture(b.TEXTURE_2D,e.occlusionTexture),b.texImage2D(b.TEXTURE_2D,0,b.RGBA,16,16,0,b.RGBA,b.UNSIGNED_BYTE,null),b.texParameteri(b.TEXTURE_2D,b.TEXTURE_WRAP_S,b.CLAMP_TO_EDGE),b.texParameteri(b.TEXTURE_2D,b.TEXTURE_WRAP_T,b.CLAMP_TO_EDGE),b.texParameteri(b.TEXTURE_2D,b.TEXTURE_MAG_FILTER,b.NEAREST),b.texParameteri(b.TEXTURE_2D,b.TEXTURE_MIN_FILTER,b.NEAREST),b.getParameter(b.MAX_VERTEX_TEXTURE_IMAGE_UNITS)<=0?(e.hasVertexTexture=!1,e.program=a(THREE.ShaderFlares.lensFlare,d)):(e.hasVertexTexture=!0,e.program=a(THREE.ShaderFlares.lensFlareVertexTexture,d)),e.attributes={},e.uniforms={},e.attributes.vertex=b.getAttribLocation(e.program,"position"),e.attributes.uv=b.getAttribLocation(e.program,"uv"),e.uniforms.renderType=b.getUniformLocation(e.program,"renderType"),e.uniforms.map=b.getUniformLocation(e.program,"map"),e.uniforms.occlusionMap=b.getUniformLocation(e.program,"occlusionMap"),e.uniforms.opacity=b.getUniformLocation(e.program,"opacity"),e.uniforms.color=b.getUniformLocation(e.program,"color"),e.uniforms.scale=b.getUniformLocation(e.program,"scale"),e.uniforms.rotation=b.getUniformLocation(e.program,"rotation"),e.uniforms.screenPosition=b.getUniformLocation(e.program,"screenPosition")},this.render=function(a,d,f,g){var h=a.__webglFlares,i=h.length;if(i){var j=new THREE.Vector3,k=g/f,l=.5*f,m=.5*g,n=16/g,o=new THREE.Vector2(n*k,n),p=new THREE.Vector3(1,1,0),q=new THREE.Vector2(1,1),r=e.uniforms,s=e.attributes;b.useProgram(e.program),b.enableVertexAttribArray(e.attributes.vertex),b.enableVertexAttribArray(e.attributes.uv),b.uniform1i(r.occlusionMap,0),b.uniform1i(r.map,1),b.bindBuffer(b.ARRAY_BUFFER,e.vertexBuffer),b.vertexAttribPointer(s.vertex,2,b.FLOAT,!1,16,0),b.vertexAttribPointer(s.uv,2,b.FLOAT,!1,16,8),b.bindBuffer(b.ELEMENT_ARRAY_BUFFER,e.elementBuffer),b.disable(b.CULL_FACE),b.depthMask(!1);var t,u,v,w,x;for(t=0;t<i;t++)if(n=16/g,o.set(n*k,n),w=h[t],j.set(w.matrixWorld.elements[12],w.matrixWorld.elements[13],w.matrixWorld.elements[14]),j.applyMatrix4(d.matrixWorldInverse),j.applyProjection(d.projectionMatrix),p.copy(j),q.x=p.x*l+l,q.y=p.y*m+m,e.hasVertexTexture||q.x>0&&q.x<f&&q.y>0&&q.y<g)for(b.activeTexture(b.TEXTURE1),b.bindTexture(b.TEXTURE_2D,e.tempTexture),b.copyTexImage2D(b.TEXTURE_2D,0,b.RGB,q.x-8,q.y-8,16,16,0),b.uniform1i(r.renderType,0),b.uniform2f(r.scale,o.x,o.y),b.uniform3f(r.screenPosition,p.x,p.y,p.z),b.disable(b.BLEND),b.enable(b.DEPTH_TEST),b.drawElements(b.TRIANGLES,6,b.UNSIGNED_SHORT,0),b.activeTexture(b.TEXTURE0),b.bindTexture(b.TEXTURE_2D,e.occlusionTexture),b.copyTexImage2D(b.TEXTURE_2D,0,b.RGBA,q.x-8,q.y-8,16,16,0),b.uniform1i(r.renderType,1),b.disable(b.DEPTH_TEST),b.activeTexture(b.TEXTURE1),b.bindTexture(b.TEXTURE_2D,e.tempTexture),b.drawElements(b.TRIANGLES,6,b.UNSIGNED_SHORT,0),w.positionScreen.copy(p),w.customUpdateCallback?w.customUpdateCallback(w):w.updateLensFlares(),b.uniform1i(r.renderType,2),b.enable(b.BLEND),u=0,v=w.lensFlares.length;u<v;u++)x=w.lensFlares[u],x.opacity>.001&&x.scale>.001&&(p.x=x.x,p.y=x.y,p.z=x.z,n=x.size*x.scale/g,o.x=n*k,o.y=n,b.uniform3f(r.screenPosition,p.x,p.y,p.z),b.uniform2f(r.scale,o.x,o.y),b.uniform1f(r.rotation,x.rotation),b.uniform1f(r.opacity,x.opacity),b.uniform3f(r.color,x.color.r,x.color.g,x.color.b),c.setBlending(x.blending,x.blendEquation,x.blendSrc,x.blendDst),c.setTexture(x.texture,1),b.drawElements(b.TRIANGLES,6,b.UNSIGNED_SHORT,0));b.enable(b.CULL_FACE),b.enable(b.DEPTH_TEST),b.depthMask(!0)}}},THREE.ShadowMapPlugin=function(){function a(a,b){var c=new THREE.DirectionalLight;c.isVirtual=!0,c.onlyShadow=!0,c.castShadow=!0,c.shadowCameraNear=a.shadowCameraNear,c.shadowCameraFar=a.shadowCameraFar,c.shadowCameraLeft=a.shadowCameraLeft,c.shadowCameraRight=a.shadowCameraRight,c.shadowCameraBottom=a.shadowCameraBottom,c.shadowCameraTop=a.shadowCameraTop,c.shadowCameraVisible=a.shadowCameraVisible,c.shadowDarkness=a.shadowDarkness,c.shadowBias=a.shadowCascadeBias[b],c.shadowMapWidth=a.shadowCascadeWidth[b],c.shadowMapHeight=a.shadowCascadeHeight[b],c.pointsWorld=[],c.pointsFrustum=[];for(var d=c.pointsWorld,e=c.pointsFrustum,f=0;f<8;f++)d[f]=new THREE.Vector3,e[f]=new THREE.Vector3;var g=a.shadowCascadeNearZ[b],h=a.shadowCascadeFarZ[b];return e[0].set(-1,-1,g),e[1].set(1,-1,g),e[2].set(-1,1,g),e[3].set(1,1,g),e[4].set(-1,-1,h),e[5].set(1,-1,h),e[6].set(-1,1,h),e[7].set(1,1,h),c}function b(a,b){var c=a.shadowCascadeArray[b];c.position.copy(a.position),c.target.position.copy(a.target.position),c.lookAt(c.target),c.shadowCameraVisible=a.shadowCameraVisible,c.shadowDarkness=a.shadowDarkness,c.shadowBias=a.shadowCascadeBias[b];var d=a.shadowCascadeNearZ[b],e=a.shadowCascadeFarZ[b],f=c.pointsFrustum;f[0].z=d,f[1].z=d,f[2].z=d,f[3].z=d,f[4].z=e,f[5].z=e,f[6].z=e,f[7].z=e}function c(a,b){var c=b.shadowCamera,d=b.pointsFrustum,e=b.pointsWorld;m.set(1/0,1/0,1/0),n.set(-(1/0),-(1/0),-(1/0));for(var f=0;f<8;f++){var g=e[f];g.copy(d[f]),THREE.ShadowMapPlugin.__projector.unprojectVector(g,a),g.applyMatrix4(c.matrixWorldInverse),g.x<m.x&&(m.x=g.x),g.x>n.x&&(n.x=g.x),g.y<m.y&&(m.y=g.y),g.y>n.y&&(n.y=g.y),g.z<m.z&&(m.z=g.z),g.z>n.z&&(n.z=g.z)}c.left=m.x,c.right=n.x,c.top=n.y,c.bottom=m.y,c.updateProjectionMatrix()}function d(a){return a.material instanceof THREE.MeshFaceMaterial?a.material.materials[0]:a.material}var e,f,g,h,i,j,k=new THREE.Frustum,l=new THREE.Matrix4,m=new THREE.Vector3,n=new THREE.Vector3,o=new THREE.Vector3;this.init=function(a){e=a.context,f=a;var b=THREE.ShaderLib.depthRGBA,c=THREE.UniformsUtils.clone(b.uniforms);g=new THREE.ShaderMaterial({fragmentShader:b.fragmentShader,vertexShader:b.vertexShader,uniforms:c}),h=new THREE.ShaderMaterial({fragmentShader:b.fragmentShader,vertexShader:b.vertexShader,uniforms:c,morphTargets:!0}),i=new THREE.ShaderMaterial({fragmentShader:b.fragmentShader,vertexShader:b.vertexShader,uniforms:c,skinning:!0}),j=new THREE.ShaderMaterial({fragmentShader:b.fragmentShader,vertexShader:b.vertexShader,uniforms:c,morphTargets:!0,skinning:!0}),g._shadowPass=!0,h._shadowPass=!0,i._shadowPass=!0,j._shadowPass=!0},this.render=function(a,b){f.shadowMapEnabled&&f.shadowMapAutoUpdate&&this.update(a,b)},this.update=function(m,n){var p,q,r,s,t,u,v,w,x,y,z,A,B,C,D=[],E=0,F=null;for(e.clearColor(1,1,1,1),e.disable(e.BLEND),e.enable(e.CULL_FACE),e.frontFace(e.CCW),f.shadowMapCullFace===THREE.CullFaceFront?e.cullFace(e.FRONT):e.cullFace(e.BACK),f.setDepthTest(!0),p=0,q=m.__lights.length;p<q;p++)if(B=m.__lights[p],B.castShadow)if(B instanceof THREE.DirectionalLight&&B.shadowCascade)for(t=0;t<B.shadowCascadeCount;t++){var G;if(B.shadowCascadeArray[t])G=B.shadowCascadeArray[t];else{G=a(B,t),G.originalCamera=n;var H=new THREE.Gyroscope;H.position=B.shadowCascadeOffset,H.add(G),H.add(G.target),n.add(H),B.shadowCascadeArray[t]=G,console.log("Created virtualLight",G)}b(B,t),D[E]=G,E++}else D[E]=B,E++;for(p=0,q=D.length;p<q;p++){if(B=D[p],!B.shadowMap){var I=THREE.LinearFilter;f.shadowMapType===THREE.PCFSoftShadowMap&&(I=THREE.NearestFilter);var J={minFilter:I,magFilter:I,format:THREE.RGBAFormat};B.shadowMap=new THREE.WebGLRenderTarget(B.shadowMapWidth,B.shadowMapHeight,J),B.shadowMapSize=new THREE.Vector2(B.shadowMapWidth,B.shadowMapHeight),B.shadowMatrix=new THREE.Matrix4}if(!B.shadowCamera){if(B instanceof THREE.SpotLight)B.shadowCamera=new THREE.PerspectiveCamera(B.shadowCameraFov,B.shadowMapWidth/B.shadowMapHeight,B.shadowCameraNear,B.shadowCameraFar);else{if(!(B instanceof THREE.DirectionalLight)){console.error("Unsupported light type for shadow");continue}B.shadowCamera=new THREE.OrthographicCamera(B.shadowCameraLeft,B.shadowCameraRight,B.shadowCameraTop,B.shadowCameraBottom,B.shadowCameraNear,B.shadowCameraFar)}m.add(B.shadowCamera),m.autoUpdate===!0&&m.updateMatrixWorld()}for(B.shadowCameraVisible&&!B.cameraHelper&&(B.cameraHelper=new THREE.CameraHelper(B.shadowCamera),B.shadowCamera.add(B.cameraHelper)),B.isVirtual&&G.originalCamera==n&&c(n,B),u=B.shadowMap,v=B.shadowMatrix,w=B.shadowCamera,w.position.getPositionFromMatrix(B.matrixWorld),o.getPositionFromMatrix(B.target.matrixWorld),w.lookAt(o),w.updateMatrixWorld(),w.matrixWorldInverse.getInverse(w.matrixWorld),B.cameraHelper&&(B.cameraHelper.visible=B.shadowCameraVisible),B.shadowCameraVisible&&B.cameraHelper.update(),v.set(.5,0,0,.5,0,.5,0,.5,0,0,.5,.5,0,0,0,1),v.multiply(w.projectionMatrix),v.multiply(w.matrixWorldInverse),l.multiplyMatrices(w.projectionMatrix,w.matrixWorldInverse),k.setFromMatrix(l),f.setRenderTarget(u),f.clear(),C=m.__webglObjects,r=0,s=C.length;r<s;r++)z=C[r],A=z.object,z.render=!1,A.visible&&A.castShadow&&((A instanceof THREE.Mesh||A instanceof THREE.ParticleSystem)&&A.frustumCulled&&!k.intersectsObject(A)||(A._modelViewMatrix.multiplyMatrices(w.matrixWorldInverse,A.matrixWorld),z.render=!0));var K,L,M;for(r=0,s=C.length;r<s;r++)z=C[r],z.render&&(A=z.object,x=z.buffer,K=d(A),L=A.geometry.morphTargets.length>0&&K.morphTargets,M=A instanceof THREE.SkinnedMesh&&K.skinning,y=A.customDepthMaterial?A.customDepthMaterial:M?L?j:i:L?h:g,x instanceof THREE.BufferGeometry?f.renderBufferDirect(w,m.__lights,F,y,x,A):f.renderBuffer(w,m.__lights,F,y,x,A));for(C=m.__webglObjectsImmediate,r=0,s=C.length;r<s;r++)z=C[r],A=z.object,A.visible&&A.castShadow&&(A._modelViewMatrix.multiplyMatrices(w.matrixWorldInverse,A.matrixWorld),f.renderImmediateObject(w,m.__lights,F,g,A))}var N=f.getClearColor(),O=f.getClearAlpha();e.clearColor(N.r,N.g,N.b,O),e.enable(e.BLEND),f.shadowMapCullFace===THREE.CullFaceFront&&e.cullFace(e.BACK)}},THREE.ShadowMapPlugin.__projector=new THREE.Projector,THREE.SpritePlugin=function(){function a(a,b){var d=c.createProgram(),e=c.createShader(c.FRAGMENT_SHADER),f=c.createShader(c.VERTEX_SHADER),g="precision "+b+" float;\n";return c.shaderSource(e,g+a.fragmentShader),c.shaderSource(f,g+a.vertexShader),c.compileShader(e),c.compileShader(f),c.attachShader(d,e),c.attachShader(d,f),c.linkProgram(d),d}function b(a,b){return a.z!==b.z?b.z-a.z:b.id-a.id}var c,d,e,f={};this.init=function(b){c=b.context,d=b,e=b.getPrecision(),f.vertices=new Float32Array(16),f.faces=new Uint16Array(6);var g=0;f.vertices[g++]=-1,f.vertices[g++]=-1,f.vertices[g++]=0,f.vertices[g++]=0,f.vertices[g++]=1,f.vertices[g++]=-1,f.vertices[g++]=1,f.vertices[g++]=0,f.vertices[g++]=1,f.vertices[g++]=1,f.vertices[g++]=1,f.vertices[g++]=1,f.vertices[g++]=-1,f.vertices[g++]=1,f.vertices[g++]=0,f.vertices[g++]=1,g=0,f.faces[g++]=0,f.faces[g++]=1,f.faces[g++]=2,f.faces[g++]=0,f.faces[g++]=2,f.faces[g++]=3,f.vertexBuffer=c.createBuffer(),f.elementBuffer=c.createBuffer(),c.bindBuffer(c.ARRAY_BUFFER,f.vertexBuffer),c.bufferData(c.ARRAY_BUFFER,f.vertices,c.STATIC_DRAW),c.bindBuffer(c.ELEMENT_ARRAY_BUFFER,f.elementBuffer),c.bufferData(c.ELEMENT_ARRAY_BUFFER,f.faces,c.STATIC_DRAW),f.program=a(THREE.ShaderSprite.sprite,e),f.attributes={},f.uniforms={},f.attributes.position=c.getAttribLocation(f.program,"position"),f.attributes.uv=c.getAttribLocation(f.program,"uv"),f.uniforms.uvOffset=c.getUniformLocation(f.program,"uvOffset"),f.uniforms.uvScale=c.getUniformLocation(f.program,"uvScale"),f.uniforms.rotation=c.getUniformLocation(f.program,"rotation"),f.uniforms.scale=c.getUniformLocation(f.program,"scale"),f.uniforms.alignment=c.getUniformLocation(f.program,"alignment"),f.uniforms.color=c.getUniformLocation(f.program,"color"),f.uniforms.map=c.getUniformLocation(f.program,"map"),f.uniforms.opacity=c.getUniformLocation(f.program,"opacity"),f.uniforms.useScreenCoordinates=c.getUniformLocation(f.program,"useScreenCoordinates"),f.uniforms.sizeAttenuation=c.getUniformLocation(f.program,"sizeAttenuation"),f.uniforms.screenPosition=c.getUniformLocation(f.program,"screenPosition"),f.uniforms.modelViewMatrix=c.getUniformLocation(f.program,"modelViewMatrix"),f.uniforms.projectionMatrix=c.getUniformLocation(f.program,"projectionMatrix"),f.uniforms.fogType=c.getUniformLocation(f.program,"fogType"),f.uniforms.fogDensity=c.getUniformLocation(f.program,"fogDensity"),f.uniforms.fogNear=c.getUniformLocation(f.program,"fogNear"),f.uniforms.fogFar=c.getUniformLocation(f.program,"fogFar"),f.uniforms.fogColor=c.getUniformLocation(f.program,"fogColor"),f.uniforms.alphaTest=c.getUniformLocation(f.program,"alphaTest")},this.render=function(a,e,g,h){var i=a.__webglSprites,j=i.length;if(j){var k=f.attributes,l=f.uniforms,m=h/g,n=.5*g,o=.5*h;c.useProgram(f.program),c.enableVertexAttribArray(k.position),c.enableVertexAttribArray(k.uv),c.disable(c.CULL_FACE),c.enable(c.BLEND),c.bindBuffer(c.ARRAY_BUFFER,f.vertexBuffer),c.vertexAttribPointer(k.position,2,c.FLOAT,!1,16,0),c.vertexAttribPointer(k.uv,2,c.FLOAT,!1,16,8),c.bindBuffer(c.ELEMENT_ARRAY_BUFFER,f.elementBuffer),c.uniformMatrix4fv(l.projectionMatrix,!1,e.projectionMatrix.elements),c.activeTexture(c.TEXTURE0),c.uniform1i(l.map,0);var p=0,q=0,r=a.fog;r?(c.uniform3f(l.fogColor,r.color.r,r.color.g,r.color.b),r instanceof THREE.Fog?(c.uniform1f(l.fogNear,r.near),c.uniform1f(l.fogFar,r.far),c.uniform1i(l.fogType,1),p=1,q=1):r instanceof THREE.FogExp2&&(c.uniform1f(l.fogDensity,r.density),c.uniform1i(l.fogType,2),p=2,q=2)):(c.uniform1i(l.fogType,0),p=0,q=0);var s,t,u,v,w,x=[];for(s=0;s<j;s++)t=i[s],u=t.material,t.visible&&0!==u.opacity&&(u.useScreenCoordinates?t.z=-t.position.z:(t._modelViewMatrix.multiplyMatrices(e.matrixWorldInverse,t.matrixWorld),t.z=-t._modelViewMatrix.elements[14]));for(i.sort(b),s=0;s<j;s++)t=i[s],u=t.material,t.visible&&0!==u.opacity&&u.map&&u.map.image&&u.map.image.width&&(c.uniform1f(l.alphaTest,u.alphaTest),u.useScreenCoordinates===!0?(c.uniform1i(l.useScreenCoordinates,1),c.uniform3f(l.screenPosition,(t.position.x*d.devicePixelRatio-n)/n,(o-t.position.y*d.devicePixelRatio)/o,Math.max(0,Math.min(1,t.position.z))),x[0]=d.devicePixelRatio,x[1]=d.devicePixelRatio):(c.uniform1i(l.useScreenCoordinates,0),c.uniform1i(l.sizeAttenuation,u.sizeAttenuation?1:0),c.uniformMatrix4fv(l.modelViewMatrix,!1,t._modelViewMatrix.elements),x[0]=1,x[1]=1),w=a.fog&&u.fog?q:0,p!==w&&(c.uniform1i(l.fogType,w),p=w),v=1/(u.scaleByViewport?h:1),x[0]*=v*m*t.scale.x,x[1]*=v*t.scale.y,c.uniform2f(l.uvScale,u.uvScale.x,u.uvScale.y),c.uniform2f(l.uvOffset,u.uvOffset.x,u.uvOffset.y),c.uniform2f(l.alignment,u.alignment.x,u.alignment.y),c.uniform1f(l.opacity,u.opacity),c.uniform3f(l.color,u.color.r,u.color.g,u.color.b),c.uniform1f(l.rotation,t.rotation),c.uniform2fv(l.scale,x),d.setBlending(u.blending,u.blendEquation,u.blendSrc,u.blendDst),d.setDepthTest(u.depthTest),d.setDepthWrite(u.depthWrite),d.setTexture(u.map,0),c.drawElements(c.TRIANGLES,6,c.UNSIGNED_SHORT,0));c.enable(c.CULL_FACE)}}},THREE.DepthPassPlugin=function(){function a(a){return a.material instanceof THREE.MeshFaceMaterial?a.material.materials[0]:a.material}this.enabled=!1,this.renderTarget=null;var b,c,d,e,f,g,h=new THREE.Frustum,i=new THREE.Matrix4;this.init=function(a){b=a.context,c=a;var h=THREE.ShaderLib.depthRGBA,i=THREE.UniformsUtils.clone(h.uniforms);d=new THREE.ShaderMaterial({fragmentShader:h.fragmentShader,vertexShader:h.vertexShader,uniforms:i}),e=new THREE.ShaderMaterial({fragmentShader:h.fragmentShader,vertexShader:h.vertexShader,uniforms:i,morphTargets:!0}),f=new THREE.ShaderMaterial({fragmentShader:h.fragmentShader,vertexShader:h.vertexShader,uniforms:i,skinning:!0}),g=new THREE.ShaderMaterial({fragmentShader:h.fragmentShader,vertexShader:h.vertexShader,uniforms:i,morphTargets:!0,skinning:!0}),d._shadowPass=!0,e._shadowPass=!0,f._shadowPass=!0,g._shadowPass=!0},this.render=function(a,b){this.enabled&&this.update(a,b)},this.update=function(j,k){var l,m,n,o,p,q,r,s=null;for(b.clearColor(1,1,1,1),b.disable(b.BLEND),c.setDepthTest(!0),j.autoUpdate===!0&&j.updateMatrixWorld(),k.matrixWorldInverse.getInverse(k.matrixWorld),i.multiplyMatrices(k.projectionMatrix,k.matrixWorldInverse),h.setFromMatrix(i),c.setRenderTarget(this.renderTarget),c.clear(),r=j.__webglObjects,l=0,m=r.length;l<m;l++)p=r[l],q=p.object,p.render=!1,q.visible&&((q instanceof THREE.Mesh||q instanceof THREE.ParticleSystem)&&q.frustumCulled&&!h.intersectsObject(q)||(q._modelViewMatrix.multiplyMatrices(k.matrixWorldInverse,q.matrixWorld),p.render=!0));var t,u,v;for(l=0,m=r.length;l<m;l++)if(p=r[l],p.render){if(q=p.object,n=p.buffer,q instanceof THREE.ParticleSystem&&!q.customDepthMaterial)continue;t=a(q),t&&c.setMaterialFaces(q.material),u=q.geometry.morphTargets.length>0&&t.morphTargets,v=q instanceof THREE.SkinnedMesh&&t.skinning,o=q.customDepthMaterial?q.customDepthMaterial:v?u?g:f:u?e:d,n instanceof THREE.BufferGeometry?c.renderBufferDirect(k,j.__lights,s,o,n,q):c.renderBuffer(k,j.__lights,s,o,n,q)}for(r=j.__webglObjectsImmediate,l=0,m=r.length;l<m;l++)p=r[l],q=p.object,q.visible&&(q._modelViewMatrix.multiplyMatrices(k.matrixWorldInverse,q.matrixWorld),c.renderImmediateObject(k,j.__lights,s,d,q));var w=c.getClearColor(),x=c.getClearAlpha();b.clearColor(w.r,w.g,w.b,x),b.enable(b.BLEND)}},THREE.ShaderFlares={lensFlareVertexTexture:{vertexShader:["uniform lowp int renderType;","uniform vec3 screenPosition;","uniform vec2 scale;","uniform float rotation;","uniform sampler2D occlusionMap;","attribute vec2 position;","attribute vec2 uv;","varying vec2 vUV;","varying float vVisibility;","void main() {","vUV = uv;","vec2 pos = position;","if( renderType == 2 ) {","vec4 visibility = texture2D( occlusionMap, vec2( 0.1, 0.1 ) );","visibility += texture2D( occlusionMap, vec2( 0.5, 0.1 ) );","visibility += texture2D( occlusionMap, vec2( 0.9, 0.1 ) );","visibility += texture2D( occlusionMap, vec2( 0.9, 0.5 ) );","visibility += texture2D( occlusionMap, vec2( 0.9, 0.9 ) );","visibility += texture2D( occlusionMap, vec2( 0.5, 0.9 ) );","visibility += texture2D( occlusionMap, vec2( 0.1, 0.9 ) );","visibility += texture2D( occlusionMap, vec2( 0.1, 0.5 ) );","visibility += texture2D( occlusionMap, vec2( 0.5, 0.5 ) );","vVisibility =        visibility.r / 9.0;","vVisibility *= 1.0 - visibility.g / 9.0;","vVisibility *=       visibility.b / 9.0;","vVisibility *= 1.0 - visibility.a / 9.0;","pos.x = cos( rotation ) * position.x - sin( rotation ) * position.y;","pos.y = sin( rotation ) * position.x + cos( rotation ) * position.y;","}","gl_Position = vec4( ( pos * scale + screenPosition.xy ).xy, screenPosition.z, 1.0 );","}"].join("\n"),fragmentShader:["uniform lowp int renderType;","uniform sampler2D map;","uniform float opacity;","uniform vec3 color;","varying vec2 vUV;","varying float vVisibility;","void main() {","if( renderType == 0 ) {","gl_FragColor = vec4( 1.0, 0.0, 1.0, 0.0 );","} else if( renderType == 1 ) {","gl_FragColor = texture2D( map, vUV );","} else {","vec4 texture = texture2D( map, vUV );","texture.a *= opacity * vVisibility;","gl_FragColor = texture;","gl_FragColor.rgb *= color;","}","}"].join("\n")},lensFlare:{vertexShader:["uniform lowp int renderType;","uniform vec3 screenPosition;","uniform vec2 scale;","uniform float rotation;","attribute vec2 position;","attribute vec2 uv;","varying vec2 vUV;","void main() {","vUV = uv;","vec2 pos = position;","if( renderType == 2 ) {","pos.x = cos( rotation ) * position.x - sin( rotation ) * position.y;","pos.y = sin( rotation ) * position.x + cos( rotation ) * position.y;","}","gl_Position = vec4( ( pos * scale + screenPosition.xy ).xy, screenPosition.z, 1.0 );","}"].join("\n"),fragmentShader:["precision mediump float;","uniform lowp int renderType;","uniform sampler2D map;","uniform sampler2D occlusionMap;","uniform float opacity;","uniform vec3 color;","varying vec2 vUV;","void main() {","if( renderType == 0 ) {","gl_FragColor = vec4( texture2D( map, vUV ).rgb, 0.0 );","} else if( renderType == 1 ) {","gl_FragColor = texture2D( map, vUV );","} else {","float visibility = texture2D( occlusionMap, vec2( 0.5, 0.1 ) ).a;","visibility += texture2D( occlusionMap, vec2( 0.9, 0.5 ) ).a;","visibility += texture2D( occlusionMap, vec2( 0.5, 0.9 ) ).a;","visibility += texture2D( occlusionMap, vec2( 0.1, 0.5 ) ).a;","visibility = ( 1.0 - visibility / 4.0 );","vec4 texture = texture2D( map, vUV );","texture.a *= opacity * visibility;","gl_FragColor = texture;","gl_FragColor.rgb *= color;","}","}"].join("\n")}},THREE.ShaderSprite={sprite:{vertexShader:["uniform int useScreenCoordinates;","uniform int sizeAttenuation;","uniform vec3 screenPosition;","uniform mat4 modelViewMatrix;","uniform mat4 projectionMatrix;","uniform float rotation;","uniform vec2 scale;","uniform vec2 alignment;","uniform vec2 uvOffset;","uniform vec2 uvScale;","attribute vec2 position;","attribute vec2 uv;","varying vec2 vUV;","void main() {","vUV = uvOffset + uv * uvScale;","vec2 alignedPosition = position + alignment;","vec2 rotatedPosition;","rotatedPosition.x = ( cos( rotation ) * alignedPosition.x - sin( rotation ) * alignedPosition.y ) * scale.x;","rotatedPosition.y = ( sin( rotation ) * alignedPosition.x + cos( rotation ) * alignedPosition.y ) * scale.y;","vec4 finalPosition;","if( useScreenCoordinates != 0 ) {","finalPosition = vec4( screenPosition.xy + rotatedPosition, screenPosition.z, 1.0 );","} else {","finalPosition = projectionMatrix * modelViewMatrix * vec4( 0.0, 0.0, 0.0, 1.0 );","finalPosition.xy += rotatedPosition * ( sizeAttenuation == 1 ? 1.0 : finalPosition.z );","}","gl_Position = finalPosition;","}"].join("\n"),fragmentShader:["uniform vec3 color;","uniform sampler2D map;","uniform float opacity;","uniform int fogType;","uniform vec3 fogColor;","uniform float fogDensity;","uniform float fogNear;","uniform float fogFar;","uniform float alphaTest;","varying vec2 vUV;","void main() {","vec4 texture = texture2D( map, vUV );","if ( texture.a < alphaTest ) discard;","gl_FragColor = vec4( color * texture.xyz, texture.a * opacity );","if ( fogType > 0 ) {","float depth = gl_FragCoord.z / gl_FragCoord.w;","float fogFactor = 0.0;","if ( fogType == 1 ) {","fogFactor = smoothstep( fogNear, fogFar, depth );","} else {","const float LOG2 = 1.442695;","float fogFactor = exp2( - fogDensity * fogDensity * depth * depth * LOG2 );","fogFactor = 1.0 - clamp( fogFactor, 0.0, 1.0 );","}","gl_FragColor = mix( gl_FragColor, vec4( fogColor, gl_FragColor.w ), fogFactor );","}","}"].join("\n")}},THREE.PointerLockControls=function(a){var b=this;a.rotation.set(0,0,0);var c=new THREE.Object3D;c.add(a);var d=new THREE.Object3D;d.position.y=10,d.add(c);var e=Math.PI/2,f=function(a){if(b.enabled!==!1){var f=a.movementX||a.mozMovementX||0,g=a.movementY||a.mozMovementY||0;d.rotation.y-=.002*f,c.rotation.x-=.002*g,c.rotation.x=Math.max(-e,Math.min(e,c.rotation.x))}};document.addEventListener("mousemove",f,!1),this.enabled=!1,
this.getObject=function(){return d},this.getDirection=function(){var a=new THREE.Vector3(0,0,(-1)),b=new THREE.Euler(0,0,0,"YXZ");return function(e){return b.set(c.rotation.x,d.rotation.y,0),e.copy(a).applyEuler(b),e}}()},function(){var a=window.requestAnimationFrame||window.mozRequestAnimationFrame||window.webkitRequestAnimationFrame||function(a){return window.setTimeout(a,20)},b=function(c,d){function e(){this.q=[],this.add=function(a){this.q.push(a)};var a,b;this.call=function(){for(a=0,b=this.q.length;a<b;a++)this.q[a].call()}}function f(a,b){return a.currentStyle?a.currentStyle[b]:window.getComputedStyle?window.getComputedStyle(a,null).getPropertyValue(b):a.style[b]}function g(b,c){if(b.resizedAttached){if(b.resizedAttached)return void b.resizedAttached.add(c)}else b.resizedAttached=new e,b.resizedAttached.add(c);b.resizeSensor=document.createElement("div"),b.resizeSensor.className="resize-sensor";var d="position: absolute; left: 0; top: 0; right: 0; bottom: 0; overflow: hidden; z-index: -1; visibility: hidden;",g="position: absolute; left: 0; top: 0; transition: 0s;";b.resizeSensor.style.cssText=d,b.resizeSensor.innerHTML='<div class="resize-sensor-expand" style="'+d+'"><div style="'+g+'"></div></div><div class="resize-sensor-shrink" style="'+d+'"><div style="'+g+' width: 200%; height: 200%"></div></div>',b.appendChild(b.resizeSensor),"static"==f(b,"position")&&(b.style.position="relative");var h=b.resizeSensor.childNodes[0],i=h.childNodes[0],j=b.resizeSensor.childNodes[1],k=function(){i.style.width=1e5+"px",i.style.height=1e5+"px",h.scrollLeft=1e5,h.scrollTop=1e5,j.scrollLeft=1e5,j.scrollTop=1e5};k();var l=!1,m=function(){b.resizedAttached&&(l&&(b.resizedAttached.call(),l=!1),a(m))};a(m);var n,o,p,q,r=function(){(p=b.offsetWidth)==n&&(q=b.offsetHeight)==o||(l=!0,n=p,o=q),k()},s=function(a,b,c){a.attachEvent?a.attachEvent("on"+b,c):a.addEventListener(b,c)};s(h,"scroll",r),s(j,"scroll",r)}var h=Object.prototype.toString.call(c),i="[object Array]"===h||"[object NodeList]"===h||"[object HTMLCollection]"===h||"undefined"!=typeof jQuery&&c instanceof jQuery||"undefined"!=typeof Elements&&c instanceof Elements;if(i)for(var j=0,k=c.length;j<k;j++)g(c[j],d);else g(c,d);this.detach=function(){if(i)for(var a=0,d=c.length;a<d;a++)b.detach(c[a]);else b.detach(c)}};b.detach=function(a){a.resizeSensor&&(a.removeChild(a.resizeSensor),delete a.resizeSensor,delete a.resizedAttached)},"undefined"!=typeof module&&"undefined"!=typeof module.exports?module.exports=b:window.ResizeSensor=b}();var scene,camera,renderer,controls,container=$("#panorama-viewer"),blocker=container.parent(),element=document.body,pointerlockchange=function(a){document.pointerLockElement===element||document.mozPointerLockElement===element||document.webkitPointerLockElement===element?($("body").css("overflow-y","hidden"),blocker.css("display","block"),container.css("display","block"),controls.enabled=!0):($("body").css("overflow-y","auto"),blocker.css("display","none"),container.css("display","none"),controls.enabled=!1)};document.addEventListener("pointerlockchange",pointerlockchange,!1),document.addEventListener("mozpointerlockchange",pointerlockchange,!1),document.addEventListener("webkitpointerlockchange",pointerlockchange,!1),new ResizeSensor(container.get(),function(){"undefined"!=typeof scene&&(camera.aspect=container.innerWidth()/container.innerHeight(),camera.updateProjectionMatrix(),renderer.setSize(container.innerWidth(),container.innerHeight()))}),init(),animate();